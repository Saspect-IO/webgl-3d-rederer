{"version":3,"sources":["webpack://qrius-engine-webgl/./node_modules/tslib/tslib.es6.js","webpack://qrius-engine-webgl/./src/modules/global_constants.ts","webpack://qrius-engine-webgl/./src/modules/utils.ts","webpack://qrius-engine-webgl/./src/core/GLExtend.ts","webpack://qrius-engine-webgl/./src/core/math.ts","webpack://qrius-engine-webgl/./src/core/transformation.ts","webpack://qrius-engine-webgl/./src/core/camera.ts","webpack://qrius-engine-webgl/./src/core/shaderProgram.ts","webpack://qrius-engine-webgl/./src/core/shaderExtend.ts","webpack://qrius-engine-webgl/./src/core/geometry.ts","webpack://qrius-engine-webgl/./src/core/vbuffer.ts","webpack://qrius-engine-webgl/./src/core/primitives.ts","webpack://qrius-engine-webgl/./src/core/texture.ts","webpack://qrius-engine-webgl/./src/core/obj.ts","webpack://qrius-engine-webgl/./src/core/model.ts","webpack://qrius-engine-webgl/./src/main.ts"],"names":["ProgramEntrySettings","CameraSettings","ControlsSettings","GLSetttings","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","body","f","y","t","g","_","label","sent","trys","ops","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","degToRad","Math","PI","WEBGL_CANVAS_ID","gl","rgb_32_bit","alpha","canvas","document","getElementById","WEBGL_CONTEXT","WEBGL_CONTEXT_EXPERIMENTAL","WEBGL_CONTEXT_WEBKIT","WEBGL_CONTEXT_MOZ","some","option","getContext","alert","WEBGL_CONTEXT_ERROR_MESSAGE","cullFace","BACK","frontFace","CCW","enable","DEPTH_TEST","CULL_FACE","depthFunc","LEQUAL","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","setSize","w","h","style","width","height","viewport","fitScreen","wp","hp","window","innerWidth","innerHeight","setClearColor","red","green","blue","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","x","z","magnitude","undefined","sqrt","normalize","mag","set","multiScalar","getArray","getFloatArray","Float32Array","clone","Vector3","matrix","Matrix4","identity","vtranslate","translate","rotateY","rad","rotateX","rotateZ","vscale","vec3","scale","invert","resetRotation","i","resetMat","a","perspective","out","fovy","aspect","near","far","tan","nf","ortho","left","right","bottom","top","lr","bt","transpose","a01","a02","a03","a12","a13","a23","normalMat3","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","multiplyVector","mat4","c1r1","c2r1","c3r1","c4r1","c1r2","c2r2","c3r2","c4r2","c1r3","c2r3","c3r3","c4r3","transformVec4","m","mult","b0","b1","b2","b3","s","sin","c","cos","rotate","axis","b12","b20","b21","b22","len","abs","mat","position","rotation","matModel","matNormal","forward","up","updateMatrix","updateDirection","getModelMatrix","getNormalMatrix","reset","fov","projection","ratio","transform","viewMatrix","mode","Camera","MODE_ORBIT","panX","updateViewMatrix","panY","panZ","MODE_FREE","camera","self","box","getBoundingClientRect","rotateRate","panRate","zoomRate","offsetX","offsetY","initX","initY","prevX","prevY","onUpHandler","onMouseUp","onMoveHandler","onMouseMove","addEventListener","onMouseDown","onMouseWheel","getMouseVec2","pageX","pageY","removeEventListener","delta","max","min","wheelDelta","detail","dx","dy","shiftKey","vsSource","fsSource","positionIndex","normalIndex","uvIndex","modelMatrix","cameraMatrix","mainTexture","ambientLight","lightDirection","vertexShader","fragmentShader","shaderProgram","createShader","VERTEX_SHADER","FRAGMENT_SHADER","createShaderProgram","activateShader","getAttribLocation","ATTR_POSITION_NAME","ATTR_NORMAL_NAME","ATTR_UV_NAME","getUniformLocation","UNI_MODEL_MAT","UNI_PERSPECTIV_MAT","UNI_CAMERA_MAT","UNI_TEXTURE_MAT","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","error","getShaderInfoLog","deleteShader","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","Error","detachShader","useProgram","deactivateShader","setPerspective","matData","uniformMatrix4fv","setModelMatrix","setCameraMatrix","dispose","getParameter","CURRENT_PROGRAM","preRender","renderModel","model","mesh","noCulling","disable","doBlending","BLEND","drawArrays","drawMode","vertexCount","projectionMatrix","uColor","uniform3fv","setScale","setPosition","setRotation","addScale","addPosition","addRotation","vertexAttribute","count","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","size","destroy","deleteBuffer","bindToAttribute","vertexAttributeIndex","stride","offset","enableVertexAttribArray","vertexAttribPointer","FLOAT","createGeometry","enableAxis","GridAxis","createMesh","glContext","verts","strideLen","BYTES_PER_ELEMENT","GRID_VERTEX_LEN","GRID_VECTOR_SIZE","positions","LINES","ATTR_GRID_POSITION_LOC","DEFAULT_OFFSET","ATTR_GRID_COLOR_LOC","GRID_COLOR_SIZE","image","createdTexture","TEXTURE_KEY","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","generateMipmap","useTexture","uniform","binding","activeTexture","uniform1i","loadTexture","url","Image","onload","Texture","src","surfaces","vertices","normal","uv","parseOBJ","POSITION","NORMAL","UV","SURFACE","lines","split","uvs","normals","forEach","line","exec","Vec3Struct","parseFloat","part","slice","parseInt","VertexStruct","SurfaceStruct","OBJ","loadOBJ","fetch","response","text","surface","vertex","objSrc","textureSrc","Model","loadAttributes","attrib","texture","TRIANGLES","DEFAULT_STRIDE","objVertices","objTexture","all","glExtend","GLExtend","CameraController","gridAxisShader","GridAxisShader","gridAxis","modelShader","ModelShader","PATH_ASSETS_SPHERE","PATH_ASSETS_DIFFUSE","loop","requestAnimationFrame"],"mappings":"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","file":"bundle.js","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export enum ProgramEntrySettings {\r\n    WEBGL_CANVAS_ID = 'qrius-glCanvas',\r\n    WEBGL_CONTEXT = 'webgl2',\r\n    WEBGL_CONTEXT_EXPERIMENTAL = 'experimental-webgl',\r\n    WEBGL_CONTEXT_WEBKIT = 'webkit-3d',\r\n    WEBGL_CONTEXT_MOZ = 'moz-webgl',\r\n    WEBGL_CONTEXT_ERROR_MESSAGE = 'Could not initialise WebGL',\r\n    PATH_ASSETS_SPHERE = '/assets/resources/yoshi/source/yoshi.obj',\r\n    PATH_ASSETS_DIFFUSE = '/assets/resources/yoshi/textures/yoshi.png',\r\n    PATH_SHADE_VERTEX = '/shaders/basic.vert',\r\n    PATH_SHADE_FRAGMENT = '/shaders/basic.frag',\r\n    PRIMITIVE_SHADER_VERTEX = '/shaders/primitive.vert',\r\n    PRIMITIVE_SHADER_FRAGMENT = '/shaders/primitive.frag',\r\n}\r\n\r\nexport enum CameraSettings {\r\n    CAMERA_ANGLE_DIVISION = 120,\r\n    NEAR_PLANE = 1,\r\n    FAR_PLANE = 2000,\r\n    FIELD_OF_VIEW = 60,\r\n    PROJECTION_DEPTH = 400,\r\n    SCREEN_LEFT = 0,\r\n    SCREEN_TOP = 0,\r\n    ORTHO_NEAR = 400,\r\n    ORTHO_FAR = -400,\r\n}\r\n\r\nexport enum ControlsSettings {\r\n    KEY_DOWN_EVENT = 'keydown',\r\n    KEY_UP_EVENT = 'keyup',\r\n    KEY_DOWN = 40,\r\n    KEY_UP = 38,\r\n    KEY_LEFT = 37,\r\n    KEY_RIGHT = 39,\r\n}\r\n\r\nexport enum GLSetttings {\r\n    DEFAULT_OFFSET = 0,\r\n    DEFAULT_STRIDE = 0,\r\n    ATTR_POSITION_NAME = \"a_position\",\r\n    ATTR_POSITION_LOC = 0,\r\n    ATTR_NORMAL_NAME = \"a_norm\",\r\n    ATTR_NORMAL_LOC = 1,\r\n    ATTR_UV_NAME = \"a_uv\",\r\n    ATTR_UV_LOC = 2,\r\n    ATTR_GRID_POSITION_LOC = 4,\r\n    ATTR_GRID_COLOR_LOC = 5,\r\n    GRID_VECTOR_SIZE = 3,\r\n    GRID_COLOR_SIZE = 1,\r\n    GRID_VERTEX_LEN = 4,\r\n    UNI_MODEL_MAT ='uMVMatrix',\r\n    UNI_PERSPECTIV_MAT = 'uPMatrix',\r\n    UNI_CAMERA_MAT = 'uCameraMatrix',\r\n    UNI_TEXTURE_MAT = 'uMainTexture',\r\n    UNI_LIGHT_AMBIENT = 'ambientLight',\r\n    UNI_LIGHT_DIRECTION = 'lightDirection',\r\n}\r\n","export const radToDeg = (r: number) => r * 180 / Math.PI;\r\nexport const degToRad = (d: number) => d * Math.PI / 180;\r\n\r\n\r\nexport const loadShaders = async (vsSource: string, fsSource: string) => {\r\n\r\n    const loadFile = async (src: string) => {\r\n        const response = await fetch(src);\r\n        const data = await response.text();\r\n        return data;\r\n    }\r\n\r\n    const [vertexShaderFile, fragmentShaderFile] = await Promise.all([loadFile(vsSource), loadFile(fsSource)]);\r\n\r\n    return {\r\n        vertexShaderFile,\r\n        fragmentShaderFile\r\n    };\r\n}","import { ProgramEntrySettings } from \"@/modules\";\r\n\r\n\r\nexport default class GLContext {\r\n    constructor(WEBGL_CANVAS_ID: string) {\r\n        const canvas = document.getElementById(WEBGL_CANVAS_ID) as HTMLCanvasElement;\r\n        // cycle through and fallback to the first gl context that works \r\n        ([\r\n            ProgramEntrySettings.WEBGL_CONTEXT,\r\n            ProgramEntrySettings.WEBGL_CONTEXT_EXPERIMENTAL,\r\n            ProgramEntrySettings.WEBGL_CONTEXT_WEBKIT,\r\n            ProgramEntrySettings.WEBGL_CONTEXT_MOZ\r\n        ]).some(option => this.gl = canvas.getContext(option) as WebGLRenderingContext);\r\n\r\n        this.gl ?? alert(ProgramEntrySettings.WEBGL_CONTEXT_ERROR_MESSAGE);\r\n        this.gl?.cullFace(this.gl.BACK);\t\t\t\t\t\t\t\t//Back is also default\r\n        this.gl?.frontFace(this.gl.CCW);\t\t\t\t\t\t\t\t//Dont really need to set it, its ccw by default.\r\n        this.gl?.enable(this.gl.DEPTH_TEST);\t\t\t\t\t\t\t//Shouldn't use this, use something else to add depth detection\r\n        this.gl?.enable(this.gl.CULL_FACE);\t\t\t\t\t\t\t    //Cull back face, so only show triangles that are created clockwise\r\n        this.gl?.depthFunc(this.gl.LEQUAL);\t\t\t\t\t\t\t    //Near things obscure far things\r\n        this.gl?.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\t//Setup default alpha blending\r\n\r\n        this.canvas = canvas;\r\n    }\r\n\r\n    gl: WebGLRenderingContext | null = null;\r\n    rgb_32_bit = 255;\r\n    alpha = 1;\r\n    canvas: HTMLCanvasElement;\r\n\r\n    setSize(w: number, h: number) {\r\n        //set the size of the canvas, on chrome we need to set it 3 ways to make it work perfectly.\r\n        this.canvas.style.width = w + \"px\";\r\n        this.canvas.style.height = h + \"px\";\r\n        this.canvas.width = w;\r\n        this.canvas.height = h;\r\n\r\n        //when updating the canvas size, must reset the viewport of the canvas \r\n        //else the resolution webgl renders at will not change\r\n        this.gl?.viewport(0, 0, w, h);\r\n        \r\n        return this;\r\n    }\r\n\r\n    //Set the size of the canvas to fill a % of the total screen.\r\n    fitScreen(wp: number, hp: number) {\r\n        return this.setSize(window.innerWidth * (wp || 1), window.innerHeight * (hp || 1));\r\n    }\r\n\r\n    setClearColor(red: number, green: number, blue: number, alpha: number = 1) {\r\n        this.gl?.clearColor(red / this.rgb_32_bit, green / this.rgb_32_bit, blue / this.rgb_32_bit, alpha);\r\n        return this\r\n    }\r\n\r\n    clear() {\r\n        this.gl?.clear(this.gl?.COLOR_BUFFER_BIT | this.gl?.DEPTH_BUFFER_BIT);\r\n        return this;\r\n    }\r\n\r\n    getContext() {\r\n        return this.gl;\r\n    }\r\n}","//###########################################################################################\r\nimport { Vector } from \"@/entities\";\r\n\r\n\r\n//https://github.com/sketchpunk/FunWithWebGL2/tree/master/lesson_006\r\nclass Vector3 {\r\n    constructor(x: number, y: number, z: number) {\r\n        this.x = x || 0.0;\r\n        this.y = y || 0.0;\r\n        this.z = z || 0.0;\r\n    }\r\n\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n\r\n    magnitude(v: Vector = {\r\n        x: 0.0,\r\n        y: 0.0,\r\n        z: 0.0\r\n    }) {\r\n        //Only get the magnitude of this vector\r\n        if (v === undefined) return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n\r\n        //Get magnitude based on another vector\r\n        let x = v.x - this.x,\r\n            y = v.y - this.y,\r\n            z = v.y - this.z;\r\n\r\n        return Math.sqrt(x * x + y * y + z * z);\r\n    }\r\n\r\n    normalize() {\r\n        let mag = this.magnitude();\r\n        this.x /= mag;\r\n        this.y /= mag;\r\n        this.z /= mag;\r\n        return this;\r\n    }\r\n\r\n    set(x: number, y: number, z: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        return this;\r\n    }\r\n\r\n    multiScalar(v: number) {\r\n        this.x *= v;\r\n        this.y *= v;\r\n        this.z *= v;\r\n        return this;\r\n    }\r\n\r\n    getArray() {\r\n        return [this.x, this.y, this.z];\r\n    }\r\n\r\n    getFloatArray() {\r\n        return new Float32Array([this.x, this.y, this.z]);\r\n    }\r\n\r\n    clone() {\r\n        return new Vector3(this.x, this.y, this.z);\r\n    }\r\n}\r\n\r\n\r\n//###########################################################################################\r\nclass Matrix4 {\r\n    constructor() {\r\n        this.matrix = Matrix4.identity();\r\n    }\r\n\r\n    matrix: Float32Array;\r\n\r\n    //....................................................................\r\n    //Transformations Methods\r\n    vtranslate(v: Vector) {\r\n        Matrix4.translate(this.matrix, v.x, v.y, v.z);\r\n        return this;\r\n    }\r\n    translate(x: number, y: number, z: number) {\r\n        Matrix4.translate(this.matrix, x, y, z);\r\n        return this;\r\n    }\r\n\r\n    rotateY(rad: number) {\r\n        Matrix4.rotateY(this.matrix, rad);\r\n        return this;\r\n    }\r\n    rotateX(rad: number) {\r\n        Matrix4.rotateX(this.matrix, rad);\r\n        return this;\r\n    }\r\n    rotateZ(rad: number) {\r\n        Matrix4.rotateZ(this.matrix, rad);\r\n        return this;\r\n    }\r\n\r\n    vscale(vec3: Vector) {\r\n        Matrix4.scale(this.matrix, vec3.x, vec3.y, vec3.z);\r\n        return this;\r\n    }\r\n    scale(x: number, y: number, z: number) {\r\n        Matrix4.scale(this.matrix, x, y, z);\r\n        return this;\r\n    }\r\n\r\n    invert() {\r\n        Matrix4.invert(this.matrix);\r\n        return this;\r\n    }\r\n\r\n    //....................................................................\r\n    //Methods\r\n    //Bring is back to identity without changing the transform values.\r\n    resetRotation() {\r\n        for (let i = 0; i < this.matrix.length; i++) {\r\n            if (i >= 12 && i <= 14) continue;\r\n            this.matrix[i] = (i % 5 == 0) ? 1 : 0; //only positions 0,5,10,15 need to be 1 else 0.\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    //reset data back to identity.\r\n    resetMat() {\r\n        for (let i = 0; i < this.matrix.length; i++) this.matrix[i] = (i % 5 == 0) ? 1 : 0; //only positions 0,5,10,15 need to be 1 else 0.\r\n        return this;\r\n    }\r\n\r\n    //....................................................................\r\n    //Static Data Methods\r\n    static identity() {\r\n        let a = new Float32Array(16);\r\n        a[0] = a[5] = a[10] = a[15] = 1;\r\n        return a;\r\n    }\r\n\r\n    //from glMatrix\r\n    static perspective(out: Float32Array, fovy: number, aspect: number, near: number, far: number) {\r\n        let f = 1.0 / Math.tan(fovy / 2),\r\n            nf = 1 / (near - far);\r\n        out[0] = f / aspect;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = f;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = (far + near) * nf;\r\n        out[11] = -1;\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = (2 * far * near) * nf;\r\n        out[15] = 0;\r\n    }\r\n\r\n\r\n    static ortho(out: Float32Array, left: number, right: number, bottom: number, top: number, near: number, far: number) {\r\n        let lr = 1 / (left - right),\r\n            bt = 1 / (bottom - top),\r\n            nf = 1 / (near - far);\r\n        out[0] = -2 * lr;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = -2 * bt;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = 2 * nf;\r\n        out[11] = 0;\r\n        out[12] = (left + right) * lr;\r\n        out[13] = (top + bottom) * bt;\r\n        out[14] = (far + near) * nf;\r\n        out[15] = 1;\r\n    };\r\n\r\n\r\n    //https://github.com/toji/gl-matrix/blob/master/src/gl-matrix/mat4.js\r\n    //make the rows into the columns\r\n    static transpose(out: Float32Array, a: Float32Array) {\r\n        //If we are transposing ourselves we can skip a few steps but have to cache some values\r\n        if (out === a) {\r\n            let a01 = a[1],\r\n                a02 = a[2],\r\n                a03 = a[3],\r\n                a12 = a[6],\r\n                a13 = a[7],\r\n                a23 = a[11];\r\n            out[1] = a[4];\r\n            out[2] = a[8];\r\n            out[3] = a[12];\r\n            out[4] = a01;\r\n            out[6] = a[9];\r\n            out[7] = a[13];\r\n            out[8] = a02;\r\n            out[9] = a12;\r\n            out[11] = a[14];\r\n            out[12] = a03;\r\n            out[13] = a13;\r\n            out[14] = a23;\r\n        } else {\r\n            out[0] = a[0];\r\n            out[1] = a[4];\r\n            out[2] = a[8];\r\n            out[3] = a[12];\r\n            out[4] = a[1];\r\n            out[5] = a[5];\r\n            out[6] = a[9];\r\n            out[7] = a[13];\r\n            out[8] = a[2];\r\n            out[9] = a[6];\r\n            out[10] = a[10];\r\n            out[11] = a[14];\r\n            out[12] = a[3];\r\n            out[13] = a[7];\r\n            out[14] = a[11];\r\n            out[15] = a[15];\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    //Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n    static normalMat3(out: Float32Array, a: Float32Array) {\r\n        let a00 = a[0],\r\n            a01 = a[1],\r\n            a02 = a[2],\r\n            a03 = a[3],\r\n            a10 = a[4],\r\n            a11 = a[5],\r\n            a12 = a[6],\r\n            a13 = a[7],\r\n            a20 = a[8],\r\n            a21 = a[9],\r\n            a22 = a[10],\r\n            a23 = a[11],\r\n            a30 = a[12],\r\n            a31 = a[13],\r\n            a32 = a[14],\r\n            a33 = a[15],\r\n\r\n            b00 = a00 * a11 - a01 * a10,\r\n            b01 = a00 * a12 - a02 * a10,\r\n            b02 = a00 * a13 - a03 * a10,\r\n            b03 = a01 * a12 - a02 * a11,\r\n            b04 = a01 * a13 - a03 * a11,\r\n            b05 = a02 * a13 - a03 * a12,\r\n            b06 = a20 * a31 - a21 * a30,\r\n            b07 = a20 * a32 - a22 * a30,\r\n            b08 = a20 * a33 - a23 * a30,\r\n            b09 = a21 * a32 - a22 * a31,\r\n            b10 = a21 * a33 - a23 * a31,\r\n            b11 = a22 * a33 - a23 * a32,\r\n\r\n            // Calculate the determinant\r\n            det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (!det) return null;\r\n\r\n        det = 1.0 / det;\r\n\r\n        out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n\r\n        out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n\r\n        out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n        return out;\r\n    }\r\n\r\n    //....................................................................\r\n    //Static Operation\r\n\r\n    //https://github.com/gregtatum/mdn-model-view-projection/blob/master/shared/matrices.js\r\n    static multiplyVector(mat4: Float32Array, v: Float32Array) {\r\n        let x = v[0],\r\n            y = v[1],\r\n            z = v[2],\r\n            w = v[3];\r\n        let c1r1 = mat4[0],\r\n            c2r1 = mat4[1],\r\n            c3r1 = mat4[2],\r\n            c4r1 = mat4[3],\r\n            c1r2 = mat4[4],\r\n            c2r2 = mat4[5],\r\n            c3r2 = mat4[6],\r\n            c4r2 = mat4[7],\r\n            c1r3 = mat4[8],\r\n            c2r3 = mat4[9],\r\n            c3r3 = mat4[10],\r\n            c4r3 = mat4[11],\r\n            c1r4 = mat4[12],\r\n            c2r4 = mat4[13],\r\n            c3r4 = mat4[14],\r\n            c4r4 = mat4[15];\r\n\r\n        return [\r\n            x * c1r1 + y * c1r2 + z * c1r3 + w * c1r4,\r\n            x * c2r1 + y * c2r2 + z * c2r3 + w * c2r4,\r\n            x * c3r1 + y * c3r2 + z * c3r3 + w * c3r4,\r\n            x * c4r1 + y * c4r2 + z * c4r3 + w * c4r4\r\n        ];\r\n    }\r\n\r\n    //https://github.com/toji/gl-matrix/blob/master/src/gl-matrix/vec4.js, vec4.transformMat4\r\n    static transformVec4(out: Float32Array, v: number[], m: Float32Array) {\r\n        out[0] = m[0] * v[0] + m[4] * v[1] + m[8] * v[2] + m[12] * v[3];\r\n        out[1] = m[1] * v[0] + m[5] * v[1] + m[9] * v[2] + m[13] * v[3];\r\n        out[2] = m[2] * v[0] + m[6] * v[1] + m[10] * v[2] + m[14] * v[3];\r\n        out[3] = m[3] * v[0] + m[7] * v[1] + m[11] * v[2] + m[15] * v[3];\r\n        return out;\r\n    }\r\n\r\n    //From glMatrix\r\n    //Multiple two mat4 together\r\n    static mult(out: Float32Array, a: Float32Array, b: Float32Array) {\r\n        let a00 = a[0],\r\n            a01 = a[1],\r\n            a02 = a[2],\r\n            a03 = a[3],\r\n            a10 = a[4],\r\n            a11 = a[5],\r\n            a12 = a[6],\r\n            a13 = a[7],\r\n            a20 = a[8],\r\n            a21 = a[9],\r\n            a22 = a[10],\r\n            a23 = a[11],\r\n            a30 = a[12],\r\n            a31 = a[13],\r\n            a32 = a[14],\r\n            a33 = a[15];\r\n\r\n        // Cache only the current line of the second matrix\r\n        let b0 = b[0],\r\n            b1 = b[1],\r\n            b2 = b[2],\r\n            b3 = b[3];\r\n        out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = b[4];\r\n        b1 = b[5];\r\n        b2 = b[6];\r\n        b3 = b[7];\r\n        out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = b[8];\r\n        b1 = b[9];\r\n        b2 = b[10];\r\n        b3 = b[11];\r\n        out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = b[12];\r\n        b1 = b[13];\r\n        b2 = b[14];\r\n        b3 = b[15];\r\n        out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n        return out;\r\n    }\r\n\r\n\r\n    //....................................................................\r\n    //Static Transformation\r\n    static scale(out: Float32Array, x: number, y: number, z: number) {\r\n        out[0] *= x;\r\n        out[1] *= x;\r\n        out[2] *= x;\r\n        out[3] *= x;\r\n        out[4] *= y;\r\n        out[5] *= y;\r\n        out[6] *= y;\r\n        out[7] *= y;\r\n        out[8] *= z;\r\n        out[9] *= z;\r\n        out[10] *= z;\r\n        out[11] *= z;\r\n        return out;\r\n    };\r\n\r\n    static rotateY(out: Float32Array, rad: number) {\r\n        let s = Math.sin(rad),\r\n            c = Math.cos(rad),\r\n            a00 = out[0],\r\n            a01 = out[1],\r\n            a02 = out[2],\r\n            a03 = out[3],\r\n            a20 = out[8],\r\n            a21 = out[9],\r\n            a22 = out[10],\r\n            a23 = out[11];\r\n\r\n        // Perform axis-specific matrix multiplication\r\n        out[0] = a00 * c - a20 * s;\r\n        out[1] = a01 * c - a21 * s;\r\n        out[2] = a02 * c - a22 * s;\r\n        out[3] = a03 * c - a23 * s;\r\n        out[8] = a00 * s + a20 * c;\r\n        out[9] = a01 * s + a21 * c;\r\n        out[10] = a02 * s + a22 * c;\r\n        out[11] = a03 * s + a23 * c;\r\n        return out;\r\n    }\r\n\r\n    static rotateX(out: Float32Array, rad: number) {\r\n        let s = Math.sin(rad),\r\n            c = Math.cos(rad),\r\n            a10 = out[4],\r\n            a11 = out[5],\r\n            a12 = out[6],\r\n            a13 = out[7],\r\n            a20 = out[8],\r\n            a21 = out[9],\r\n            a22 = out[10],\r\n            a23 = out[11];\r\n\r\n        // Perform axis-specific matrix multiplication\r\n        out[4] = a10 * c + a20 * s;\r\n        out[5] = a11 * c + a21 * s;\r\n        out[6] = a12 * c + a22 * s;\r\n        out[7] = a13 * c + a23 * s;\r\n        out[8] = a20 * c - a10 * s;\r\n        out[9] = a21 * c - a11 * s;\r\n        out[10] = a22 * c - a12 * s;\r\n        out[11] = a23 * c - a13 * s;\r\n        return out;\r\n    }\r\n\r\n    static rotateZ(out: Float32Array, rad: number) {\r\n        let s = Math.sin(rad),\r\n            c = Math.cos(rad),\r\n            a00 = out[0],\r\n            a01 = out[1],\r\n            a02 = out[2],\r\n            a03 = out[3],\r\n            a10 = out[4],\r\n            a11 = out[5],\r\n            a12 = out[6],\r\n            a13 = out[7];\r\n\r\n        // Perform axis-specific matrix multiplication\r\n        out[0] = a00 * c + a10 * s;\r\n        out[1] = a01 * c + a11 * s;\r\n        out[2] = a02 * c + a12 * s;\r\n        out[3] = a03 * c + a13 * s;\r\n        out[4] = a10 * c - a00 * s;\r\n        out[5] = a11 * c - a01 * s;\r\n        out[6] = a12 * c - a02 * s;\r\n        out[7] = a13 * c - a03 * s;\r\n        return out;\r\n    }\r\n\r\n    static rotate(out: Float32Array, rad: number, axis: Float32Array) {\r\n        let x = axis[0],\r\n            y = axis[1],\r\n            z = axis[2],\r\n            len = Math.sqrt(x * x + y * y + z * z),\r\n            s, c, t,\r\n            a00, a01, a02, a03,\r\n            a10, a11, a12, a13,\r\n            a20, a21, a22, a23,\r\n            b00, b01, b02,\r\n            b10, b11, b12,\r\n            b20, b21, b22;\r\n\r\n        if (Math.abs(len) < 0.000001) {\r\n            return null;\r\n        }\r\n\r\n        len = 1 / len;\r\n        x *= len;\r\n        y *= len;\r\n        z *= len;\r\n\r\n        s = Math.sin(rad);\r\n        c = Math.cos(rad);\r\n        t = 1 - c;\r\n\r\n        a00 = out[0];\r\n        a01 = out[1];\r\n        a02 = out[2];\r\n        a03 = out[3];\r\n        a10 = out[4];\r\n        a11 = out[5];\r\n        a12 = out[6];\r\n        a13 = out[7];\r\n        a20 = out[8];\r\n        a21 = out[9];\r\n        a22 = out[10];\r\n        a23 = out[11];\r\n\r\n        // Construct the elements of the rotation matrix\r\n        b00 = x * x * t + c;\r\n        b01 = y * x * t + z * s;\r\n        b02 = z * x * t - y * s;\r\n        b10 = x * y * t - z * s;\r\n        b11 = y * y * t + c;\r\n        b12 = z * y * t + x * s;\r\n        b20 = x * z * t + y * s;\r\n        b21 = y * z * t - x * s;\r\n        b22 = z * z * t + c;\r\n\r\n        // Perform rotation-specific matrix multiplication\r\n        out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n        out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n        out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n        out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n        out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n        out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n        out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n        out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n        out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n        out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n        out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n        out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n    }\r\n\r\n    static invert(out: Float32Array, mat ? : Float32Array) {\r\n        if (mat === undefined) mat = out; //If input isn't sent, then output is also input\r\n\r\n        let a00 = mat[0],\r\n            a01 = mat[1],\r\n            a02 = mat[2],\r\n            a03 = mat[3],\r\n            a10 = mat[4],\r\n            a11 = mat[5],\r\n            a12 = mat[6],\r\n            a13 = mat[7],\r\n            a20 = mat[8],\r\n            a21 = mat[9],\r\n            a22 = mat[10],\r\n            a23 = mat[11],\r\n            a30 = mat[12],\r\n            a31 = mat[13],\r\n            a32 = mat[14],\r\n            a33 = mat[15],\r\n\r\n            b00 = a00 * a11 - a01 * a10,\r\n            b01 = a00 * a12 - a02 * a10,\r\n            b02 = a00 * a13 - a03 * a10,\r\n            b03 = a01 * a12 - a02 * a11,\r\n            b04 = a01 * a13 - a03 * a11,\r\n            b05 = a02 * a13 - a03 * a12,\r\n            b06 = a20 * a31 - a21 * a30,\r\n            b07 = a20 * a32 - a22 * a30,\r\n            b08 = a20 * a33 - a23 * a30,\r\n            b09 = a21 * a32 - a22 * a31,\r\n            b10 = a21 * a33 - a23 * a31,\r\n            b11 = a22 * a33 - a23 * a32,\r\n\r\n            // Calculate the determinant\r\n            det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (!det) return false;\r\n        det = 1.0 / det;\r\n\r\n        out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n        out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n        out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n        out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n        out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n        out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n        out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n        out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n        out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n        out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n        return true;\r\n    }\r\n\r\n    //https://github.com/toji/gl-matrix/blob/master/src/gl-matrix/mat4.js  mat4.scalar.translate = function (out, a, v) {\r\n    static translate(out: Float32Array, x: number, y: number, z: number) {\r\n        out[12] = out[0] * x + out[4] * y + out[8] * z + out[12];\r\n        out[13] = out[1] * x + out[5] * y + out[9] * z + out[13];\r\n        out[14] = out[2] * x + out[6] * y + out[10] * z + out[14];\r\n        out[15] = out[3] * x + out[7] * y + out[11] * z + out[15];\r\n    }\r\n}\r\n\r\nexport {\r\n    Vector3,\r\n    Matrix4\r\n}","import { Matrix4, Vector3 } from \"./math\";\r\nimport { degToRad } from \"@/modules\";\r\n\r\nexport default class Transformation {\r\n\r\n    constructor() {\r\n        // identity matrix\r\n        //transform vectors\r\n        this.position = new Vector3(0, 0, 0); //Traditional X,Y,Z 3d position\r\n        this.scale = new Vector3(1, 1, 1); //How much to scale a mesh. Having a 1 means no scaling is done.\r\n        this.rotation = new Vector3(0, 0, 0); //Hold rotation values based on degrees, Object will translate it to radians\r\n        this.matModel = new Matrix4(); //Cache the results when calling updateMatrix\r\n        this.matNormal = new Float32Array(9); //This is a Mat3, matrix array to hold the values is enough for what its used for\r\n\r\n        //Direction Vectors, Need 4 elements for math operations with matrices\r\n        this.forward = new Float32Array(4); //When rotating, keep track of what the forward direction is\r\n        this.up = new Float32Array(4); //what the up direction is, invert to get bottom\r\n        this.right = new Float32Array(4); //what the right direction is, invert to get left\r\n    }\r\n\r\n    position: Vector3;\r\n    scale: Vector3;\r\n    rotation: Vector3;\r\n    matModel: Matrix4;\r\n    matNormal: Float32Array;\r\n    forward: Float32Array;\r\n    up: Float32Array;\r\n    right: Float32Array;\r\n\r\n    //--------------------------------------------------------------------------\r\n    //Methods\r\n    updateMatrix() {\r\n        this.matModel.resetMat() //Order is very important!!\r\n            .vtranslate(this.position)\r\n            .rotateX(degToRad(this.rotation.x))\r\n            .rotateZ(degToRad(this.rotation.z))\r\n            .rotateY(degToRad(this.rotation.y))\r\n            .vscale(this.scale);\r\n\r\n        //Calcuate the Normal Matrix which doesn't need translate, then transpose and inverses the mat4 to mat3\r\n        Matrix4.normalMat3(this.matNormal, this.matModel.matrix);\r\n\r\n        //Determine Direction after all the transformations.\r\n        Matrix4.transformVec4(this.forward, [0, 0, 1, 0], this.matModel.matrix); //Z\r\n        Matrix4.transformVec4(this.up, [0, 1, 0, 0], this.matModel.matrix); //Y\r\n        Matrix4.transformVec4(this.right, [1, 0, 0, 0], this.matModel.matrix); //X\r\n\r\n        return this.matModel.matrix;\r\n    }\r\n\r\n    updateDirection() {\r\n        Matrix4.transformVec4(this.forward, [0, 0, 1, 0], this.matModel.matrix);\r\n        Matrix4.transformVec4(this.up, [0, 1, 0, 0], this.matModel.matrix);\r\n        Matrix4.transformVec4(this.right, [1, 0, 0, 0], this.matModel.matrix);\r\n        return this;\r\n    }\r\n\r\n    getModelMatrix() {\r\n        return this.matModel.matrix;\r\n    }\r\n\r\n    getNormalMatrix() {\r\n        return this.matNormal;\r\n    }\r\n\r\n    reset() {\r\n        this.position.set(0, 0, 0);\r\n        this.scale.set(1, 1, 1);\r\n        this.rotation.set(0, 0, 0);\r\n    }\r\n}","\r\nimport { degToRad } from \"@/modules\";\r\nimport { Matrix4 } from \"./math\";\r\nimport Transformation from \"./transformation\";\r\n\r\n//https://github.com/sketchpunk/FunWithWebGL2/tree/master/lesson_006\r\nclass Camera {\r\n  constructor(gl: WebGLRenderingContext, fov: number = 45, near: number = 0.1, far: number = 100.0) {\r\n\r\n    this.projection = new Float32Array(16);\r\n\r\n    const ratio = gl.canvas.width / gl.canvas.height;\r\n    Matrix4.perspective(this.projection, fov, ratio, near, far);\r\n\r\n    this.transform = new Transformation(); //Setup transform to control the position of the camera\r\n    this.viewMatrix = new Float32Array(16); //Cache the matrix that will hold the inverse of the transform.\r\n\r\n    this.mode = Camera.MODE_ORBIT; //Set what sort of control mode to use.\r\n  }\r\n\r\n  transform: Transformation;\r\n  projection: Float32Array;\r\n  viewMatrix: Float32Array;\r\n  mode: number;\r\n\r\n  static MODE_FREE = 0; //Allows free movement of position and rotation, basicly first person type of camera\r\n  static MODE_ORBIT = 1; //Movement is locked to rotate around the origin, Great for 3d editors or a single model viewer\r\n\r\n  panX(v: number) {\r\n    if (this.mode == Camera.MODE_ORBIT) return; // Panning on the X Axis is only allowed when in free mode\r\n    this.updateViewMatrix();\r\n    this.transform.position.x += this.transform.right[0] * v;\r\n    this.transform.position.y += this.transform.right[1] * v;\r\n    this.transform.position.z += this.transform.right[2] * v;\r\n  }\r\n\r\n  panY(v: number) {\r\n    this.updateViewMatrix();\r\n    this.transform.position.y += this.transform.up[1] * v;\r\n    if (this.mode == Camera.MODE_ORBIT) return; //Can only move up and down the y axix in orbit mode\r\n    this.transform.position.x += this.transform.up[0] * v;\r\n    this.transform.position.z += this.transform.up[2] * v;\r\n  }\r\n\r\n  panZ(v: number) {\r\n    this.updateViewMatrix();\r\n    if (this.mode == Camera.MODE_ORBIT) {\r\n      this.transform.position.z += v; //orbit mode does translate after rotate, so only need to set Z, the rotate will handle the rest.\r\n    } else {\r\n      //in freemode to move forward, we need to move based on our forward which is relative to our current rotation\r\n      this.transform.position.x += this.transform.forward[0] * v;\r\n      this.transform.position.y += this.transform.forward[1] * v;\r\n      this.transform.position.z += this.transform.forward[2] * v;\r\n    }\r\n  }\r\n\r\n  //To have different modes of movements, this function handles the view matrix update for the transform object.\r\n  \r\n  updateViewMatrix() {\r\n    //Optimize camera transform update, no need for scale nor rotateZ\r\n    if (this.mode == Camera.MODE_FREE) {\r\n      this.transform.matModel.resetMat()\r\n        .vtranslate(this.transform.position)\r\n        .rotateX(degToRad(this.transform.rotation.x))\r\n        .rotateY(degToRad(this.transform.rotation.y));\r\n\r\n    } else {\r\n      this.transform.matModel.resetMat()\r\n        .rotateX(degToRad(this.transform.rotation.x))\r\n        .rotateY(degToRad(this.transform.rotation.y))\r\n        .vtranslate(this.transform.position);\r\n\r\n    }\r\n\r\n    this.transform.updateDirection();\r\n\r\n    //Cameras work by doing the inverse transformation on all meshes, the camera itself is a lie :)\r\n    Matrix4.invert(this.viewMatrix, this.transform.matModel.matrix);\r\n\r\n    return this.viewMatrix;\r\n  }\r\n}\r\n\r\nclass CameraController {\r\n  constructor(gl: WebGLRenderingContext, camera: Camera) {\r\n    const self = this;\r\n    const box = (gl.canvas as HTMLCanvasElement).getBoundingClientRect();\r\n    this.canvas = gl.canvas as HTMLCanvasElement; //Need access to the canvas html element, main to access events\r\n    this.camera = camera; //Reference to the camera to control\r\n\r\n    this.rotateRate = -300; //How fast to rotate, degrees per dragging delta\r\n    this.panRate = 5; //How fast to pan, max unit per dragging delta\r\n    this.zoomRate = 200; //How fast to zoom or can be viewed as forward/backward movement\r\n\r\n    this.offsetX = box.left; //Help calc global x,y mouse cords.\r\n    this.offsetY = box.top;\r\n\r\n    this.initX = 0; //Starting X,Y position on mouse down\r\n    this.initY = 0;\r\n    this.prevX = 0; //Previous X,Y position on mouse move\r\n    this.prevY = 0;\r\n\r\n\t\tthis.onUpHandler = function(e: MouseEvent){ self.onMouseUp(e); };\t\t//Cache func reference that gets bound and unbound a lot\r\n\t\tthis.onMoveHandler = function(e: MouseEvent){ self.onMouseMove(e); }\r\n\r\n\t\tthis.canvas.addEventListener(\"mousedown\", function(e: MouseEvent){ self.onMouseDown(e); });\t\t//Initializes the up and move events\r\n\t\tthis.canvas.addEventListener(\"mousewheel\", function(e: Event ){ self.onMouseWheel(e); });\t//Handles zoom/forward movement\r\n  }\r\n\r\n  canvas: HTMLCanvasElement;\r\n  camera: Camera;\r\n  rotateRate: number; //How fast to rotate, degrees per dragging delta\r\n  panRate: number; //How fast to pan, max unit per dragging delta\r\n  zoomRate: number; //How fast to zoom or can be viewed as forward/backward movement\r\n  offsetX: number; //Help calc global x,y mouse cords.\r\n  offsetY: number;\r\n  initX: number; //Starting X,Y position on mouse down\r\n  initY: number;\r\n  prevX: number; //Previous X,Y position on mouse move\r\n  prevY: number;\r\n  onUpHandler:any;\r\n  onMoveHandler:any;\r\n\r\n  //Transform mouse x,y cords to something useable by the canvas.\r\n  getMouseVec2(e: MouseEvent) {\r\n    return {\r\n      x: e.pageX - this.offsetX,\r\n      y: e.pageY - this.offsetY\r\n    };\r\n  }\r\n\r\n\r\n  //Begin listening for dragging movement\r\n  onMouseDown(e: MouseEvent) {\r\n    this.initX = this.prevX = e.pageX - this.offsetX;\r\n    this.initY = this.prevY = e.pageY - this.offsetY;\r\n\r\n    this.canvas.addEventListener(\"mouseup\", this.onUpHandler);\r\n    this.canvas.addEventListener(\"mousemove\", this.onMoveHandler);\r\n  }\r\n\r\n  //End listening for dragging movement\r\n  onMouseUp(e: MouseEvent) {\r\n    this.canvas.removeEventListener(\"mouseup\", this.onUpHandler);\r\n    this.canvas.removeEventListener(\"mousemove\", this.onMoveHandler);\r\n  }\r\n\r\n  onMouseWheel(e: any) {\r\n    let delta = Math.max(-1, Math.min(1, (e.wheelDelta || -e.detail))); //Try to map wheel movement to a number between -1 and 1\r\n    this.camera.panZ(-delta * (this.zoomRate / this.canvas.height)); //Keep the movement speed the same, no matter the height diff\r\n  }\r\n\r\n  onMouseMove(e: MouseEvent) {\r\n    let x = e.pageX - this.offsetX, //Get X,y where the canvas's position is origin.\r\n      y = e.pageY - this.offsetY,\r\n      dx = x - this.prevX, //Difference since last mouse move\r\n      dy = y - this.prevY;\r\n\r\n    //When shift is being helt down, we pan around else we rotate.\r\n    if (!e.shiftKey) {\r\n      this.camera.transform.rotation.y += dx * (this.rotateRate / this.canvas.width);\r\n      this.camera.transform.rotation.x += dy * (this.rotateRate / this.canvas.height);\r\n    } else {\r\n      this.camera.panX(-dx * (this.panRate / this.canvas.width));\r\n      this.camera.panY(dy * (this.panRate / this.canvas.height));\r\n    }\r\n\r\n    this.prevX = x;\r\n    this.prevY = y;\r\n  }\r\n}\r\n\r\nexport {\r\n  Camera,\r\n  CameraController\r\n}","import { GLSetttings } from \"@/modules\";\r\nimport Geometry from \"./geometry\";\r\n\r\nexport default class ShaderProgram {\r\n  constructor(gl: WebGLRenderingContext, vsSource: string, fsSource: string) {\r\n\r\n    const vertexShader = this.createShader(gl, gl.VERTEX_SHADER, vsSource) as WebGLShader;\r\n    const fragmentShader = this.createShader(gl, gl.FRAGMENT_SHADER, fsSource) as WebGLShader;\r\n    this.createShaderProgram(gl, fragmentShader, vertexShader);\r\n\r\n    this.gl = gl;\r\n\r\n    if (this.shaderProgram ) {\r\n\r\n      this.activateShader();\r\n\r\n      //standard attribute locations\r\n      this.positionIndex = gl.getAttribLocation(this.shaderProgram as WebGLProgram , GLSetttings.ATTR_POSITION_NAME);\r\n      this.normalIndex = gl.getAttribLocation(this.shaderProgram as WebGLProgram , GLSetttings.ATTR_NORMAL_NAME);\r\n      this.uvIndex = gl.getAttribLocation(this.shaderProgram as WebGLProgram , GLSetttings.ATTR_UV_NAME);\r\n\r\n      //standard uniform locations\r\n      this.modelMatrix = gl.getUniformLocation(this.shaderProgram , GLSetttings.UNI_MODEL_MAT) as WebGLUniformLocation;\r\n      this.perspective = gl.getUniformLocation(this.shaderProgram , GLSetttings.UNI_PERSPECTIV_MAT) as WebGLUniformLocation;\r\n      this.cameraMatrix = gl.getUniformLocation(this.shaderProgram , GLSetttings.UNI_CAMERA_MAT) as WebGLUniformLocation;\r\n      this.mainTexture = gl.getUniformLocation(this.shaderProgram as WebGLProgram , GLSetttings.UNI_TEXTURE_MAT) as WebGLUniformLocation;\r\n      // this.ambientLight = gl.getUniformLocation(this.shaderProgram as WebGLProgram , GLSetttings.UNI_LIGHT_AMBIENT) as WebGLUniformLocation;\r\n\t\t  // this.lightDirection = gl.getUniformLocation(this.shaderProgram as WebGLProgram , GLSetttings.UNI_LIGHT_DIRECTION) as WebGLUniformLocation;\r\n    }\r\n  }\r\n\r\n  gl: WebGLRenderingContext | null = null;\r\n  \r\n  positionIndex: number | null = null;\r\n  normalIndex: number | null = null;\r\n  uvIndex: number | null = null;\r\n\r\n  modelMatrix: WebGLUniformLocation | null = null;\r\n  perspective: WebGLUniformLocation | null = null;\r\n  cameraMatrix: WebGLUniformLocation | null = null;\r\n  mainTexture: WebGLUniformLocation | null = null;\r\n  ambientLight: WebGLUniformLocation | null = null;\r\n  lightDirection: WebGLUniformLocation | null = null;\r\n\r\n  vertexShader: WebGLShader | null = null;\r\n  fragmentShader: WebGLShader | null = null;\r\n\r\n  shaderProgram: WebGLProgram | null = null;\r\n\r\n\r\n  createShader(gl: WebGLRenderingContext, type: number, source: string) {\r\n    const shader = gl.createShader(type) as WebGLShader;\r\n\r\n    // Send the source to the shader object\r\n    gl.shaderSource(shader, source);\r\n\r\n    // Compile the shader program\r\n    gl.compileShader(shader);\r\n\r\n    // See if it compiled successfully\r\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n      console.error('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(shader));\r\n      gl.deleteShader(shader);\r\n      return null;\r\n    }\r\n\r\n    return shader;\r\n  }\r\n\r\n  createShaderProgram(gl: WebGLRenderingContext, vertexShader: WebGLShader, fragmentShader: WebGLShader): void {\r\n\r\n    const program = gl.createProgram() as WebGLProgram;\r\n\r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragmentShader);\r\n    gl.linkProgram(program);\r\n\r\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n      console.error(\"Error creating shader program.\", gl.getProgramInfoLog(program));\r\n      gl.deleteProgram(program);\r\n      throw new Error('Failed to link shaderProgram');\r\n    }\r\n\r\n    this.vertexShader = vertexShader;\r\n    this.fragmentShader = fragmentShader;\r\n    this.shaderProgram = program;\r\n\r\n    //Can delete the shaders since the program has been made.\r\n    gl.detachShader(program, vertexShader); //TODO, detaching might cause issues on some browsers, Might only need to delete.\r\n    gl.detachShader(program, fragmentShader);\r\n    gl.deleteShader(fragmentShader);\r\n    gl.deleteShader(vertexShader);\r\n  }\r\n\r\n  activateShader() {\r\n    (this.gl as WebGLRenderingContext).useProgram(this.shaderProgram);\r\n    return this;\r\n  }\r\n\r\n  deactivateShader() {\r\n    (this.gl as WebGLRenderingContext).useProgram(null);\r\n    return this;\r\n  }\r\n\r\n  setPerspective(matData: Float32Array) {\r\n    (this.gl as WebGLRenderingContext).uniformMatrix4fv(this.perspective  as WebGLUniformLocation, false, matData);\r\n    return this;\r\n  }\r\n\r\n  setModelMatrix(matData: Float32Array) {\r\n    (this.gl as WebGLRenderingContext).uniformMatrix4fv(this.modelMatrix  as WebGLUniformLocation, false, matData);\r\n    return this;\r\n  }\r\n\r\n  setCameraMatrix(matData: Float32Array) {\r\n    (this.gl as WebGLRenderingContext).uniformMatrix4fv(this.cameraMatrix  as WebGLUniformLocation, false, matData);\r\n    return this;\r\n  }\r\n\r\n  dispose() {\r\n    //unbind the program if its currently active\r\n    if ((this.gl as WebGLRenderingContext).getParameter((this.gl as WebGLRenderingContext).CURRENT_PROGRAM) === this.shaderProgram) {\r\n      this.deactivateShader();\r\n    }\r\n    (this.gl as WebGLRenderingContext).deleteProgram(this.shaderProgram);\r\n  }\r\n\r\n  //Setup custom properties\r\n  preRender() {} //abstract method, extended object may need need to do some things before rendering.\r\n\r\n  // //Handle rendering a grid\r\n  renderModel(model: Geometry) {\r\n    const gl = this.gl as WebGLRenderingContext;\r\n\t\tthis.setModelMatrix(model.transform.getModelMatrix());\t//Set the transform, so the shader knows where the model exists in 3d space\r\n\r\n\t\tif(model.mesh.noCulling) gl.disable(gl.CULL_FACE);\r\n\t\tif(model.mesh.doBlending) gl.enable(gl.BLEND);\r\n\r\n\t\tgl.drawArrays(model.mesh.drawMode, 0, model.mesh.vertexCount);\r\n\r\n\t\t//Cleanup\r\n\t\tif(model.mesh.noCulling) gl.enable(gl.CULL_FACE);\r\n\t\tif(model.mesh.doBlending) gl.disable(gl.BLEND);\r\n\r\n\t\treturn this;\r\n  }\r\n\r\n}","import ShaderProgram from \"./shaderProgram\";\r\n\r\nclass GridAxisShader extends ShaderProgram{\r\n\tconstructor(gl: WebGLRenderingContext, projectionMatrix: Float32Array){\r\n\t\t\t\r\n\t\tconst vertexShader  = '#version 300 es\\n' +\r\n\t\t\t'layout(location=4) in vec3 a_position;' +\r\n\t\t\t'layout(location=5) in float a_color;' +\r\n\r\n\t\t\t'uniform mat4 uPMatrix;' +\r\n\t\t\t'uniform mat4 uMVMatrix;' +\r\n\t\t\t'uniform mat4 uCameraMatrix;' +\r\n\t\t\t'uniform vec3 uColor[4];' +\r\n\r\n\t\t\t'out lowp vec4 color;' +\r\n\t\t\t'void main(void){' +\r\n\t\t\t\t'color = vec4(uColor[ int(a_color) ],1.0);' +\r\n\t\t\t\t'gl_Position = uPMatrix * uCameraMatrix * uMVMatrix * vec4(a_position, 1.0);' +\r\n\t\t\t'}';\r\n\t\tconst fragmentShader = '#version 300 es\\n' +\r\n\t\t\t'precision mediump float;' +\r\n\t\t\t'in vec4 color;' +\r\n\t\t\t'out vec4 finalColor;' +\r\n\t\t\t'void main(void){ finalColor = color; }';\r\n\r\n\t\tsuper(gl,vertexShader, fragmentShader);\r\n\r\n\t\t//Custom Uniforms \r\n\r\n\t\tthis.setPerspective(projectionMatrix);\r\n\t\tconst uColor = gl.getUniformLocation(this.shaderProgram as WebGLProgram ,\"uColor\");\r\n\t\tgl.uniform3fv(uColor, new Float32Array([ 0.8,0.8,0.8,  1,0,0,  0,1,0,  0,0,1 ]));\r\n\r\n\t\t//Cleanup\r\n\t\tthis.deactivateShader();\r\n\r\n\t}\r\n}\r\n\r\nclass ModelShader extends ShaderProgram{\r\n\tconstructor(gl: WebGLRenderingContext, projectionMatrix: Float32Array){\t\r\n\t\tconst vertexShader = '#version 300 es\\n' +\r\n\t\t\t'in vec3 a_position;'+\r\n\t\t\t'in vec3 a_norm;'+\r\n\t\t\t'in vec2 a_uv;'+\r\n\r\n\t\t\t'uniform mat4 uMVMatrix;'+\r\n\t\t\t'uniform mat4 uCameraMatrix;'+\r\n\t\t\t'uniform mat4 uPMatrix;'+\r\n\r\n\t\t\t'out vec3 vNormal;'+\r\n\t\t\t'out highp vec2 texCoord;'+\r\n\t\t\t'void main(void){' +\r\n\t\t\t\t'texCoord = a_uv;'+\r\n\t\t\t\t'vNormal = (uMVMatrix * vec4(a_norm, 0.)).xyz;'+\r\n\t\t\t\t'gl_Position = uPMatrix * uCameraMatrix * uMVMatrix * vec4(a_position, 1.0);'+\r\n\t\t\t'}';\r\n\r\n\t\tconst fragmentShader = '#version 300 es\\n' +\r\n\t\t\t'precision mediump float;'+\r\n\r\n\t\t\t'uniform vec3 lightDirection;'+\r\n\t\t\t'uniform float ambientLight;'+\r\n\t\t\t'uniform sampler2D uMainTexture;'+\r\n\r\n\t\t\t'in vec3 vNormal;'+\r\n\t\t\t'in highp vec2 texCoord;'+\r\n\r\n\t\t\t'out vec4 finalColor;'+\r\n\t\t\t'void main(void) {'+\r\n\t\t\t\t'float lightness = -clamp(dot(normalize(vNormal), normalize(lightDirection)), -1.0, 0.0);'+\r\n\t\t\t\t'lightness = ambientLight + (1.0 - ambientLight) * lightness;'+\r\n\t\t\t\t'finalColor = texture(uMainTexture, texCoord);'+\r\n\t\t\t'}';\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\tsuper(gl,vertexShader, fragmentShader);\r\n\r\n\t\tthis.setPerspective(projectionMatrix);\r\n\r\n\t\t//Cleanup\r\n\t\tthis.deactivateShader();\r\n\t}\r\n}\r\n\r\nexport {\r\n    GridAxisShader,\r\n\tModelShader\r\n}","\r\nimport { MeshData } from \"@/entities\";\r\nimport Transformation from \"./transformation\";\r\nexport default class Geometry {\r\n\r\n    constructor( mesh: MeshData) {\r\n\r\n        this.mesh = mesh;\r\n        this.transform = new Transformation();\r\n    }\r\n\r\n    mesh: MeshData;\r\n    transform: Transformation;\r\n\r\n    //--------------------------------------------------------------------------\r\n    //Getters/Setters\r\n    setScale(x: number, y: number, z: number) {\r\n        this.transform.scale.set(x, y, z);\r\n        return this;\r\n    }\r\n\r\n    setPosition(x: number, y: number, z: number) {\r\n        this.transform.position.set(x, y, z);\r\n        return this;\r\n    }\r\n\r\n    setRotation(x: number, y: number, z: number) {\r\n        this.transform.rotation.set(x, y, z);\r\n        return this;\r\n    }\r\n\r\n    addScale(x: number, y: number, z: number) {\r\n        this.transform.scale.x += x;\r\n        this.transform.scale.y += y;\r\n        this.transform.scale.y += y;\r\n        return this;\r\n    }\r\n\r\n    addPosition(x: number, y: number, z: number) {\r\n        this.transform.position.x += x;\r\n        this.transform.position.y += y;\r\n        this.transform.position.z += z;\r\n        return this;\r\n    }\r\n\r\n    addRotation(x: number, y: number, z: number) {\r\n        this.transform.rotation.x += x;\r\n        this.transform.rotation.y += y;\r\n        this.transform.rotation.z += z;\r\n        return this;\r\n    }\r\n\r\n    //--------------------------------------------------------------------------\r\n    //Things to do before its time to render\r\n    preRender() {\r\n        this.transform.updateMatrix();\r\n        return this;\r\n    }\r\n}","export default class Vbuffer {\r\n\r\n  constructor(gl: WebGLRenderingContext, vertexAttribute: number[], count: number) {\r\n    // Creates buffer object in GPU RAM where we can store anything\r\n    this.buffer = gl.createBuffer() as WebGLBuffer;\r\n    // Tell which buffer object type we want to operate on\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\r\n    // Write the data, and set the flag to optimize\r\n    // for rare changes to the data we're writing\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertexAttribute), gl.STATIC_DRAW);\r\n    this.gl = gl;\r\n    this.size = vertexAttribute.length / count;\r\n  }\r\n\r\n  buffer: WebGLBuffer;\r\n  gl: WebGLRenderingContext;\r\n  size: number;\r\n\r\n  destroy() {\r\n    // Free memory that is occupied by our buffer object\r\n    this.gl.deleteBuffer(this.buffer);\r\n  }\r\n\r\n  bindToAttribute(vertexAttributeIndex: number, stride: number, offset: number, size: number = this.size) {\r\n\r\n    const gl = this.gl\r\n    // Turn on the vertex attribute\r\n    gl.enableVertexAttribArray(vertexAttributeIndex);\r\n    // Bind the vertex buffer.\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\r\n\r\n    // Tell the vertex attribute how to get data out of vertexBuffer (ARRAY_BUFFER)\r\n    gl.vertexAttribPointer(vertexAttributeIndex, size, gl.FLOAT, false, stride, offset);\r\n\r\n    //Cleanup and Finalize\r\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER,null);\r\n  }\r\n\r\n}","import { MeshData } from \"@/entities\";\r\nimport { GLSetttings } from \"@/modules\";\r\nimport Geometry from \"./geometry\";\r\nimport ShaderProgram from \"./shaderProgram\";\r\nimport Vbuffer from \"./vbuffer\";\r\nclass GridAxis {\r\n\r\n  constructor() {}\r\n\r\n  static createGeometry(gl:WebGLRenderingContext, shaderProgram:ShaderProgram, enableAxis: boolean){ \r\n    return new Geometry(GridAxis.createMesh(gl, shaderProgram, enableAxis)); \r\n  }\r\n\r\n  //https://github.com/sketchpunk/FunWithWebGL2/tree/master/lesson_006\r\n  static createMesh(glContext: WebGLRenderingContext, shaderProgram: ShaderProgram, enableAxis: boolean ) {\r\n    //Dynamiclly create a grid\r\n    let gl = glContext as WebGLRenderingContext;\r\n    let verts = [],\r\n      size = 2, // W/H of the outer box of the grid, from origin we can only go 1 unit in each direction, so from left to right is 2 units max\r\n      div = 10.0, // How to divide up the grid\r\n      step = size / div, // Steps between each line, just a number we increment by for each line in the grid.\r\n      half = size / 2; // From origin the starting position is half the size.\r\n\r\n    let p; //Temp variable for position value.\r\n    for (let i = 0; i <= div; i++) {\r\n      //Vertical line\r\n      p = -half + (i * step);\r\n      verts.push(p); //x1\r\n      verts.push(0); //y1 verts.push(half);\r\n      verts.push(half); //z1 verts.push(0);\r\n      verts.push(0); //c2\r\n\r\n      verts.push(p); //x2\r\n      verts.push(0); //y2 verts.push(-half);\r\n      verts.push(-half); //z2 verts.push(0);\t\r\n      verts.push(0); //c2 verts.push(1);\r\n\r\n      //Horizontal line\r\n      p = half - (i * step);\r\n      verts.push(-half); //x1\r\n      verts.push(0); //y1 verts.push(p);\r\n      verts.push(p); //z1 verts.push(0);\r\n      verts.push(0); //c1\r\n\r\n      verts.push(half); //x2\r\n      verts.push(0); //y2 verts.push(p);\r\n      verts.push(p); //z2 verts.push(0);\r\n      verts.push(0); //c2 verts.push(1);\r\n    }\r\n\r\n    if (enableAxis) {\r\n      //x axis\r\n      verts.push(-1.1); //x1\r\n      verts.push(0); //y1\r\n      verts.push(0); //z1\r\n      verts.push(1); //c2\r\n\r\n      verts.push(1.1); //x2\r\n      verts.push(0); //y2\r\n      verts.push(0); //z2\r\n      verts.push(1); //c2\r\n\r\n      //y axis\r\n      verts.push(0); //x1\r\n      verts.push(-1.1); //y1\r\n      verts.push(0); //z1\r\n      verts.push(2); //c2\r\n\r\n      verts.push(0); //x2\r\n      verts.push(1.1); //y2\r\n      verts.push(0); //z2\r\n      verts.push(2); //c2\r\n\r\n      //z axis\r\n      verts.push(0); //x1\r\n      verts.push(0); //y1\r\n      verts.push(-1.1); //z1\r\n      verts.push(3); //c2\r\n\r\n      verts.push(0); //x2\r\n      verts.push(0); //y2\r\n      verts.push(1.1); //z2\r\n      verts.push(3); //c2\r\n    }\r\n    const strideLen = Float32Array.BYTES_PER_ELEMENT * GLSetttings.GRID_VERTEX_LEN; //Stride Length is the Vertex Size for the buffer in Bytes\r\n    const offset = Float32Array.BYTES_PER_ELEMENT * GLSetttings.GRID_VECTOR_SIZE;\r\n    const vertexCount = verts.length / GLSetttings.GRID_VERTEX_LEN;\r\n\r\n    const mesh: MeshData = {\r\n      positions : new Vbuffer(gl, verts, vertexCount),\r\n      drawMode : gl.LINES,\r\n      vertexCount,\r\n    }\r\n\r\n    mesh.positions.bindToAttribute(GLSetttings.ATTR_GRID_POSITION_LOC as number, strideLen, GLSetttings.DEFAULT_OFFSET, GLSetttings.GRID_VECTOR_SIZE);\r\n    mesh.positions.bindToAttribute(GLSetttings.ATTR_GRID_COLOR_LOC as number, strideLen, offset, GLSetttings.GRID_COLOR_SIZE);\r\n\r\n    return mesh;\r\n  }\r\n}\r\n\r\nexport {\r\n  GridAxis\r\n}","export default class Texture {\r\n\r\n    constructor(gl: WebGLRenderingContext, image: HTMLImageElement) {\r\n        this.createdTexture = gl.createTexture() as WebGLTexture;\r\n        // Set the newly created texture context as active texture\r\n        gl.bindTexture(gl.TEXTURE_2D, this.createdTexture);\r\n        // Set texture parameters, and pass the image that the texture is based on to the gpu\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n        // Set filtering methods\r\n        // Very often shaders will query the texture value between pixels,\r\n        // and this is instructing how that value shall be calculated\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.generateMipmap(gl.TEXTURE_2D);\r\n\r\n        this.gl = gl;\r\n    }\r\n\r\n    createdTexture: WebGLTexture | null = null;\r\n    gl: WebGLRenderingContext | null = null;\r\n    TEXTURE_KEY = 'TEXTURE';\r\n\r\n    useTexture(uniform: WebGLUniformLocation, binding: number): void {\r\n        const gl = this.gl as WebGLRenderingContext;\r\n        // We can bind multiple textures, and here we pick which of the bindings\r\n        // we're setting right now\r\n        gl.activeTexture(gl[`${this.TEXTURE_KEY}${binding}`]);\r\n        // After picking the binding, we set the texture\r\n        gl.bindTexture(gl.TEXTURE_2D, this.createdTexture);\r\n        // Finally, we pass to the uniform the binding ID we've used\r\n        gl.uniform1i(uniform, binding);\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n    }\r\n\r\n    static loadTexture(gl: WebGLRenderingContext, url: string): Promise < Texture > {\r\n        return new Promise(function (resolve) {\r\n            const image = new Image();\r\n            image.onload = function () {\r\n                resolve(new Texture(gl, image))\r\n            };\r\n            image.src = url\r\n        });\r\n    }\r\n}","import {\r\n    Normal,\r\n    Vector,\r\n    Surface,\r\n    UV,\r\n    Vertex\r\n} from \"@/entities\";\r\n\r\nexport default class OBJ {\r\n\r\n    constructor(surfaces: Array < Surface > ) {\r\n        this.surfaces = surfaces;\r\n    }\r\n\r\n    surfaces: Surface[] = [];\r\n    vertices: Vertex[] = [];\r\n    position: Vector | null = null;\r\n    normal: Normal | null = null;\r\n    uv: UV | null = null;\r\n    x: number = 0;\r\n    y: number = 0;\r\n    z: number = 0;\r\n\r\n    static parseOBJ(src: string) {\r\n\r\n        const POSITION = /^v\\s+([\\d\\.\\+\\-eE]+)\\s+([\\d\\.\\+\\-eE]+)\\s+([\\d\\.\\+\\-eE]+)/\r\n        const NORMAL = /^vn\\s+([\\d\\.\\+\\-eE]+)\\s+([\\d\\.\\+\\-eE]+)\\s+([\\d\\.\\+\\-eE]+)/\r\n        const UV = /^vt\\s+([\\d\\.\\+\\-eE]+)\\s+([\\d\\.\\+\\-eE]+)/\r\n        const SURFACE = /^f\\s+(-?\\d+)\\/(-?\\d+)\\/(-?\\d+)\\s+(-?\\d+)\\/(-?\\d+)\\/(-?\\d+)\\s+(-?\\d+)\\/(-?\\d+)\\/(-?\\d+)(?:\\s+(-?\\d+)\\/(-?\\d+)\\/(-?\\d+))?/\r\n\r\n        const lines = src.split('\\n');\r\n        const positions: Vector[] = [];\r\n        const uvs: UV[] = [];\r\n        const normals: Normal[] = [];\r\n        const surfaces: Surface[] = [];\r\n\r\n        lines.forEach(function (line: string) {\r\n            // Match each line of the file against various RegEx-es\r\n            let result = null;\r\n            if ((result = POSITION.exec(line)) !== null) {\r\n                // Add new vertex position\r\n                positions.push(Vec3Struct(parseFloat(result[1]), parseFloat(result[2]), parseFloat(result[3])))\r\n            } else if ((result = NORMAL.exec(line)) !== null) {\r\n                // Add new vertex normal\r\n                normals.push(Vec3Struct(parseFloat(result[1]), parseFloat(result[2]), parseFloat(result[3])))\r\n            } else if ((result = UV.exec(line)) !== null) {\r\n                // Add new texture mapping point\r\n                uvs.push(Vec2Struct(parseFloat(result[1]), 1 - parseFloat(result[2])))\r\n            } else if ((result = SURFACE.exec(line)) !== null) {\r\n                // Add new face\r\n                const vertices: Vertex[] = [];\r\n                // Create three vertices from the passed one-indexed indices\r\n                for (let i = 1; i < 10; i += 3) {\r\n                    const part = result.slice(i, i + 3);\r\n                    const position = positions[parseInt(part[0]) - 1];\r\n                    const uv = uvs[parseInt(part[1]) - 1];\r\n                    const normal = normals[parseInt(part[2]) - 1];\r\n                    vertices.push(VertexStruct(position, normal, uv));\r\n                }\r\n                surfaces.push(SurfaceStruct(vertices));\r\n            }\r\n        })\r\n\r\n        return new OBJ(surfaces);\r\n    }\r\n\r\n    // Loads an OBJ file from the given URL, and returns it as a promise\r\n    static async loadOBJ(url: string) {\r\n        const response = await fetch(url);\r\n        const data = OBJ.parseOBJ(await response.text());\r\n        return data;\r\n    }\r\n\r\n    vertexCount() {\r\n        return this.surfaces.length * 3;\r\n    }\r\n\r\n    positions() {\r\n        const result: number[] = [];\r\n        this.surfaces.forEach(function (surface: Surface) {\r\n            surface.vertices.forEach(function (vertex: Vertex) {\r\n                const v = vertex.position;\r\n                result.push(v.x, v.y, v.z);\r\n            })\r\n        })\r\n        return result;\r\n    }\r\n\r\n    normals() {\r\n        const result: number[] = [];\r\n        this.surfaces.forEach(function (surface: Surface) {\r\n            surface.vertices.forEach(function (vertex: Vertex) {\r\n                const v = vertex.normal;\r\n                result.push(v.x, v.y, v.z);\r\n            })\r\n        })\r\n        return result;\r\n    }\r\n\r\n    uvs() {\r\n        const result: number[] = [];\r\n        this.surfaces.forEach(function (surface: Surface) {\r\n            surface.vertices.forEach(function (vertex: Vertex) {\r\n                const v = vertex.uv;\r\n                result.push(v.x, v.y);\r\n            })\r\n        })\r\n        return result;\r\n    }\r\n\r\n}\r\n\r\nexport function SurfaceStruct(vertices: Array < Vertex > ) {\r\n    return {\r\n        vertices,\r\n    };\r\n}\r\n\r\nexport function VertexStruct(position: Vector, normal: Normal, uv: UV) {\r\n    return {\r\n        position,\r\n        normal,\r\n        uv\r\n    };\r\n}\r\n\r\nexport function Vec3Struct(x: number, y: number, z: number) {\r\n    return {\r\n        x,\r\n        y,\r\n        z\r\n    };\r\n}\r\n\r\nexport function Vec2Struct(x: number, y: number) {\r\n    return {\r\n        x,\r\n        y\r\n    };\r\n}","import Geometry from './geometry';\r\nimport Texture from './texture';\r\nimport Vbuffer from './vbuffer';\r\nimport ShaderProgram from './shaderProgram';\r\nimport OBJ from './obj';\r\nimport { MeshData } from '@/entities';\r\nimport { GLSetttings } from '@/modules';\r\n\r\nexport default class Model {\r\n\r\n  constructor() {}\r\n\r\n  static async createGeometry(gl: WebGLRenderingContext, shaderProgram: ShaderProgram, objSrc: string, textureSrc: string){ \r\n    return  new Geometry(await Model.createMesh(gl, shaderProgram, objSrc, textureSrc)); \r\n  }\r\n\r\n  static async createMesh(gl: WebGLRenderingContext, shaderProgram: ShaderProgram, objSrc: string, textureSrc: string) {\r\n    \r\n    const attrib = await Model.loadAttributes(gl, objSrc, textureSrc);\r\n    const vertexCount = attrib.vertices.vertexCount();\r\n\r\n    const mesh: MeshData = {\r\n      positions : new Vbuffer(gl, attrib.vertices.positions(), vertexCount),\r\n      normals: new Vbuffer(gl, attrib.vertices.normals(), vertexCount),\r\n      uvs: new Vbuffer(gl, attrib.vertices.uvs(), vertexCount),\r\n      texture: attrib.texture as Texture,\r\n      drawMode : gl.TRIANGLES,\r\n      vertexCount,\r\n    }\r\n\r\n    mesh.positions.bindToAttribute(shaderProgram.positionIndex as number, GLSetttings.DEFAULT_STRIDE, GLSetttings.DEFAULT_OFFSET);\r\n    mesh.normals?.bindToAttribute(shaderProgram.normalIndex as number, GLSetttings.DEFAULT_STRIDE, GLSetttings.DEFAULT_OFFSET);\r\n    mesh.uvs?.bindToAttribute(shaderProgram.uvIndex as number, GLSetttings.DEFAULT_STRIDE, GLSetttings.DEFAULT_OFFSET);\r\n\r\n    return mesh;\r\n  }\r\n  \r\n  static async loadAttributes(gl: WebGLRenderingContext, objSrc: string, textureSrc: string) {\r\n    const objVertices = await OBJ.loadOBJ(objSrc);\r\n    const objTexture = await Texture.loadTexture(gl, textureSrc);\r\n    const [vertices, texture] = await Promise.all([objVertices, objTexture]);\r\n    \r\n    return {vertices, texture};\r\n  }\r\n\r\n}","import GLExtend from './core/GLExtend';\r\nimport {Camera, CameraController }  from './core/camera';\r\nimport { GridAxisShader, ModelShader } from './core/shaderExtend';\r\nimport { GridAxis } from './core/primitives';\r\nimport Light  from './core/light';\r\nimport Model from './core/model';\r\nimport { ProgramEntrySettings } from '@/modules';\r\n\r\n\r\n(async () => {\r\n    const glExtend = new GLExtend(ProgramEntrySettings.WEBGL_CANVAS_ID);\r\n    glExtend.fitScreen(0.95, 0.90).setClearColor(0, 0, 0, 1.0).clear();\r\n    const gl = glExtend.getContext() as WebGLRenderingContext;\r\n\r\n    const camera = new Camera(gl as WebGLRenderingContext);\r\n    camera.transform.position.set(0, 1, 3);\r\n    const cemeraController = new CameraController(gl as WebGLRenderingContext, camera);\r\n\r\n    const gridAxisShader = new GridAxisShader(gl as WebGLRenderingContext, camera.projection);\r\n    const gridAxis = GridAxis.createGeometry(gl, gridAxisShader, false);\r\n\r\n    const modelShader = new ModelShader(gl as WebGLRenderingContext, camera.projection);\r\n    const model = await Model.createGeometry(gl, modelShader, ProgramEntrySettings.PATH_ASSETS_SPHERE, ProgramEntrySettings.PATH_ASSETS_DIFFUSE);\r\n    model.setScale(0.15,0.15,0.15);\r\n\r\n    const loop = () => {\r\n        \r\n        camera.updateViewMatrix();\r\n        glExtend.clear();\r\n\r\n        gridAxisShader.activateShader()\r\n            .setCameraMatrix(camera.viewMatrix)\r\n            .renderModel(gridAxis.preRender());\r\n\r\n        modelShader.activateShader()\r\n            .setCameraMatrix(camera.viewMatrix)\r\n            .renderModel(model.preRender());\r\n\r\n        requestAnimationFrame(loop);\r\n    }\r\n    loop();\r\n})()"],"sourceRoot":""}
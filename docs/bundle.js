(()=>{"use strict";var t={};function e(t,e,r,i){return new(r||(r=Promise))((function(n,o){function s(t){try{l(i.next(t))}catch(t){o(t)}}function a(t){try{l(i.throw(t))}catch(t){o(t)}}function l(t){var e;t.done?n(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,a)}l((i=i.apply(t,e||[])).next())}))}t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var r=t.g.document;if(!e&&r&&(r.currentScript&&(e=r.currentScript.src),!e)){var i=r.getElementsByTagName("script");i.length&&(e=i[i.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();class r extends HTMLElement{constructor(){super();const t=this.attachShadow({mode:"open"});t.innerHTML='\n          <style>\n              :host-context(.fade-app-loader) {\n                visibility: hidden;\n                opacity: 0;\n                transition: visibility 0.5s, opacity 0.5s linear;\n              }\n              .lds-ellipsis {\n                display: inline-block;\n                position: relative;\n                width: 80px;\n                height: 80px;\n                opacity: 0.5;\n              }\n              .lds-ellipsis div {\n                position: absolute;\n                top: 33px;\n                width: 20px;\n                height: 20px;\n                border-radius: 50%;\n                background: #fff;\n                animation-timing-function: cubic-bezier(0, 1, 1, 0);\n              }\n              .lds-ellipsis div:nth-child(1) {\n                left: 0px;\n                animation: lds-ellipsis1 0.6s infinite;\n              }\n              .lds-ellipsis div:nth-child(2) {\n                left: 5px;\n                animation: lds-ellipsis2 0.6s infinite;\n              }\n              .lds-ellipsis div:nth-child(3) {\n                left: 30px;\n                animation: lds-ellipsis2 0.6s infinite;\n              }\n              .lds-ellipsis div:nth-child(4) {\n                left: 60px;\n                animation: lds-ellipsis3 0.6s infinite;\n              }\n              @keyframes lds-ellipsis1 {\n                0% {\n                  transform: scale(0);\n                }\n                100% {\n                  transform: scale(1);\n                }\n              }\n              @keyframes lds-ellipsis3 {\n                0% {\n                  transform: scale(1);\n                }\n                100% {\n                  transform: scale(0);\n                }\n              }\n              @keyframes lds-ellipsis2 {\n                0% {\n                  transform: translate(0, 0);\n                }\n                100% {\n                  transform: translate(24px, 0);\n                }\n              }\n\n          </style>\n          <div id="app-loader"\n              style="display: flex;\n              opacity: 1;\n              justify-content: center;\n              align-items: center;\n              position: fixed; \n              left: 0; \n              top: 0; right: \n              0; bottom: 0; \n              background: rgb(0, 0, 0, 0.4);">\n              <div class="lds-ellipsis"><div></div><div></div><div></div><div></div></div>\n          </div>',this.appLoaderElem=t.children[1]}disable(){document.getElementById("app").classList.add("fade-app-loader")}}customElements.define("app-loader",r);const i=t.p+"assets/resources/formula_1/source/formula_1.obj",n=t.p+"assets/resources/formula_1/textures/formula_1.png",o=i,s=n,a=/\s+/;var l,h,c,u,m;!function(t){t.WEBGL_CANVAS_ID="qrius-glCanvas",t.WEBGL_CONTEXT="webgl2",t.WEBGL_CONTEXT_EXPERIMENTAL="experimental-webgl",t.WEBGL_CONTEXT_WEBKIT="webkit-3d",t.WEBGL_CONTEXT_MOZ="moz-webgl",t.WEBGL_DEPTH_TEXTURE="WEBGL_depth_texture",t.WEBGL_CONTEXT_ERROR_MESSAGE="Could not initialise WebGL",t.WEBGL_DEPTH_TEXTUR_ERROR_MESSAGE="need WEBGL_depth_texture",t.PATH_ASSETS_OBJ="/webgl-3d-renderer/assets/resources/formula_1/source/formula_1.obj",t.PATH_ASSETS_TEXTURE="/webgl-3d-renderer/assets/resources/formula_1/textures/formula_1.png",t[t.DEPTH_TEXTURE_SIZE=512]="DEPTH_TEXTURE_SIZE"}(l||(l={})),function(t){t[t.NEAR_PLANE=.1]="NEAR_PLANE",t[t.FAR_PLANE=100]="FAR_PLANE",t[t.FIELD_OF_VIEW=45]="FIELD_OF_VIEW",t[t.MODE_FREE=0]="MODE_FREE",t[t.MODE_ORBIT=1]="MODE_ORBIT"}(h||(h={})),function(t){t.KEY_DOWN_EVENT="keydown",t.KEY_UP_EVENT="keyup",t[t.KEY_DOWN=40]="KEY_DOWN",t[t.KEY_UP=38]="KEY_UP",t[t.KEY_LEFT=37]="KEY_LEFT",t[t.KEY_RIGHT=39]="KEY_RIGHT",t.MOUSE_UP="mouseup",t.MOUSE_DOWN="mousedown",t.MOUSE_WHEEL="mousewheel",t.MOUSE_MOVE="mousemove",t[t.ROTATION_RATE=-300]="ROTATION_RATE",t[t.PAN_RATE=5]="PAN_RATE",t[t.ZOOM_RATE=200]="ZOOM_RATE"}(c||(c={})),function(t){t[t.DEFAULT_OFFSET=0]="DEFAULT_OFFSET",t[t.DEFAULT_STRIDE=0]="DEFAULT_STRIDE",t[t.GRID_VECTOR_SIZE=3]="GRID_VECTOR_SIZE",t[t.GRID_VERTEX_LEN=4]="GRID_VERTEX_LEN",t.ATTR_POSITION_NAME="a_position",t.ATTR_NORMAL_NAME="a_norm",t.ATTR_UV_NAME="a_texCoord",t.UNI_COLOR="u_color",t.UNI_MODEL_MAT="u_mVMatrix",t.UNI_PERSPECTIV_MAT="u_pMatrix",t.UNI_ORTHO_MAT="u_oMatrix",t.UNI_CAMERA_MAT="u_cameraViewMatrix",t.UNI_LIGHT_VIEW_CAMERA_MAT="u_lightViewCameraMatrix",t.UNI_REVERSE_LIGHT_DIRECTION_MAT="u_reverseLightDirection",t.UNI_TEXTURE_MAT="u_textureMatrix",t.UNI_DIFFUSE="u_diffuse",t.UNI_PROJECTED_TEXTURE="u_projectedTexture",t.UNI_LIGHT_AMBIENT="u_ambientLightColor",t.UNI_LIGHT_DIRECTION="u_lightDirection",t.UNI_LIGHT_POSITION="u_lightPosition",t.UNI_CAMERA_POSITION="u_cameraPosition",t.UNI_CAMERA_SHININESS="u_shininess",t.UNI_LIGHT_COLOR="u_lightColor",t.UNI_SPECULAR_COLOR="u_specularColor",t.UNI_SPECULAR_FACTOR="u_specularFactor",t.BUFFER_TYPE_ELEMENT_ARRAY="array_elements",t.BUFFER_TYPE_ARRAY="arrays"}(u||(u={})),function(t){t.V="v",t.VN="vn",t.VT="vt",t.F="f"}(m||(m={}));const _=t=>({vertices:t}),f=(t,e,r)=>({position:t,normal:e,uv:r}),d=(t,e,r)=>({x:t,y:e,z:r}),E=t=>t*Math.PI/180,p=t=>{const e=[t.red/255,t.green/255,t.blue/255,1];return new Float32Array(e)};class v{constructor(t,e,r){this.x=t||0,this.y=e||0,this.z=r||0}magnitude(t={x:0,y:0,z:0}){if(void 0===t)return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);let e=t.x-this.x,r=t.y-this.y,i=t.y-this.z;return Math.sqrt(e*e+r*r+i*i)}normalize(){let t=this.magnitude();return this.x/=t,this.y/=t,this.z/=t,this}set(t,e,r){return this.x=t,this.y=e,this.z=r,this}multiScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}getArray(){return[this.x,this.y,this.z]}getFloatArray(){return new Float32Array([this.x,this.y,this.z])}clone(){return new v(this.x,this.y,this.z)}}class g{constructor(){this.matrix=g.identity()}vtranslate(t){return g.translate(this.matrix,t.x,t.y,t.z),this}translate(t,e,r){return g.translate(this.matrix,t,e,r),this}rotateY(t){return g.rotateY(this.matrix,t),this}rotateX(t){return g.rotateX(this.matrix,t),this}rotateZ(t){return g.rotateZ(this.matrix,t),this}vscale(t){return g.scale(this.matrix,t.x,t.y,t.z),this}scale(t,e,r){return g.scale(this.matrix,t,e,r),this}invert(){return g.invert(this.matrix),this}resetRotation(){for(let t=0;t<this.matrix.length;t++)t>=12&&t<=14||(this.matrix[t]=t%5==0?1:0);return this}resetMat(){for(let t=0;t<this.matrix.length;t++)this.matrix[t]=t%5==0?1:0;return this}static identity(){let t=new Float32Array(16);return t[0]=t[5]=t[10]=t[15]=1,t}static perspective(t,e,r,i,n){let o=1/Math.tan(e/2),s=1/(i-n);t[0]=o/r,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=o,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=(n+i)*s,t[11]=-1,t[12]=0,t[13]=0,t[14]=2*n*i*s,t[15]=0}static ortho(t,e,r,i,n,o,s){let a=1/(e-r),l=1/(i-n),h=1/(o-s);t[0]=-2*a,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=-2*l,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=2*h,t[11]=0,t[12]=(e+r)*a,t[13]=(n+i)*l,t[14]=(s+o)*h,t[15]=1}static lookAt(t,e,r,i=null){i=i||new Float32Array(16);var n=g.normalize(g.subtractVectors(t,e)),o=g.normalize(g.cross(r,n)),s=g.normalize(g.cross(n,o));return i[0]=o[0],i[1]=o[1],i[2]=o[2],i[3]=0,i[4]=s[0],i[5]=s[1],i[6]=s[2],i[7]=0,i[8]=n[0],i[9]=n[1],i[10]=n[2],i[11]=0,i[12]=t[0],i[13]=t[1],i[14]=t[2],i[15]=1,i}static subtractVectors(t,e,r=null){return(r=r||new Float32Array(3))[0]=t[0]-e[0],r[1]=t[1]-e[1],r[2]=t[2]-e[2],r}static cross(t,e,r=null){return(r=r||new Float32Array(3))[0]=t[1]*e[2]-t[2]*e[1],r[1]=t[2]*e[0]-t[0]*e[2],r[2]=t[0]*e[1]-t[1]*e[0],r}static normalize(t,e=null){e=e||new Float32Array(3);var r=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);return r>1e-5&&(e[0]=t[0]/r,e[1]=t[1]/r,e[2]=t[2]/r),e}static transpose(t,e){if(t===e){let r=e[1],i=e[2],n=e[3],o=e[6],s=e[7],a=e[11];t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=r,t[6]=e[9],t[7]=e[13],t[8]=i,t[9]=o,t[11]=e[14],t[12]=n,t[13]=s,t[14]=a}else t[0]=e[0],t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=e[1],t[5]=e[5],t[6]=e[9],t[7]=e[13],t[8]=e[2],t[9]=e[6],t[10]=e[10],t[11]=e[14],t[12]=e[3],t[13]=e[7],t[14]=e[11],t[15]=e[15];return t}static normalMat3(t,e){let r=e[0],i=e[1],n=e[2],o=e[3],s=e[4],a=e[5],l=e[6],h=e[7],c=e[8],u=e[9],m=e[10],_=e[11],f=e[12],d=e[13],E=e[14],p=e[15],v=r*a-i*s,g=r*l-n*s,T=r*h-o*s,R=i*l-n*a,x=i*h-o*a,M=n*h-o*l,A=c*d-u*f,L=c*E-m*f,w=c*p-_*f,F=u*E-m*d,P=u*p-_*d,I=m*p-_*E,U=v*I-g*P+T*F+R*w-x*L+M*A;return U?(U=1/U,t[0]=(a*I-l*P+h*F)*U,t[1]=(l*w-s*I-h*L)*U,t[2]=(s*P-a*w+h*A)*U,t[3]=(n*P-i*I-o*F)*U,t[4]=(r*I-n*w+o*L)*U,t[5]=(i*w-r*P-o*A)*U,t[6]=(d*M-E*x+p*R)*U,t[7]=(E*T-f*M-p*g)*U,t[8]=(f*x-d*T+p*v)*U,t):null}static multiplyVector(t,e){let r=e[0],i=e[1],n=e[2],o=e[3],s=t[0],a=t[1],l=t[2],h=t[3],c=t[4],u=t[5],m=t[6],_=t[7],f=t[8],d=t[9],E=t[10],p=t[11];return[r*s+i*c+n*f+o*t[12],r*a+i*u+n*d+o*t[13],r*l+i*m+n*E+o*t[14],r*h+i*_+n*p+o*t[15]]}static transformVec4(t,e,r){return t[0]=r[0]*e[0]+r[4]*e[1]+r[8]*e[2]+r[12]*e[3],t[1]=r[1]*e[0]+r[5]*e[1]+r[9]*e[2]+r[13]*e[3],t[2]=r[2]*e[0]+r[6]*e[1]+r[10]*e[2]+r[14]*e[3],t[3]=r[3]*e[0]+r[7]*e[1]+r[11]*e[2]+r[15]*e[3],t}static mult(t,e,r){let i=e[0],n=e[1],o=e[2],s=e[3],a=e[4],l=e[5],h=e[6],c=e[7],u=e[8],m=e[9],_=e[10],f=e[11],d=e[12],E=e[13],p=e[14],v=e[15],g=r[0],T=r[1],R=r[2],x=r[3];return t[0]=g*i+T*a+R*u+x*d,t[1]=g*n+T*l+R*m+x*E,t[2]=g*o+T*h+R*_+x*p,t[3]=g*s+T*c+R*f+x*v,g=r[4],T=r[5],R=r[6],x=r[7],t[4]=g*i+T*a+R*u+x*d,t[5]=g*n+T*l+R*m+x*E,t[6]=g*o+T*h+R*_+x*p,t[7]=g*s+T*c+R*f+x*v,g=r[8],T=r[9],R=r[10],x=r[11],t[8]=g*i+T*a+R*u+x*d,t[9]=g*n+T*l+R*m+x*E,t[10]=g*o+T*h+R*_+x*p,t[11]=g*s+T*c+R*f+x*v,g=r[12],T=r[13],R=r[14],x=r[15],t[12]=g*i+T*a+R*u+x*d,t[13]=g*n+T*l+R*m+x*E,t[14]=g*o+T*h+R*_+x*p,t[15]=g*s+T*c+R*f+x*v,t}static scale(t,e,r,i){return t[0]*=e,t[1]*=e,t[2]*=e,t[3]*=e,t[4]*=r,t[5]*=r,t[6]*=r,t[7]*=r,t[8]*=i,t[9]*=i,t[10]*=i,t[11]*=i,t}static rotateY(t,e){let r=Math.sin(e),i=Math.cos(e),n=t[0],o=t[1],s=t[2],a=t[3],l=t[8],h=t[9],c=t[10],u=t[11];return t[0]=n*i-l*r,t[1]=o*i-h*r,t[2]=s*i-c*r,t[3]=a*i-u*r,t[8]=n*r+l*i,t[9]=o*r+h*i,t[10]=s*r+c*i,t[11]=a*r+u*i,t}static rotateX(t,e){let r=Math.sin(e),i=Math.cos(e),n=t[4],o=t[5],s=t[6],a=t[7],l=t[8],h=t[9],c=t[10],u=t[11];return t[4]=n*i+l*r,t[5]=o*i+h*r,t[6]=s*i+c*r,t[7]=a*i+u*r,t[8]=l*i-n*r,t[9]=h*i-o*r,t[10]=c*i-s*r,t[11]=u*i-a*r,t}static rotateZ(t,e){let r=Math.sin(e),i=Math.cos(e),n=t[0],o=t[1],s=t[2],a=t[3],l=t[4],h=t[5],c=t[6],u=t[7];return t[0]=n*i+l*r,t[1]=o*i+h*r,t[2]=s*i+c*r,t[3]=a*i+u*r,t[4]=l*i-n*r,t[5]=h*i-o*r,t[6]=c*i-s*r,t[7]=u*i-a*r,t}static rotate(t,e,r){let i,n,o,s,a,l,h,c,u,m,_,f,d,E,p,v,g,T,R,x,M,A,L,w,F=r[0],P=r[1],I=r[2],U=Math.sqrt(F*F+P*P+I*I);if(Math.abs(U)<1e-6)return null;U=1/U,F*=U,P*=U,I*=U,i=Math.sin(e),n=Math.cos(e),o=1-n,s=t[0],a=t[1],l=t[2],h=t[3],c=t[4],u=t[5],m=t[6],_=t[7],f=t[8],d=t[9],E=t[10],p=t[11],v=F*F*o+n,g=P*F*o+I*i,T=I*F*o-P*i,R=F*P*o-I*i,x=P*P*o+n,M=I*P*o+F*i,A=F*I*o+P*i,L=P*I*o-F*i,w=I*I*o+n,t[0]=s*v+c*g+f*T,t[1]=a*v+u*g+d*T,t[2]=l*v+m*g+E*T,t[3]=h*v+_*g+p*T,t[4]=s*R+c*x+f*M,t[5]=a*R+u*x+d*M,t[6]=l*R+m*x+E*M,t[7]=h*R+_*x+p*M,t[8]=s*A+c*L+f*w,t[9]=a*A+u*L+d*w,t[10]=l*A+m*L+E*w,t[11]=h*A+_*L+p*w}static invert(t,e){void 0===e&&(e=t);let r=e[0],i=e[1],n=e[2],o=e[3],s=e[4],a=e[5],l=e[6],h=e[7],c=e[8],u=e[9],m=e[10],_=e[11],f=e[12],d=e[13],E=e[14],p=e[15],v=r*a-i*s,g=r*l-n*s,T=r*h-o*s,R=i*l-n*a,x=i*h-o*a,M=n*h-o*l,A=c*d-u*f,L=c*E-m*f,w=c*p-_*f,F=u*E-m*d,P=u*p-_*d,I=m*p-_*E,U=v*I-g*P+T*F+R*w-x*L+M*A;return!!U&&(U=1/U,t[0]=(a*I-l*P+h*F)*U,t[1]=(n*P-i*I-o*F)*U,t[2]=(d*M-E*x+p*R)*U,t[3]=(m*x-u*M-_*R)*U,t[4]=(l*w-s*I-h*L)*U,t[5]=(r*I-n*w+o*L)*U,t[6]=(E*T-f*M-p*g)*U,t[7]=(c*M-m*T+_*g)*U,t[8]=(s*P-a*w+h*A)*U,t[9]=(i*w-r*P-o*A)*U,t[10]=(f*x-d*T+p*v)*U,t[11]=(u*T-c*x-_*v)*U,t[12]=(a*L-s*F-l*A)*U,t[13]=(r*F-i*L+n*A)*U,t[14]=(d*g-f*R-E*v)*U,t[15]=(c*R-u*g+m*v)*U,!0)}static translate(t,e,r,i){t[12]=t[0]*e+t[4]*r+t[8]*i+t[12],t[13]=t[1]*e+t[5]*r+t[9]*i+t[13],t[14]=t[2]*e+t[6]*r+t[10]*i+t[14],t[15]=t[3]*e+t[7]*r+t[11]*i+t[15]}}class T{constructor(){this.position=new v(0,0,0),this.scale=new v(1,1,1),this.rotation=new v(0,0,0),this.matView=new g,this.matNormal=new Float32Array(9),this.forward=new Float32Array(4),this.up=new Float32Array(4),this.right=new Float32Array(4)}updateMatrix(){return this.matView.resetMat().vtranslate(this.position).rotateX(E(this.rotation.x)).rotateY(E(this.rotation.y)).rotateZ(E(this.rotation.z)).vscale(this.scale),g.normalMat3(this.matNormal,this.matView.matrix),g.transformVec4(this.forward,[0,0,1,0],this.matView.matrix),g.transformVec4(this.up,[0,1,0,0],this.matView.matrix),g.transformVec4(this.right,[1,0,0,0],this.matView.matrix),this.matView.matrix}updateDirection(){return g.transformVec4(this.forward,[0,0,1,0],this.matView.matrix),g.transformVec4(this.up,[0,1,0,0],this.matView.matrix),g.transformVec4(this.right,[1,0,0,0],this.matView.matrix),this}getModelMatrix(){return this.matView.matrix}getNormalMatrix(){return this.matNormal}reset(){this.position.set(0,0,0),this.scale.set(1,1,1),this.rotation.set(0,0,0)}}class R{constructor(t,e=h.FIELD_OF_VIEW,r=h.NEAR_PLANE,i=h.FAR_PLANE){this.perspectiveProjection=new Float32Array(16),this.orthoProjection=new Float32Array(16);const n=t.canvas.width/t.canvas.height,o=-t.canvas.width/2,s=t.canvas.width/2,a=t.canvas.height/2,l=-t.canvas.height/2;g.perspective(this.perspectiveProjection,e,n,r,i),g.ortho(this.orthoProjection,o,s,l,a,1,10),this.transform=new T,this.viewMatrix=new Float32Array(16),this.mode=R.MODE_ORBIT}panX(t){this.mode!=R.MODE_ORBIT&&(this.updateViewMatrix(),this.transform.position.x+=this.transform.right[0]*t,this.transform.position.y+=this.transform.right[1]*t,this.transform.position.z+=this.transform.right[2]*t)}panY(t){this.updateViewMatrix(),this.transform.position.y+=this.transform.up[1]*t,this.mode!=R.MODE_ORBIT&&(this.transform.position.x+=this.transform.up[0]*t,this.transform.position.z+=this.transform.up[2]*t)}panZ(t){this.updateViewMatrix(),this.mode==R.MODE_ORBIT?this.transform.position.z+=t:(this.transform.position.x+=this.transform.forward[0]*t,this.transform.position.y+=this.transform.forward[1]*t,this.transform.position.z+=this.transform.forward[2]*t)}updateViewMatrix(){return this.mode==R.MODE_FREE?this.transform.matView.resetMat().vtranslate(this.transform.position).rotateX(E(this.transform.rotation.x)).rotateY(E(this.transform.rotation.y)):this.transform.matView.resetMat().rotateX(E(this.transform.rotation.x)).rotateY(E(this.transform.rotation.y)).vtranslate(this.transform.position),this.transform.updateDirection(),g.invert(this.viewMatrix,this.transform.matView.matrix),this.viewMatrix}}R.MODE_FREE=h.MODE_FREE,R.MODE_ORBIT=h.MODE_ORBIT;class x{constructor(t,e){const r=t.canvas.getBoundingClientRect();this.canvas=t.canvas,this.camera=e,this.rotateRate=c.ROTATION_RATE,this.panRate=c.PAN_RATE,this.zoomRate=c.ZOOM_RATE,this.offsetX=r.left,this.offsetY=r.top,this.initX=0,this.initY=0,this.prevX=0,this.prevY=0,this.onUpHandler=t=>this.onMouseUp(t),this.onMoveHandler=t=>this.onMouseMove(t),this.canvas.addEventListener(c.MOUSE_DOWN,(t=>this.onMouseDown(t))),this.canvas.addEventListener(c.MOUSE_WHEEL,(t=>this.onMouseWheel(t)))}getMouseVec2(t){return{x:t.pageX-this.offsetX,y:t.pageY-this.offsetY}}onMouseDown(t){this.initX=this.prevX=t.pageX-this.offsetX,this.initY=this.prevY=t.pageY-this.offsetY,this.canvas.addEventListener(c.MOUSE_UP,this.onUpHandler),this.canvas.addEventListener(c.MOUSE_MOVE,this.onMoveHandler)}onMouseUp(t){this.canvas.removeEventListener(c.MOUSE_UP,this.onUpHandler),this.canvas.removeEventListener(c.MOUSE_MOVE,this.onMoveHandler)}onMouseWheel(t){let e=Math.max(-1,Math.min(1,t.wheelDelta||-t.detail));this.camera.panZ(-e*(this.zoomRate/this.canvas.height))}onMouseMove(t){let e=t.pageX-this.offsetX,r=t.pageY-this.offsetY,i=e-this.prevX,n=r-this.prevY;t.shiftKey?(this.camera.panX(-i*(this.panRate/this.canvas.width)),this.camera.panY(n*(this.panRate/this.canvas.height))):(this.camera.transform.rotation.y+=i*(this.rotateRate/this.canvas.width),this.camera.transform.rotation.x+=n*(this.rotateRate/this.canvas.height)),this.prevX=e,this.prevY=r}}class M{constructor(t){var e,r,i,n,o,s,a;this.gl=null,this.rgb_32_bit=255,this.alpha=1;const h=document.getElementById(t);this.gl=h.getContext(l.WEBGL_CONTEXT),null!==(e=this.gl)&&void 0!==e||alert(l.WEBGL_CONTEXT_ERROR_MESSAGE),null===(r=this.gl)||void 0===r||r.cullFace(this.gl.BACK),null===(i=this.gl)||void 0===i||i.frontFace(this.gl.CCW),null===(n=this.gl)||void 0===n||n.enable(this.gl.DEPTH_TEST),null===(o=this.gl)||void 0===o||o.enable(this.gl.CULL_FACE),null===(s=this.gl)||void 0===s||s.depthFunc(this.gl.LEQUAL),null===(a=this.gl)||void 0===a||a.blendFunc(this.gl.SRC_ALPHA,this.gl.ONE_MINUS_SRC_ALPHA),this.canvas=h}setSize(t,e){var r;return this.canvas.style.width=t+"px",this.canvas.style.height=e+"px",this.canvas.width=t,this.canvas.height=e,null===(r=this.gl)||void 0===r||r.viewport(0,0,t,e),this}depthRender(t){var e,r,i,n,o,s;return null===(e=this.gl)||void 0===e||e.bindFramebuffer(null===(r=this.gl)||void 0===r?void 0:r.FRAMEBUFFER,t.depthFramebuffer),null===(i=this.gl)||void 0===i||i.viewport(0,0,t.depthTextureSize,t.depthTextureSize),null===(n=this.gl)||void 0===n||n.clear((null===(o=this.gl)||void 0===o?void 0:o.COLOR_BUFFER_BIT)|(null===(s=this.gl)||void 0===s?void 0:s.DEPTH_BUFFER_BIT)),this}fitScreen(t,e){return this.setSize(window.innerWidth*(t||1),window.innerHeight*(e||1))}setClearColor(t,e,r,i=1){var n;return null===(n=this.gl)||void 0===n||n.clearColor(t/this.rgb_32_bit,e/this.rgb_32_bit,r/this.rgb_32_bit,i),this}clearFramebuffer(){var t,e;return null===(t=this.gl)||void 0===t||t.bindFramebuffer(null===(e=this.gl)||void 0===e?void 0:e.FRAMEBUFFER,null),this}clear(){var t,e,r;return null===(t=this.gl)||void 0===t||t.clear((null===(e=this.gl)||void 0===e?void 0:e.COLOR_BUFFER_BIT)|(null===(r=this.gl)||void 0===r?void 0:r.DEPTH_BUFFER_BIT)),this}getContext(){return this.gl}}class A{constructor(t,e=p({red:201,green:226,blue:255}),r=p({red:50,green:50,blue:50}),i=p({red:255,green:255,blue:255}),n=1,o=1e3){this.lightPosition=t,this.lightColor=e,this.ambientLightColor=r,this.specularColor=i,this.specularFactor=n,this.shininess=o}setUniforms(t,e){t.uniform3fv(e.lightPositionLoc,[this.lightPosition.x,this.lightPosition.y,this.lightPosition.z]),t.uniform4fv(e.lightColorLoc,this.lightColor),t.uniform4fv(e.ambientLightColorLoc,this.ambientLightColor),t.uniform4fv(e.specularColorLoc,this.specularColor),t.uniform1f(e.specularFactorLoc,this.specularFactor),t.uniform1f(e.shininessLoc,this.shininess)}}class L{constructor(t){this.mesh=t,this.transform=new T}setScale(t,e,r){return this.transform.scale.set(t,e,r),this}setPosition(t,e,r){return this.transform.position.set(t,e,r),this}setRotation(t,e,r){return this.transform.rotation.set(t,e,r),this}addScale(t,e,r){return this.transform.scale.x+=t,this.transform.scale.y+=e,this.transform.scale.y+=e,this}addPosition(t,e,r){return this.transform.position.x+=t,this.transform.position.y+=e,this.transform.position.z+=r,this}addRotation(t,e,r){return this.transform.rotation.x+=t,this.transform.rotation.y+=e,this.transform.rotation.z+=r,this}preRender(){return this.transform.updateMatrix(),this}}class w{constructor(t,e,r,i){switch(this.buffer=t.createBuffer(),i){case u.BUFFER_TYPE_ARRAY:t.bindBuffer(t.ARRAY_BUFFER,this.buffer),t.bufferData(t.ARRAY_BUFFER,new Float32Array(e),t.STATIC_DRAW);break;case u.BUFFER_TYPE_ELEMENT_ARRAY:t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.buffer),t.bufferData(t.ELEMENT_ARRAY_BUFFER,new Uint16Array(e),t.STATIC_DRAW);break;default:t.bindBuffer(t.ARRAY_BUFFER,this.buffer),t.bufferData(t.ARRAY_BUFFER,new Float32Array(e),t.STATIC_DRAW)}this.gl=t,this.size=e.length/r}destroy(){this.gl.deleteBuffer(this.buffer)}bindToAttribute(t,e,r,i=this.size,n=u.BUFFER_TYPE_VERTICES){const o=this.gl;switch(n){case u.BUFFER_TYPE_ARRAY:o.enableVertexAttribArray(t),o.bindBuffer(o.ARRAY_BUFFER,this.buffer),o.vertexAttribPointer(t,i,o.FLOAT,!1,e,r),o.bindBuffer(o.ARRAY_BUFFER,null);break;case u.BUFFER_TYPE_ELEMENT_ARRAY:o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,this.buffer),o.bufferData(o.ELEMENT_ARRAY_BUFFER,new Uint16Array(t),o.STATIC_DRAW),o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,null);break;default:o.enableVertexAttribArray(t),o.bindBuffer(o.ARRAY_BUFFER,this.buffer),o.vertexAttribPointer(t,i,o.FLOAT,!1,e,r),o.bindBuffer(o.ARRAY_BUFFER,null)}}}class F{constructor(t,e,r){this.gl=null,this.vertexShader=null,this.fragmentShader=null;const i=this.createShader(t,t.VERTEX_SHADER,e),n=this.createShader(t,t.FRAGMENT_SHADER,r),o=this.createShaderProgram(t,n,i);this.program=o,this.gl=t}createShader(t,e,r){const i=t.createShader(e);return t.shaderSource(i,r),t.compileShader(i),t.getShaderParameter(i,t.COMPILE_STATUS)?i:(console.error("An error occurred compiling the shaders: "+t.getShaderInfoLog(i)),t.deleteShader(i),null)}createShaderProgram(t,e,r){const i=t.createProgram();if(t.attachShader(i,e),t.attachShader(i,r),t.linkProgram(i),!t.getProgramParameter(i,t.LINK_STATUS))throw console.error("Error creating shader program.",t.getProgramInfoLog(i)),t.deleteProgram(i),new Error("Failed to link shaderProgram");return this.vertexShader=e,this.fragmentShader=r,t.detachShader(i,e),t.detachShader(i,r),t.deleteShader(r),t.deleteShader(e),i}activateShader(){return this.gl.useProgram(this.program),this}deactivateShader(){return this.gl.useProgram(null),this}dispose(){this.gl.getParameter(this.gl.CURRENT_PROGRAM)===this.program&&this.deactivateShader(),this.gl.deleteProgram(this.program)}renderModel(t){const e=this.gl;return t.mesh.noCulling&&e.disable(e.CULL_FACE),t.mesh.doBlending&&e.enable(e.BLEND),e.drawArrays(t.mesh.drawMode,0,t.mesh.vertexCount),t.mesh.noCulling&&e.enable(e.CULL_FACE),t.mesh.doBlending&&e.disable(e.BLEND),this}}class P{constructor(t,e,r){this.lightViewMatrix=null;const i=new F(t,"#version 300 es\n\t\t\tin vec3 a_position;\n\t\t\tin vec3 a_norm;\n\t\t\tin vec2 a_texCoord;\n\n\t\t\tuniform vec3 u_lightPosition;\n\t\t\tuniform vec3 u_cameraPosition;\n\n\t\t\tuniform mat4 u_mVMatrix;\n\t\t\tuniform mat4 u_cameraViewMatrix;\n\t\t\tuniform mat4 u_pMatrix;\n\t\t\tuniform mat4 u_textureMatrix;\n\n\t\t\tmat4 m_worldMatrix;\n\t\t\tmat4 m_viewProjectionMatrix;\n\t\t\tmat4 m_worldViewProjectionMatrix;\n\t\t\t\n\t\t\tout vec3 v_normal;\n\t\t\tout vec3 v_surfaceToLight;\n\t\t\tout vec3 v_surfaceToCamera;\n\n\t\t\tout vec2 v_texCoord;\n\n\t\t\tvoid main(void){\n\n\t\t\t\tm_worldMatrix = u_mVMatrix;\n\t\t\t\tm_viewProjectionMatrix = u_pMatrix * u_cameraViewMatrix;\n\t\t\t\tm_worldViewProjectionMatrix = m_viewProjectionMatrix * m_worldMatrix;\n\n\t\t\t\tgl_Position = m_worldViewProjectionMatrix * vec4(a_position, 1.0);\n\t\t\t\t\n\t\t\t\tv_normal = (u_cameraViewMatrix * vec4(a_norm, 0.0)).xyz;\n\n\t\t\t\tvec3 v_surfaceWorldPosition = (m_worldMatrix * vec4(a_position, 1.0)).xyz;\n\t\t\t\tv_surfaceToLight = u_lightPosition - v_surfaceWorldPosition;\n\t\t\t\tv_surfaceToCamera = u_cameraPosition - v_surfaceWorldPosition;\n\n\t\t\t\tv_texCoord = a_texCoord;\n\n\t\t\t}","#version 300 es\n\t\t\tprecision highp float;\n\n\t\t\tin vec2 v_texCoord;\n\t\t\tin vec3 v_normal;\n\t\t\tin vec3 v_surfaceToLight;\n\t\t\tin vec3 v_surfaceToCamera;\n\n\t\t\tuniform sampler2D sampler;\n\t\t\tuniform vec4 u_lightColor;\n\t\t\tuniform vec4 u_ambientLightColor;\n\t\t\tuniform vec4 u_specularColor;\n\t\t\tuniform float u_shininess;\n\t\t\tuniform float u_specularFactor;\n\t\t\tuniform vec3 u_reverseLightDirection;\n\n\t\t\tvec4 lit(float l ,float h, float m) {\n\t\t\t\treturn vec4(\n\t\t\t\t\t1.0,\n\t\t\t\t\tabs(l),\n\t\t\t\t\t(l > 0.0) ? pow(max(0.0, h), m) : 0.0,\n\t\t\t\t\t1.0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tout vec4 finalColor;\n\n\t\t\tvoid main(void) {\n\n\t\t\t\tvec4 texel = texture(sampler, v_texCoord);\n\t\t\t\tvec3 normal = normalize(v_normal);\n\n\t\t\t\tfloat lightIntensity = dot(normal, u_reverseLightDirection);\n\t\t\t\tvec4 diffuse = u_ambientLightColor + u_lightColor * lightIntensity;\n\n\t\t\t\tvec3 surfaceToLightDirection = normalize(v_surfaceToLight);\n\t\t\t\tvec3 surfaceToCameraDirection = normalize(v_surfaceToCamera);\n\t\t\t\tvec3 halfVector = normalize(surfaceToLightDirection + surfaceToCameraDirection);\n\n\t\t\t\tvec4 specularIntensity = lit(dot(normal, surfaceToLightDirection), dot(normal, halfVector), u_shininess);\n\t\t\t\tvec4 specular = u_specularColor * specularIntensity.z * u_specularFactor;\n\t\t\t\tvec4 light = diffuse + specular;\n\n\t\t\t\tvec4 outColor = vec4(texel.rgb * light.xyz, texel.a);\n\n\t\t\t\tfinalColor = outColor;\n\t\t\t}");i.activateShader(),this.positionLoc=t.getAttribLocation(i.program,u.ATTR_POSITION_NAME),this.texCoordLoc=t.getAttribLocation(i.program,u.ATTR_UV_NAME),this.normalLoc=t.getAttribLocation(i.program,u.ATTR_NORMAL_NAME),this.modelViewMatrixLoc=t.getUniformLocation(i.program,u.UNI_MODEL_MAT),this.perspectiveMatrixLoc=t.getUniformLocation(i.program,u.UNI_PERSPECTIV_MAT),this.cameraMatrixLoc=t.getUniformLocation(i.program,u.UNI_CAMERA_MAT),this.projectedTextureLoc=t.getUniformLocation(i.program,u.UNI_PROJECTED_TEXTURE),this.textureMatrixLoc=t.getUniformLocation(i.program,u.UNI_TEXTURE_MAT),this.reverseLightDirectionLoc=t.getUniformLocation(i.program,u.UNI_REVERSE_LIGHT_DIRECTION_MAT),this.diffuseLoc=t.getUniformLocation(i.program,u.UNI_DIFFUSE),this.ambientLightColorLoc=t.getUniformLocation(i.program,u.UNI_LIGHT_AMBIENT),this.lightPositionLoc=t.getUniformLocation(i.program,u.UNI_LIGHT_POSITION),this.cameraPositionLoc=t.getUniformLocation(i.program,u.UNI_CAMERA_POSITION),this.shininessLoc=t.getUniformLocation(i.program,u.UNI_CAMERA_SHININESS),this.lightColorLoc=t.getUniformLocation(i.program,u.UNI_LIGHT_COLOR),this.specularColorLoc=t.getUniformLocation(i.program,u.UNI_SPECULAR_COLOR),this.specularFactorLoc=t.getUniformLocation(i.program,u.UNI_SPECULAR_FACTOR),i.deactivateShader(),this.perspectiveProjectionMatrix=e.perspectiveProjection,this.orthoProjectionMatrix=e.orthoProjection,this.viewModelMatrix=e.viewMatrix,this.lightViewCamera=r,this.sceneViewCamera=e,this.shaderProgram=i}setUniforms(t,e){this.shaderProgram.activateShader();const r=this.getLightWorldMatrix(this.lightViewCamera,e);return t.uniformMatrix4fv(this.perspectiveMatrixLoc,!1,this.perspectiveProjectionMatrix),t.uniformMatrix4fv(this.cameraMatrixLoc,!1,this.viewModelMatrix),t.uniformMatrix4fv(this.textureMatrixLoc,!1,this.getTextureMatrix(r)),t.uniformMatrix4fv(this.modelViewMatrixLoc,!1,e.transform.getModelMatrix()),t.uniform3fv(this.cameraPositionLoc,this.sceneViewCamera.transform.position.getFloatArray()),t.uniform3fv(this.reverseLightDirectionLoc,r.slice(8,11)),this}getTextureMatrix(t){let e=g.identity();g.translate(e,.5,.5,.5),g.scale(e,.5,.5,.5),g.mult(e,e,this.orthoProjectionMatrix);let r=[];return g.invert(r,t),g.mult(e,e,r),e}getLightWorldMatrix(t,e){return g.lookAt([t.transform.position.x,t.transform.position.y,t.transform.position.z],[e.transform.position.x,e.transform.position.y,e.transform.position.z],[0,1,0])}}class I{constructor(){}static createGeometry(t,e,r,i){return new L(I.createMesh(t,e,r,i))}static createMesh(t,e,r,i){var n,o,s;const a=r.vertexCount(),l={positions:new w(t,r.positions(),a,u.BUFFER_TYPE_ARRAY),normals:new w(t,r.normals(),a,u.BUFFER_TYPE_ARRAY),uvs:new w(t,r.uvs(),a,u.BUFFER_TYPE_ARRAY),texture:i,drawMode:t.TRIANGLES,vertexCount:a};return null===(n=l.positions)||void 0===n||n.bindToAttribute(e.positionLoc,u.DEFAULT_STRIDE,u.DEFAULT_OFFSET),null===(o=l.normals)||void 0===o||o.bindToAttribute(e.normalLoc,u.DEFAULT_STRIDE,u.DEFAULT_OFFSET),null===(s=l.uvs)||void 0===s||s.bindToAttribute(e.texCoordLoc,u.DEFAULT_STRIDE,u.DEFAULT_OFFSET),l}}class U{constructor(t){this.surfaces=[],this.surfaces=t}static parseOBJ(t){const e=m.V,r=m.VN,i=m.VT,n=m.F,o=t.split("\n"),s=[],l=[],h=[],c=[];for(let t of o){const o=t.trim().split(a),u=o[0];if(e===u)s.push(d(parseFloat(o[1]),parseFloat(o[2]),parseFloat(o[3])));else if(r===u)h.push(d(parseFloat(o[1]),parseFloat(o[2]),parseFloat(o[3])));else if(i===u)l.push({x:parseFloat(o[1]),y:1-parseFloat(o[2])});else if(n===u){let t=!1,e=!1,r=4;const i=[];for(let n=1;n<r;n++){if(o.length>r&&!e)r+=1;else if(4!==n||t){if(5===n&&t)n=1,t=!1,e=!0;else if(2===n&&e)break}else n=3,r+=1,t=!0;const a=o[n].split("/"),c=s[parseInt(a[0])-1],u=l[parseInt(a[1])-1],m=h[parseInt(a[2])-1];i.push(f(c,m,u))}if(i.length>3){const t=i.slice(0,3),e=i.slice(3);c.push(_(t)),c.push(_(e))}else c.push(_(i))}}return new U(c)}static loadOBJ(t){return e(this,void 0,void 0,(function*(){const e=yield fetch(t),r=yield e.text();return U.parseOBJ(r)}))}vertexCount(){return 3*this.surfaces.length}positions(){const t=[];return this.surfaces.forEach((function(e){e.vertices.forEach((function(e){const r=e.position;t.push(r.x,r.y,r.z)}))})),t}normals(){const t=[];return this.surfaces.forEach((function(e){e.vertices.forEach((function(e){const r=e.normal;t.push(r.x,r.y,r.z)}))})),t}uvs(){const t=[];return this.surfaces.forEach((function(e){e.vertices.forEach((function(e){const r=e.uv;t.push(r.x,r.y)}))})),t}}class C{constructor(t,e,r){const i=new F(t,"#version 300 es\n            layout(location=5) in vec3 a_position;\n\n\t\t\tuniform mat4 u_mVMatrix;\n\t\t\tuniform mat4 u_cameraViewMatrix;\n\t\t\tuniform mat4 u_pMatrix;\n\n\t\t\tvec3 unprojectPoint(float x, float y, float z, mat4 view, mat4 projection) {\n                mat4 viewInv = inverse(view);\n                mat4 projInv = inverse(projection);\n                vec4 unprojectedPoint =  viewInv * projInv * vec4(x, y, z, 1.0);\n                return unprojectedPoint.xyz / unprojectedPoint.w;\n            }\n\n\t\t\tout vec3 nearPoint;\n\t\t\tout vec3 farPoint;\n\t\t\tout mat4 fragView;\n            out mat4 fragProj;\n\n\t\t\tout vec3 vertexPosition;\n\n\t\t\tvoid main(void){\n\t\t\t\tvec3 p = a_position;\n\n\t\t\t\tfragView = u_cameraViewMatrix;\n                fragProj = u_pMatrix;\n\t\t\t\tnearPoint = unprojectPoint(p.x, p.y, 0.0, u_cameraViewMatrix, u_pMatrix).xyz;\n\t\t\t\tfarPoint = unprojectPoint(p.x, p.y, 1.0, u_cameraViewMatrix, u_pMatrix).xyz;\n\n\t\t\t\tvertexPosition = p.xyz;\n\t\t\t\tgl_Position = vec4(p, 1.0);\n\n\t\t\t}","#version 300 es\n\t\t\tprecision highp float;\n\n\t\t\tin vec3 vertexPosition;\n\t\t\tin vec3 nearPoint;\n            in vec3 farPoint;\n            in mat4 fragView;\n            in mat4 fragProj;\n\n\t\t\t// computes Z-buffer depth value, and converts the range.\n\t\t\tfloat computeDepth(vec3 pos) {\n\t\t\t\t// get the clip-space coordinates\n\t\t\t\tvec4 clip_space_pos = fragProj * fragView * vec4(pos.xyz, 1.0);\n\n\t\t\t\t// get the depth value in normalized device coordinates\n\t\t\t\tfloat clip_space_depth = clip_space_pos.z / clip_space_pos.w;\n\n\t\t\t\t// and compute the range based on gl_DepthRange settings (not necessary with default settings, but left for completeness)\n\t\t\t\tfloat far = gl_DepthRange.far;\n\t\t\t\tfloat near = gl_DepthRange.near;\n\n\t\t\t\tfloat depth = (((far-near) * clip_space_depth) + near + far) / 2.0;\n\n\t\t\t\t// and return the result\n\t\t\t\treturn depth;\n\t\t\t}\n\n\t\t\t\n\t\t\tvec4 grid(vec3 fragPos3D, float scale) {\n                vec2 coord = fragPos3D.xz * scale;\n                vec2 derivative = fwidth(coord);\n                vec2 grid = abs(fract(coord - 0.5) - 0.5) / derivative;\n                float line = min(grid.x, grid.y);\n                float minimumz = min(derivative.y, 1.0);\n                float minimumx = min(derivative.x, 1.0);\n\t\t\t\tvec3 gridColor = vec3(1.0 - min(line, 1.0));\n                vec4 color = vec4(gridColor, 1.0);\n                return color;\n            }\n\n            out vec4 finalColor;\n\n\t\t\tvoid main(void){\n\n                float t = -nearPoint.y / (farPoint.y - nearPoint.y);\n                vec3 fragPos3D = nearPoint + t * (farPoint - nearPoint);\n\t\n\t\t\t\tfloat isIntersect = (t > 0.0) ? 1.0 : 0.0;\n\t\t\t\tfloat linearFieldSection = 0.09 * length(fragPos3D.xz);\n\t\t\t\tfloat fading = min(1.0, 1.5 - linearFieldSection);\n\n\t\t\t\tvec4 gridPattern = grid(fragPos3D, 0.5);\n\t\t\t\t\n\t\t\t\tvec4 outColor = gridPattern;\n\n\t\t\t\tfinalColor = outColor * isIntersect;\n\t\t\t\tfinalColor *= fading;\n\n\t\t\t\tgl_FragDepth = computeDepth(fragPos3D);\n            }");i.activateShader(),this.positionLoc=t.getAttribLocation(i.program,u.ATTR_POSITION_NAME),this.modelViewMatrixLoc=t.getUniformLocation(i.program,u.UNI_MODEL_MAT),this.perspectiveMatrixLoc=t.getUniformLocation(i.program,u.UNI_PERSPECTIV_MAT),this.cameraMatrixLoc=t.getUniformLocation(i.program,u.UNI_CAMERA_MAT),this.uColorLoc=t.getUniformLocation(i.program,u.UNI_COLOR),i.deactivateShader(),this.perspectiveProjectionMatrix=e.perspectiveProjection,this.orthoProjectionMatrix=e.orthoProjection,this.viewModelMatrix=e.viewMatrix,this.lightViewModelMatrix=r,this.shaderProgram=i}setUniforms(t,e){return this.shaderProgram.activateShader(),t.uniformMatrix4fv(this.perspectiveMatrixLoc,!1,this.perspectiveProjectionMatrix),t.uniformMatrix4fv(this.cameraMatrixLoc,!1,this.viewModelMatrix),t.uniformMatrix4fv(this.modelViewMatrixLoc,!1,e.transform.getModelMatrix()),this}}class y{constructor(){}static createGeometry(t,e){return new L(y.createMesh(t,e))}static createMesh(t,e){var r;const i=[1,-1,0,1,1,0,-1,-1,0,-1,1,0,-1,-1,0,1,1,0],n=i.length/3,o=3*Float32Array.BYTES_PER_ELEMENT,s={positions:new w(t,i,n,u.BUFFER_TYPE_ARRAY),drawMode:t.TRIANGLES,vertexCount:n};return null===(r=s.positions)||void 0===r||r.bindToAttribute(e.positionLoc,o,u.DEFAULT_OFFSET,u.GRID_VECTOR_SIZE),s}}class S{constructor(t,e){const r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,e),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR_MIPMAP_LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.generateMipmap(t.TEXTURE_2D),this.gl=t}static loadTexture(t,r){return e(this,void 0,void 0,(function*(){const e=new Image;return e.src=r,yield e.decode(),new S(t,e)}))}}class O{constructor(){(()=>{e(this,void 0,void 0,(function*(){const t=new r,e=new M(l.WEBGL_CANVAS_ID),[i,n]=[.95,.9];e.fitScreen(i,n).setClearColor(13,17,23,1).clear();const a=e.getContext(),h=new v(0,2.5,3),c=new A(h),u=new R(a);u.transform.position.set(h.x,h.y,h.z);const m=yield U.loadOBJ(o),_=yield S.loadTexture(a,s),f=new R(a);f.transform.position.set(0,.5,1.5),new x(a,f);const d=new C(a,f,u),E=y.createGeometry(a,d),p=new P(a,f,u),g=I.createGeometry(a,p,m,_);g.setScale(.0035,.0035,.0035).setRotation(0,30,0),t.disable();const T=()=>{f.updateViewMatrix(),d.setUniforms(a,E.preRender()).shaderProgram.renderModel(E.preRender()),p.setUniforms(a,g.preRender()).shaderProgram.renderModel(g.preRender()),c.setUniforms(a,p),requestAnimationFrame(T)};T()}))})()}}new class{constructor(){new O}}})();
//# sourceMappingURL=bundle.js.map
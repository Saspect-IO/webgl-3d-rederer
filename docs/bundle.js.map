{"version":3,"sources":["webpack://qrius-engine-webgl/webpack/bootstrap","webpack://qrius-engine-webgl/./node_modules/tslib/tslib.es6.js","webpack://qrius-engine-webgl/webpack/runtime/global","webpack://qrius-engine-webgl/webpack/runtime/publicPath","webpack://qrius-engine-webgl/./src/app/components/core/appLoader.ts","webpack://qrius-engine-webgl/./src/assets/resources/formula_1/source/formula_1.obj","webpack://qrius-engine-webgl/./src/assets/resources/formula_1/textures/formula_1.png","webpack://qrius-engine-webgl/./src/modules/global_constants.ts","webpack://qrius-engine-webgl/./src/modules/utils.ts","webpack://qrius-engine-webgl/./src/core/math.ts","webpack://qrius-engine-webgl/./src/core/transformation.ts","webpack://qrius-engine-webgl/./src/core/camera.ts","webpack://qrius-engine-webgl/./src/core/glContext.ts","webpack://qrius-engine-webgl/./src/core/light.ts","webpack://qrius-engine-webgl/./src/core/geometry.ts","webpack://qrius-engine-webgl/./src/core/vbuffer.ts","webpack://qrius-engine-webgl/./src/core/shaderProgram.ts","webpack://qrius-engine-webgl/./src/core/model.ts","webpack://qrius-engine-webgl/./src/core/objLoader.ts","webpack://qrius-engine-webgl/./src/core/primitives/grid/infinite.ts","webpack://qrius-engine-webgl/./src/core/Textures/texture.ts","webpack://qrius-engine-webgl/./src/core/scene.ts","webpack://qrius-engine-webgl/./src/main.ts","webpack://qrius-engine-webgl/./src/app/app.ts"],"names":["__webpack_require__","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","body","f","y","t","g","_","label","sent","trys","ops","verb","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","globalThis","Function","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","Error","replace","p","loader","getElementById","shadowRoot","attachShadow","mode","innerHTML","appLoaderElem","children","setDisplayState","state","style","display","visibility","transition","opacity","setTimeout","ProgramEntrySettings","CameraSettings","CameraControlsSettings","GLSetttings","ObjTypes","PATH_ASSETS_OBJ","PATH_ASSETS_TEXTURE","SPACE","SurfaceStruct","vertices","VertexStruct","position","normal","uv","Vec3Struct","x","z","degToRad","d","Math","PI","normalizeColor","rgb","red","green","blue","Float32Array","magnitude","undefined","sqrt","normalize","mag","set","multiScalar","getArray","getFloatArray","clone","Vector3","matrix","Matrix4","identity","vtranslate","translate","rotateY","rad","rotateX","rotateZ","vscale","vec3","scale","invert","resetRotation","i","resetMat","a","perspective","out","fovy","aspect","near","far","tan","nf","ortho","left","right","bottom","top","lr","bt","lookAt","cameraPosition","target","up","dst","zAxis","subtractVectors","xAxis","cross","yAxis","b","transpose","a01","a02","a03","a12","a13","a23","normalMat3","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","multiplyVector","mat4","w","c1r1","c2r1","c3r1","c4r1","c1r2","c2r2","c3r2","c4r2","c1r3","c2r3","c3r3","c4r3","transformVec4","m","mult","b0","b1","b2","b3","s","sin","c","cos","rotate","axis","b12","b20","b21","b22","len","abs","mat","rotation","matView","matNormal","forward","updateMatrix","updateDirection","getModelMatrix","getNormalMatrix","reset","gl","fov","FIELD_OF_VIEW","NEAR_PLANE","FAR_PLANE","perspectiveProjection","orthoProjection","ratio","canvas","width","height","transform","viewMatrix","Camera","MODE_ORBIT","panX","updateViewMatrix","panY","panZ","MODE_FREE","camera","box","getBoundingClientRect","rotateRate","ROTATION_RATE","panRate","PAN_RATE","zoomRate","ZOOM_RATE","offsetX","offsetY","initX","initY","prevX","prevY","onUpHandler","onMouseUp","onMoveHandler","onMouseMove","addEventListener","MOUSE_DOWN","onMouseDown","MOUSE_WHEEL","onMouseWheel","getMouseVec2","pageX","pageY","MOUSE_UP","MOUSE_MOVE","removeEventListener","delta","max","min","wheelDelta","detail","dx","dy","shiftKey","WEBGL_CANVAS_ID","rgb_32_bit","alpha","getContext","WEBGL_CONTEXT","alert","WEBGL_CONTEXT_ERROR_MESSAGE","cullFace","BACK","frontFace","CCW","enable","DEPTH_TEST","CULL_FACE","depthFunc","LEQUAL","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","setSize","h","viewport","depthRender","depthTexture","bindFramebuffer","FRAMEBUFFER","depthFramebuffer","depthTextureSize","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","fitScreen","wp","hp","innerWidth","innerHeight","setClearColor","clearColor","clearFramebuffer","lightPosition","lightColor","ambientLightColor","specularColor","specularFactor","shininess","setUniforms","program","uniform3fv","lightPositionLoc","uniform4fv","lightColorLoc","ambientLightColorLoc","specularColorLoc","uniform1f","specularFactorLoc","shininessLoc","mesh","setScale","setPosition","setRotation","addScale","addPosition","addRotation","preRender","data","count","type","buffer","createBuffer","BUFFER_TYPE_ARRAY","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","BUFFER_TYPE_ELEMENT_ARRAY","ELEMENT_ARRAY_BUFFER","Uint16Array","size","destroy","deleteBuffer","bindToAttribute","stride","offset","BUFFER_TYPE_VERTICES","enableVertexAttribArray","vertexAttribPointer","FLOAT","vsSource","fsSource","vertexShader","fragmentShader","createShader","VERTEX_SHADER","FRAGMENT_SHADER","shaderProgram","createShaderProgram","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","error","getShaderInfoLog","deleteShader","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","detachShader","activateShader","useProgram","deactivateShader","dispose","getParameter","CURRENT_PROGRAM","renderModel","model","noCulling","disable","doBlending","BLEND","drawArrays","drawMode","vertexCount","sceneViewCamera","lightViewCamera","lightViewMatrix","positionLoc","getAttribLocation","ATTR_POSITION_NAME","texCoordLoc","ATTR_UV_NAME","normalLoc","ATTR_NORMAL_NAME","modelViewMatrixLoc","getUniformLocation","UNI_MODEL_MAT","perspectiveMatrixLoc","UNI_PERSPECTIV_MAT","cameraMatrixLoc","UNI_CAMERA_MAT","projectedTextureLoc","UNI_PROJECTED_TEXTURE","textureMatrixLoc","UNI_TEXTURE_MAT","reverseLightDirectionLoc","UNI_REVERSE_LIGHT_DIRECTION_MAT","diffuseLoc","UNI_DIFFUSE","UNI_LIGHT_AMBIENT","UNI_LIGHT_POSITION","cameraPositionLoc","UNI_CAMERA_POSITION","UNI_CAMERA_SHININESS","UNI_LIGHT_COLOR","UNI_SPECULAR_COLOR","UNI_SPECULAR_FACTOR","perspectiveProjectionMatrix","orthoProjectionMatrix","viewModelMatrix","getLightWorldMatrix","uniformMatrix4fv","getTextureMatrix","slice","lightWorldMatrix","textureMatrix","inverted","createGeometry","texture","Model","createMesh","positions","normals","uvs","TRIANGLES","DEFAULT_STRIDE","DEFAULT_OFFSET","surfaces","parseOBJ","POSITION","V","NORMAL","VN","UV","VT","SURFACE","F","split","lineItems","trim","parseFloat","isQuad","shouldExit","part","parseInt","triagle1","triangle2","ObjLoader","loadOBJ","url","fetch","text","forEach","surface","vertex","uColorLoc","UNI_COLOR","lightViewModelMatrix","InfiniteGrid","verts","strideLen","BYTES_PER_ELEMENT","GRID_VECTOR_SIZE","image","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","TEXTURE_MAG_FILTER","LINEAR","generateMipmap","loadTexture","Image","decode","Texture","appLoader","glContext","wh","lightViewPosition","lightView","lightCameraView","CameraController","infiniteGridShader","InfiniteGridShader","infiniteGrid","modelShader","ModelShader","loop","requestAnimationFrame"],"mappings":"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","file":"bundle.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","export default class AppLoader{\r\n    constructor(){\r\n        const loader = document.getElementById('shadow-app-loader')\r\n        const shadowRoot = loader?.attachShadow({mode:'open'}) as ShadowRoot \r\n        shadowRoot.innerHTML = `\r\n        <style>\r\n            .lds-ellipsis {\r\n              display: inline-block;\r\n              position: relative;\r\n              width: 80px;\r\n              height: 80px;\r\n              opacity: 0.5;\r\n            }\r\n            .lds-ellipsis div {\r\n              position: absolute;\r\n              top: 33px;\r\n              width: 20px;\r\n              height: 20px;\r\n              border-radius: 50%;\r\n              background: #fff;\r\n              animation-timing-function: cubic-bezier(0, 1, 1, 0);\r\n            }\r\n            .lds-ellipsis div:nth-child(1) {\r\n              left: 16px;\r\n              animation: lds-ellipsis1 0.6s infinite;\r\n            }\r\n            .lds-ellipsis div:nth-child(2) {\r\n              left: 16px;\r\n              animation: lds-ellipsis2 0.6s infinite;\r\n            }\r\n            .lds-ellipsis div:nth-child(3) {\r\n              left: 40px;\r\n              animation: lds-ellipsis2 0.6s infinite;\r\n            }\r\n            .lds-ellipsis div:nth-child(4) {\r\n              left: 64px;\r\n              animation: lds-ellipsis3 0.6s infinite;\r\n            }\r\n            @keyframes lds-ellipsis1 {\r\n              0% {\r\n                transform: scale(0);\r\n              }\r\n              100% {\r\n                transform: scale(1);\r\n              }\r\n            }\r\n            @keyframes lds-ellipsis3 {\r\n              0% {\r\n                transform: scale(1);\r\n              }\r\n              100% {\r\n                transform: scale(0);\r\n              }\r\n            }\r\n            @keyframes lds-ellipsis2 {\r\n              0% {\r\n                transform: translate(0, 0);\r\n              }\r\n              100% {\r\n                transform: translate(24px, 0);\r\n              }\r\n            }\r\n\r\n        </style>\r\n        <div id=\"app-loader\"\r\n            style=\"display: flex;\r\n            visibility: visible;\r\n            opacity: 1;\r\n            justify-content: center;\r\n            align-items: center;\r\n            position: fixed; \r\n            left: 0; \r\n            top: 0; right: \r\n            0; bottom: 0; \r\n            background: rgb(0, 0, 0, 0.4);\">\r\n            <div class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n        </div>`\r\n        this.appLoaderElem = shadowRoot.children[1] as HTMLElement\r\n    }\r\n\r\n    appLoaderElem:HTMLElement\r\n\r\n    setDisplayState (state:boolean){\r\n      state ? \r\n      (this.appLoaderElem  as HTMLElement ).style.display = 'flex' :\r\n      (this.appLoaderElem  as HTMLElement).style.visibility = 'visible',\r\n      (this.appLoaderElem  as HTMLElement).style.transition = 'visibility 0s, opacity 0.5s linear' ,\r\n      (this.appLoaderElem  as HTMLElement).style.opacity = '0',\r\n      (\r\n        setTimeout(() => {\r\n          (this.appLoaderElem  as HTMLElement).style.display = 'none'\r\n        }, 1000)\r\n      )\r\n      \r\n    }\r\n}","export default __webpack_public_path__ + \"assets/resources/formula_1/source/formula_1.obj\";","export default __webpack_public_path__ + \"assets/resources/formula_1/textures/formula_1.png\";","import obj from 'assets/resources/formula_1/source/formula_1.obj';\r\nimport texture from 'assets/resources/formula_1/textures/formula_1.png';\r\n\r\nexport const TEXTURE = 'TEXTURE'\r\nexport const PATH_ASSETS_OBJ = obj\r\nexport const PATH_ASSETS_TEXTURE = texture\r\nexport const NEW_LINE = '\\n'\r\nexport const BACKSLASH = '/'\r\nexport const SPACE = /\\s+/\r\n\r\nexport enum ProgramEntrySettings {\r\n    WEBGL_CANVAS_ID = 'qrius-glCanvas',\r\n    WEBGL_CONTEXT = 'webgl2',\r\n    WEBGL_CONTEXT_EXPERIMENTAL = 'experimental-webgl',\r\n    WEBGL_CONTEXT_WEBKIT = 'webkit-3d',\r\n    WEBGL_CONTEXT_MOZ = 'moz-webgl',\r\n    WEBGL_DEPTH_TEXTURE = 'WEBGL_depth_texture',\r\n    WEBGL_CONTEXT_ERROR_MESSAGE = 'Could not initialise WebGL',\r\n    WEBGL_DEPTH_TEXTUR_ERROR_MESSAGE = 'need WEBGL_depth_texture',\r\n    PATH_ASSETS_OBJ = '/webgl-3d-renderer/assets/resources/formula_1/source/formula_1.obj',\r\n    PATH_ASSETS_TEXTURE = '/webgl-3d-renderer/assets/resources/formula_1/textures/formula_1.png',\r\n    DEPTH_TEXTURE_SIZE = 512,\r\n}\r\n\r\nexport enum CameraSettings {\r\n    NEAR_PLANE = 0.1,\r\n    FAR_PLANE = 100.0,\r\n    FIELD_OF_VIEW = 45,\r\n    MODE_FREE = 0,\r\n    MODE_ORBIT = 1,\r\n}\r\n\r\nexport enum CameraControlsSettings {\r\n    KEY_DOWN_EVENT = 'keydown',\r\n    KEY_UP_EVENT = 'keyup',\r\n    KEY_DOWN = 40,\r\n    KEY_UP = 38,\r\n    KEY_LEFT = 37,\r\n    KEY_RIGHT = 39,\r\n    MOUSE_UP = 'mouseup',\r\n    MOUSE_DOWN = 'mousedown',\r\n    MOUSE_WHEEL = 'mousewheel',\r\n    MOUSE_MOVE = 'mousemove',\r\n    ROTATION_RATE = -300,\r\n    PAN_RATE = 5,\r\n    ZOOM_RATE = 200,\r\n}\r\n\r\nexport enum GLSetttings {\r\n    DEFAULT_OFFSET = 0,\r\n    DEFAULT_STRIDE = 0,\r\n    GRID_VECTOR_SIZE = 3,\r\n    GRID_VERTEX_LEN = 4,\r\n    ATTR_POSITION_NAME = \"a_position\",\r\n    ATTR_NORMAL_NAME = \"a_norm\",\r\n    ATTR_UV_NAME = \"a_texCoord\",\r\n    UNI_COLOR = 'u_color',\r\n    UNI_MODEL_MAT ='u_mVMatrix',\r\n    UNI_PERSPECTIV_MAT = 'u_pMatrix',\r\n    UNI_ORTHO_MAT = 'u_oMatrix',\r\n    UNI_CAMERA_MAT = 'u_cameraViewMatrix',\r\n    UNI_LIGHT_VIEW_CAMERA_MAT = 'u_lightViewCameraMatrix',\r\n    UNI_REVERSE_LIGHT_DIRECTION_MAT = 'u_reverseLightDirection',\r\n    UNI_TEXTURE_MAT = 'u_textureMatrix',\r\n    UNI_DIFFUSE = 'u_diffuse',\r\n    UNI_PROJECTED_TEXTURE = 'u_projectedTexture',\r\n    UNI_LIGHT_AMBIENT = 'u_ambientLightColor',\r\n    UNI_LIGHT_DIRECTION = 'u_lightDirection',\r\n    UNI_LIGHT_POSITION = 'u_lightPosition',\r\n    UNI_CAMERA_POSITION = 'u_cameraPosition',\r\n    UNI_CAMERA_SHININESS = 'u_shininess',\r\n    UNI_LIGHT_COLOR = 'u_lightColor',\r\n    UNI_SPECULAR_COLOR = 'u_specularColor',\r\n    UNI_SPECULAR_FACTOR = 'u_specularFactor',\r\n    BUFFER_TYPE_ELEMENT_ARRAY = 'array_elements',\r\n    BUFFER_TYPE_ARRAY = 'arrays',\r\n}\r\n\r\nexport enum ObjTypes {\r\n    V = 'v',\r\n    VN = 'vn',\r\n    VT = 'vt',\r\n    F = 'f',\r\n}\r\n","import { Normal, UV, Vector, Vertex } from \"@/entities\";\r\n\r\nexport const SurfaceStruct = (vertices: Array < Vertex > ) => ({ vertices })\r\nexport const VertexStruct = (position: Vector, normal: Normal, uv: UV) => ({ position, normal, uv })\r\nexport const Vec3Struct = (x: number, y: number, z: number) => ({ x, y, z })\r\nexport const Vec2Struct = (x: number, y: number) => ({ x, y })\r\nexport const radToDeg = (r: number) => r * 180 / Math.PI\r\nexport const degToRad = (d: number) => d * Math.PI / 180\r\nexport const loadShaders = async (vsSource: string, fsSource: string) => {\r\n\r\n    const loadFile = async (src: string) => {\r\n        const response = await fetch(src)\r\n        const data = await response.text()\r\n        return data\r\n    }\r\n\r\n    const [vertexShaderFile, fragmentShaderFile] = await Promise.all([loadFile(vsSource), loadFile(fsSource)])\r\n\r\n    return {\r\n        vertexShaderFile,\r\n        fragmentShaderFile\r\n    };\r\n}\r\n\r\nexport const mapValues = (x: number, xMin: number, xMax: number, zMin: number, zMax: number) => ( ((x-xMin)/(xMax-xMin)) * ((zMax-zMin)+zMin) )\r\n\r\nexport const normalizeColor = (rgb:{red: number, green: number, blue: number})=>{\r\n    const alpha = 1\r\n    const rgb_32_bit = 255\r\n\r\n    const result=[(rgb.red/rgb_32_bit), (rgb.green/rgb_32_bit), (rgb.blue/rgb_32_bit), alpha]\r\n    return new Float32Array(result)\r\n\r\n}\r\n","//###########################################################################################\r\nimport { Vector } from \"@/entities\";\r\n\r\n\r\n//https://github.com/sketchpunk/FunWithWebGL2/tree/master/lesson_006\r\nclass Vector3 {\r\n    constructor(x: number, y: number, z: number) {\r\n        this.x = x || 0.0;\r\n        this.y = y || 0.0;\r\n        this.z = z || 0.0;\r\n    }\r\n\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n\r\n    magnitude(v: Vector = {\r\n        x: 0.0,\r\n        y: 0.0,\r\n        z: 0.0\r\n    }) {\r\n        //Only get the magnitude of this vector\r\n        if (v === undefined) return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n\r\n        //Get magnitude based on another vector\r\n        let x = v.x - this.x,\r\n            y = v.y - this.y,\r\n            z = v.y - this.z;\r\n\r\n        return Math.sqrt(x * x + y * y + z * z);\r\n    }\r\n\r\n    normalize() {\r\n        let mag = this.magnitude();\r\n        this.x /= mag;\r\n        this.y /= mag;\r\n        this.z /= mag;\r\n        return this;\r\n    }\r\n\r\n    set(x: number, y: number, z: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        return this;\r\n    }\r\n\r\n    multiScalar(v: number) {\r\n        this.x *= v;\r\n        this.y *= v;\r\n        this.z *= v;\r\n        return this;\r\n    }\r\n\r\n    getArray() {\r\n        return [this.x, this.y, this.z];\r\n    }\r\n\r\n    getFloatArray() {\r\n        return new Float32Array([this.x, this.y, this.z]);\r\n    }\r\n\r\n    clone() {\r\n        return new Vector3(this.x, this.y, this.z);\r\n    }\r\n}\r\n\r\n\r\n//###########################################################################################\r\nclass Matrix4 {\r\n    constructor() {\r\n        this.matrix = Matrix4.identity();\r\n    }\r\n\r\n    matrix: Float32Array;\r\n\r\n    //....................................................................\r\n    //Transformations Methods\r\n    vtranslate(v: Vector) {\r\n        Matrix4.translate(this.matrix, v.x, v.y, v.z);\r\n        return this;\r\n    }\r\n    translate(x: number, y: number, z: number) {\r\n        Matrix4.translate(this.matrix, x, y, z);\r\n        return this;\r\n    }\r\n\r\n    rotateY(rad: number) {\r\n        Matrix4.rotateY(this.matrix, rad);\r\n        return this;\r\n    }\r\n    rotateX(rad: number) {\r\n        Matrix4.rotateX(this.matrix, rad);\r\n        return this;\r\n    }\r\n    rotateZ(rad: number) {\r\n        Matrix4.rotateZ(this.matrix, rad);\r\n        return this;\r\n    }\r\n\r\n    vscale(vec3: Vector) {\r\n        Matrix4.scale(this.matrix, vec3.x, vec3.y, vec3.z);\r\n        return this;\r\n    }\r\n    scale(x: number, y: number, z: number) {\r\n        Matrix4.scale(this.matrix, x, y, z);\r\n        return this;\r\n    }\r\n\r\n    invert() {\r\n        Matrix4.invert(this.matrix);\r\n        return this;\r\n    }\r\n\r\n    //....................................................................\r\n    //Methods\r\n    //Bring is back to identity without changing the transform values.\r\n    resetRotation() {\r\n        for (let i = 0; i < this.matrix.length; i++) {\r\n            if (i >= 12 && i <= 14) continue;\r\n            this.matrix[i] = (i % 5 == 0) ? 1 : 0; //only positions 0,5,10,15 need to be 1 else 0.\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    //reset data back to identity.\r\n    resetMat() {\r\n        for (let i = 0; i < this.matrix.length; i++) this.matrix[i] = (i % 5 == 0) ? 1 : 0; //only positions 0,5,10,15 need to be 1 else 0.\r\n        return this;\r\n    }\r\n\r\n    //....................................................................\r\n    //Static Data Methods\r\n    static identity() {\r\n        let a = new Float32Array(16);\r\n        a[0] = a[5] = a[10] = a[15] = 1;\r\n        return a;\r\n    }\r\n\r\n    //from glMatrix\r\n    static perspective(out: Float32Array, fovy: number, aspect: number, near: number, far: number) {\r\n        let f = 1.0 / Math.tan(fovy / 2),\r\n            nf = 1 / (near - far);\r\n        out[0] = f / aspect;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = f;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = (far + near) * nf;\r\n        out[11] = -1;\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = (2 * far * near) * nf;\r\n        out[15] = 0;\r\n    }\r\n\r\n\r\n    static ortho(out: Float32Array, left: number, right: number, bottom: number, top: number, near: number, far: number) {\r\n        let lr = 1 / (left - right),\r\n            bt = 1 / (bottom - top),\r\n            nf = 1 / (near - far);\r\n        out[0] = -2 * lr;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = -2 * bt;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = 2 * nf;\r\n        out[11] = 0;\r\n        out[12] = (left + right) * lr;\r\n        out[13] = (top + bottom) * bt;\r\n        out[14] = (far + near) * nf;\r\n        out[15] = 1;\r\n    };\r\n\r\n\r\n     /**\r\n   * Creates a lookAt matrix.\r\n   * This is a world matrix for a camera. In other words it will transform\r\n   * from the origin to a place and orientation in the world. For a view\r\n   * matrix take the inverse of this.\r\n   * @param {Float32Array} cameraPosition position of the camera\r\n   * @param {Vector3} target position of the target\r\n   * @param {Vector3} up direction\r\n   * @param {Float32Array} [dst] optional matrix to store result\r\n   * @return {Float32Array} dst or a new matrix if none provided\r\n   * @memberOf module:webgl-3d-math\r\n   */\r\n    static lookAt(cameraPosition: any, target:any, up:any, dst:any=null) {\r\n        dst = dst || new Float32Array(16);\r\n        var zAxis = Matrix4.normalize(Matrix4.subtractVectors(cameraPosition, target));\r\n        var xAxis = Matrix4.normalize(Matrix4.cross(up, zAxis));\r\n        var yAxis = Matrix4.normalize(Matrix4.cross(zAxis, xAxis));\r\n\r\n        dst[ 0] = xAxis[0];\r\n        dst[ 1] = xAxis[1];\r\n        dst[ 2] = xAxis[2];\r\n        dst[ 3] = 0;\r\n        dst[ 4] = yAxis[0];\r\n        dst[ 5] = yAxis[1];\r\n        dst[ 6] = yAxis[2];\r\n        dst[ 7] = 0;\r\n        dst[ 8] = zAxis[0];\r\n        dst[ 9] = zAxis[1];\r\n        dst[10] = zAxis[2];\r\n        dst[11] = 0;\r\n        dst[12] = cameraPosition[0];\r\n        dst[13] = cameraPosition[1];\r\n        dst[14] = cameraPosition[2];\r\n        dst[15] = 1;\r\n\r\n        return dst;\r\n    }\r\n\r\n    static subtractVectors(a:any, b:any, dst:any=null) {\r\n        dst = dst || new Float32Array(3);\r\n        dst[0] = a[0] - b[0];\r\n        dst[1] = a[1] - b[1];\r\n        dst[2] = a[2] - b[2];\r\n        return dst;\r\n    }\r\n\r\n    static cross(a:any, b:any, dst:any=null) {\r\n        dst = dst || new Float32Array(3);\r\n        dst[0] = a[1] * b[2] - a[2] * b[1];\r\n        dst[1] = a[2] * b[0] - a[0] * b[2];\r\n        dst[2] = a[0] * b[1] - a[1] * b[0];\r\n        return dst;\r\n    }\r\n\r\n    static normalize(v:any, dst:any=null) {\r\n        dst = dst || new Float32Array(3);\r\n        var length = Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\r\n        // make sure we don't divide by 0.\r\n        if (length > 0.00001) {\r\n            dst[0] = v[0] / length;\r\n            dst[1] = v[1] / length;\r\n            dst[2] = v[2] / length;\r\n        }\r\n        return dst;\r\n    }\r\n\r\n\r\n    //https://github.com/toji/gl-matrix/blob/master/src/gl-matrix/mat4.js\r\n    //make the rows into the columns\r\n    static transpose(out: Float32Array, a: Float32Array) {\r\n        //If we are transposing ourselves we can skip a few steps but have to cache some values\r\n        if (out === a) {\r\n            let a01 = a[1],\r\n                a02 = a[2],\r\n                a03 = a[3],\r\n                a12 = a[6],\r\n                a13 = a[7],\r\n                a23 = a[11];\r\n            out[1] = a[4];\r\n            out[2] = a[8];\r\n            out[3] = a[12];\r\n            out[4] = a01;\r\n            out[6] = a[9];\r\n            out[7] = a[13];\r\n            out[8] = a02;\r\n            out[9] = a12;\r\n            out[11] = a[14];\r\n            out[12] = a03;\r\n            out[13] = a13;\r\n            out[14] = a23;\r\n        } else {\r\n            out[0] = a[0];\r\n            out[1] = a[4];\r\n            out[2] = a[8];\r\n            out[3] = a[12];\r\n            out[4] = a[1];\r\n            out[5] = a[5];\r\n            out[6] = a[9];\r\n            out[7] = a[13];\r\n            out[8] = a[2];\r\n            out[9] = a[6];\r\n            out[10] = a[10];\r\n            out[11] = a[14];\r\n            out[12] = a[3];\r\n            out[13] = a[7];\r\n            out[14] = a[11];\r\n            out[15] = a[15];\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    //Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n    static normalMat3(out: Float32Array, a: Float32Array) {\r\n        let a00 = a[0],\r\n            a01 = a[1],\r\n            a02 = a[2],\r\n            a03 = a[3],\r\n            a10 = a[4],\r\n            a11 = a[5],\r\n            a12 = a[6],\r\n            a13 = a[7],\r\n            a20 = a[8],\r\n            a21 = a[9],\r\n            a22 = a[10],\r\n            a23 = a[11],\r\n            a30 = a[12],\r\n            a31 = a[13],\r\n            a32 = a[14],\r\n            a33 = a[15],\r\n\r\n            b00 = a00 * a11 - a01 * a10,\r\n            b01 = a00 * a12 - a02 * a10,\r\n            b02 = a00 * a13 - a03 * a10,\r\n            b03 = a01 * a12 - a02 * a11,\r\n            b04 = a01 * a13 - a03 * a11,\r\n            b05 = a02 * a13 - a03 * a12,\r\n            b06 = a20 * a31 - a21 * a30,\r\n            b07 = a20 * a32 - a22 * a30,\r\n            b08 = a20 * a33 - a23 * a30,\r\n            b09 = a21 * a32 - a22 * a31,\r\n            b10 = a21 * a33 - a23 * a31,\r\n            b11 = a22 * a33 - a23 * a32,\r\n\r\n            // Calculate the determinant\r\n            det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (!det) return null;\r\n\r\n        det = 1.0 / det;\r\n\r\n        out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n\r\n        out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n\r\n        out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n        return out;\r\n    }\r\n\r\n    //....................................................................\r\n    //Static Operation\r\n\r\n    //https://github.com/gregtatum/mdn-model-view-projection/blob/master/shared/matrices.js\r\n    static multiplyVector(mat4: Float32Array, v: Float32Array) {\r\n        let x = v[0],\r\n            y = v[1],\r\n            z = v[2],\r\n            w = v[3];\r\n        let c1r1 = mat4[0],\r\n            c2r1 = mat4[1],\r\n            c3r1 = mat4[2],\r\n            c4r1 = mat4[3],\r\n            c1r2 = mat4[4],\r\n            c2r2 = mat4[5],\r\n            c3r2 = mat4[6],\r\n            c4r2 = mat4[7],\r\n            c1r3 = mat4[8],\r\n            c2r3 = mat4[9],\r\n            c3r3 = mat4[10],\r\n            c4r3 = mat4[11],\r\n            c1r4 = mat4[12],\r\n            c2r4 = mat4[13],\r\n            c3r4 = mat4[14],\r\n            c4r4 = mat4[15];\r\n\r\n        return [\r\n            x * c1r1 + y * c1r2 + z * c1r3 + w * c1r4,\r\n            x * c2r1 + y * c2r2 + z * c2r3 + w * c2r4,\r\n            x * c3r1 + y * c3r2 + z * c3r3 + w * c3r4,\r\n            x * c4r1 + y * c4r2 + z * c4r3 + w * c4r4\r\n        ];\r\n    }\r\n\r\n    //https://github.com/toji/gl-matrix/blob/master/src/gl-matrix/vec4.js, vec4.transformMat4\r\n    static transformVec4(out: Float32Array, v: number[], m: Float32Array) {\r\n        out[0] = m[0] * v[0] + m[4] * v[1] + m[8] * v[2] + m[12] * v[3];\r\n        out[1] = m[1] * v[0] + m[5] * v[1] + m[9] * v[2] + m[13] * v[3];\r\n        out[2] = m[2] * v[0] + m[6] * v[1] + m[10] * v[2] + m[14] * v[3];\r\n        out[3] = m[3] * v[0] + m[7] * v[1] + m[11] * v[2] + m[15] * v[3];\r\n        return out;\r\n    }\r\n\r\n    //From glMatrix\r\n    //Multiple two mat4 together\r\n    static mult(out: Float32Array, a: Float32Array, b: Float32Array) {\r\n        let a00 = a[0],\r\n            a01 = a[1],\r\n            a02 = a[2],\r\n            a03 = a[3],\r\n            a10 = a[4],\r\n            a11 = a[5],\r\n            a12 = a[6],\r\n            a13 = a[7],\r\n            a20 = a[8],\r\n            a21 = a[9],\r\n            a22 = a[10],\r\n            a23 = a[11],\r\n            a30 = a[12],\r\n            a31 = a[13],\r\n            a32 = a[14],\r\n            a33 = a[15];\r\n\r\n        // Cache only the current line of the second matrix\r\n        let b0 = b[0],\r\n            b1 = b[1],\r\n            b2 = b[2],\r\n            b3 = b[3];\r\n        out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = b[4];\r\n        b1 = b[5];\r\n        b2 = b[6];\r\n        b3 = b[7];\r\n        out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = b[8];\r\n        b1 = b[9];\r\n        b2 = b[10];\r\n        b3 = b[11];\r\n        out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = b[12];\r\n        b1 = b[13];\r\n        b2 = b[14];\r\n        b3 = b[15];\r\n        out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n        return out;\r\n    }\r\n\r\n\r\n    //....................................................................\r\n    //Static Transformation\r\n    static scale(out: Float32Array, x: number, y: number, z: number) {\r\n        out[0] *= x;\r\n        out[1] *= x;\r\n        out[2] *= x;\r\n        out[3] *= x;\r\n        out[4] *= y;\r\n        out[5] *= y;\r\n        out[6] *= y;\r\n        out[7] *= y;\r\n        out[8] *= z;\r\n        out[9] *= z;\r\n        out[10] *= z;\r\n        out[11] *= z;\r\n        return out;\r\n    };\r\n\r\n    static rotateY(out: Float32Array, rad: number) {\r\n        let s = Math.sin(rad),\r\n            c = Math.cos(rad),\r\n            a00 = out[0],\r\n            a01 = out[1],\r\n            a02 = out[2],\r\n            a03 = out[3],\r\n            a20 = out[8],\r\n            a21 = out[9],\r\n            a22 = out[10],\r\n            a23 = out[11];\r\n\r\n        // Perform axis-specific matrix multiplication\r\n        out[0] = a00 * c - a20 * s;\r\n        out[1] = a01 * c - a21 * s;\r\n        out[2] = a02 * c - a22 * s;\r\n        out[3] = a03 * c - a23 * s;\r\n        out[8] = a00 * s + a20 * c;\r\n        out[9] = a01 * s + a21 * c;\r\n        out[10] = a02 * s + a22 * c;\r\n        out[11] = a03 * s + a23 * c;\r\n        return out;\r\n    }\r\n\r\n    static rotateX(out: Float32Array, rad: number) {\r\n        let s = Math.sin(rad),\r\n            c = Math.cos(rad),\r\n            a10 = out[4],\r\n            a11 = out[5],\r\n            a12 = out[6],\r\n            a13 = out[7],\r\n            a20 = out[8],\r\n            a21 = out[9],\r\n            a22 = out[10],\r\n            a23 = out[11];\r\n\r\n        // Perform axis-specific matrix multiplication\r\n        out[4] = a10 * c + a20 * s;\r\n        out[5] = a11 * c + a21 * s;\r\n        out[6] = a12 * c + a22 * s;\r\n        out[7] = a13 * c + a23 * s;\r\n        out[8] = a20 * c - a10 * s;\r\n        out[9] = a21 * c - a11 * s;\r\n        out[10] = a22 * c - a12 * s;\r\n        out[11] = a23 * c - a13 * s;\r\n        return out;\r\n    }\r\n\r\n    static rotateZ(out: Float32Array, rad: number) {\r\n        let s = Math.sin(rad),\r\n            c = Math.cos(rad),\r\n            a00 = out[0],\r\n            a01 = out[1],\r\n            a02 = out[2],\r\n            a03 = out[3],\r\n            a10 = out[4],\r\n            a11 = out[5],\r\n            a12 = out[6],\r\n            a13 = out[7];\r\n\r\n        // Perform axis-specific matrix multiplication\r\n        out[0] = a00 * c + a10 * s;\r\n        out[1] = a01 * c + a11 * s;\r\n        out[2] = a02 * c + a12 * s;\r\n        out[3] = a03 * c + a13 * s;\r\n        out[4] = a10 * c - a00 * s;\r\n        out[5] = a11 * c - a01 * s;\r\n        out[6] = a12 * c - a02 * s;\r\n        out[7] = a13 * c - a03 * s;\r\n        return out;\r\n    }\r\n\r\n    static rotate(out: Float32Array, rad: number, axis: Float32Array) {\r\n        let x = axis[0],\r\n            y = axis[1],\r\n            z = axis[2],\r\n            len = Math.sqrt(x * x + y * y + z * z),\r\n            s, c, t,\r\n            a00, a01, a02, a03,\r\n            a10, a11, a12, a13,\r\n            a20, a21, a22, a23,\r\n            b00, b01, b02,\r\n            b10, b11, b12,\r\n            b20, b21, b22;\r\n\r\n        if (Math.abs(len) < 0.000001) {\r\n            return null;\r\n        }\r\n\r\n        len = 1 / len;\r\n        x *= len;\r\n        y *= len;\r\n        z *= len;\r\n\r\n        s = Math.sin(rad);\r\n        c = Math.cos(rad);\r\n        t = 1 - c;\r\n\r\n        a00 = out[0];\r\n        a01 = out[1];\r\n        a02 = out[2];\r\n        a03 = out[3];\r\n        a10 = out[4];\r\n        a11 = out[5];\r\n        a12 = out[6];\r\n        a13 = out[7];\r\n        a20 = out[8];\r\n        a21 = out[9];\r\n        a22 = out[10];\r\n        a23 = out[11];\r\n\r\n        // Construct the elements of the rotation matrix\r\n        b00 = x * x * t + c;\r\n        b01 = y * x * t + z * s;\r\n        b02 = z * x * t - y * s;\r\n        b10 = x * y * t - z * s;\r\n        b11 = y * y * t + c;\r\n        b12 = z * y * t + x * s;\r\n        b20 = x * z * t + y * s;\r\n        b21 = y * z * t - x * s;\r\n        b22 = z * z * t + c;\r\n\r\n        // Perform rotation-specific matrix multiplication\r\n        out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n        out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n        out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n        out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n        out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n        out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n        out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n        out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n        out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n        out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n        out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n        out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n    }\r\n\r\n    static invert(out: Float32Array, mat ? : Float32Array) {\r\n        if (mat === undefined) mat = out; //If input isn't sent, then output is also input\r\n\r\n        let a00 = mat[0],\r\n            a01 = mat[1],\r\n            a02 = mat[2],\r\n            a03 = mat[3],\r\n            a10 = mat[4],\r\n            a11 = mat[5],\r\n            a12 = mat[6],\r\n            a13 = mat[7],\r\n            a20 = mat[8],\r\n            a21 = mat[9],\r\n            a22 = mat[10],\r\n            a23 = mat[11],\r\n            a30 = mat[12],\r\n            a31 = mat[13],\r\n            a32 = mat[14],\r\n            a33 = mat[15],\r\n\r\n            b00 = a00 * a11 - a01 * a10,\r\n            b01 = a00 * a12 - a02 * a10,\r\n            b02 = a00 * a13 - a03 * a10,\r\n            b03 = a01 * a12 - a02 * a11,\r\n            b04 = a01 * a13 - a03 * a11,\r\n            b05 = a02 * a13 - a03 * a12,\r\n            b06 = a20 * a31 - a21 * a30,\r\n            b07 = a20 * a32 - a22 * a30,\r\n            b08 = a20 * a33 - a23 * a30,\r\n            b09 = a21 * a32 - a22 * a31,\r\n            b10 = a21 * a33 - a23 * a31,\r\n            b11 = a22 * a33 - a23 * a32,\r\n\r\n            // Calculate the determinant\r\n            det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (!det) return false;\r\n        det = 1.0 / det;\r\n\r\n        out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n        out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n        out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n        out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n        out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n        out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n        out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n        out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n        out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n        out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n        return true;\r\n    }\r\n\r\n    //https://github.com/toji/gl-matrix/blob/master/src/gl-matrix/mat4.js  mat4.scalar.translate = function (out, a, v) {\r\n    static translate(out: Float32Array, x: number, y: number, z: number) {\r\n        out[12] = out[0] * x + out[4] * y + out[8] * z + out[12];\r\n        out[13] = out[1] * x + out[5] * y + out[9] * z + out[13];\r\n        out[14] = out[2] * x + out[6] * y + out[10] * z + out[14];\r\n        out[15] = out[3] * x + out[7] * y + out[11] * z + out[15];\r\n    }\r\n}\r\n\r\nexport {\r\n    Vector3,\r\n    Matrix4\r\n}","import { Matrix4, Vector3 } from \"./math\";\r\nimport { degToRad } from \"@/modules\";\r\n\r\nexport default class Transformation {\r\n\r\n    constructor() {\r\n        //identity matrix\r\n        //transform vectors\r\n        this.position = new Vector3(0, 0, 0)    //Traditional X,Y,Z 3d position\r\n        this.scale = new Vector3(1, 1, 1)       //How much to scale a mesh. Having a 1 means no scaling is done.\r\n        this.rotation = new Vector3(0, 0, 0)    //Hold rotation values based on degrees, Object will translate it to radians\r\n        this.matView = new Matrix4()            //Cache the results when calling updateMatrix\r\n        this.matNormal = new Float32Array(9)    //This is a Mat3, matrix array to hold the values is enough for what its used for\r\n\r\n        //Direction Vectors, Need 4 elements for math operations with matrices\r\n        this.forward = new Float32Array(4)      //When rotating, keep track of what the forward direction is\r\n        this.up = new Float32Array(4)           //what the up direction is, invert to get bottom\r\n        this.right = new Float32Array(4)        //what the right direction is, invert to get left\r\n    }\r\n\r\n    position: Vector3\r\n    scale: Vector3\r\n    rotation: Vector3\r\n    matView: Matrix4\r\n    matNormal: Float32Array\r\n    forward: Float32Array\r\n    up: Float32Array\r\n    right: Float32Array\r\n\r\n\r\n    updateMatrix() {\r\n        this.matView.resetMat() //Order is very important!!\r\n            .vtranslate(this.position)\r\n            .rotateX(degToRad(this.rotation.x))\r\n            .rotateY(degToRad(this.rotation.y))\r\n            .rotateZ(degToRad(this.rotation.z))\r\n            .vscale(this.scale);\r\n\r\n        //Calcuate the Normal Matrix which doesn't need translate, then transpose and inverses the mat4 to mat3\r\n        Matrix4.normalMat3(this.matNormal, this.matView.matrix);\r\n\r\n        //Determine Direction after all the transformations.\r\n        Matrix4.transformVec4(this.forward, [0, 0, 1, 0], this.matView.matrix) //Z\r\n        Matrix4.transformVec4(this.up, [0, 1, 0, 0], this.matView.matrix)      //Y\r\n        Matrix4.transformVec4(this.right, [1, 0, 0, 0], this.matView.matrix)   //X\r\n\r\n        return this.matView.matrix;\r\n    }\r\n\r\n    updateDirection() {\r\n        Matrix4.transformVec4(this.forward, [0, 0, 1, 0], this.matView.matrix)\r\n        Matrix4.transformVec4(this.up, [0, 1, 0, 0], this.matView.matrix)\r\n        Matrix4.transformVec4(this.right, [1, 0, 0, 0], this.matView.matrix)\r\n        return this\r\n    }\r\n\r\n    getModelMatrix() {\r\n        return this.matView.matrix\r\n    }\r\n\r\n    getNormalMatrix() {\r\n        return this.matNormal\r\n    }\r\n\r\n    reset() {\r\n        this.position.set(0, 0, 0)\r\n        this.scale.set(1, 1, 1)\r\n        this.rotation.set(0, 0, 0)\r\n    }\r\n}","\r\nimport { CameraControlsSettings, CameraSettings, degToRad } from \"@/modules\"\r\nimport { Matrix4 } from \"./math\"\r\nimport Transformation from \"./transformation\"\r\n\r\n//https://github.com/sketchpunk/FunWithWebGL2/tree/master/lesson_006\r\nclass Camera {\r\n  constructor(gl: WebGLRenderingContext, fov: number = CameraSettings.FIELD_OF_VIEW, near: number = CameraSettings.NEAR_PLANE, far: number = CameraSettings.FAR_PLANE) {\r\n\r\n    this.perspectiveProjection = new Float32Array(16)\r\n    this.orthoProjection = new Float32Array(16)\r\n\r\n    const ratio = gl.canvas.width / gl.canvas.height\r\n    const left = - gl.canvas.width / 2\r\n    const right = gl.canvas.width / 2\r\n    const top = gl.canvas.height / 2\r\n    const bottom = - gl.canvas.height / 2\r\n    \r\n    Matrix4.perspective(this.perspectiveProjection, fov, ratio, near, far)\r\n    Matrix4.ortho(this.orthoProjection, left, right, bottom, top, 1, 10)\r\n\r\n    this.transform = new Transformation() //Setup transform to control the position of the camera\r\n    this.viewMatrix = new Float32Array(16) //Cache the matrix that will hold the inverse of the transform.\r\n\r\n    this.mode = Camera.MODE_ORBIT //Set what sort of control mode to use.\r\n  }\r\n\r\n  transform: Transformation\r\n  perspectiveProjection: Float32Array\r\n  orthoProjection: Float32Array\r\n  viewMatrix: Float32Array\r\n  mode: number\r\n\r\n  static MODE_FREE = CameraSettings.MODE_FREE //Allows free movement of position and rotation, basicly first person type of camera\r\n  static MODE_ORBIT = CameraSettings.MODE_ORBIT //Movement is locked to rotate around the origin, Great for 3d editors or a single model viewer\r\n\r\n  panX(v: number) {\r\n    if (this.mode == Camera.MODE_ORBIT) return // Panning on the X Axis is only allowed when in free mode\r\n    this.updateViewMatrix()\r\n    this.transform.position.x += this.transform.right[0] * v\r\n    this.transform.position.y += this.transform.right[1] * v\r\n    this.transform.position.z += this.transform.right[2] * v\r\n  }\r\n\r\n  panY(v: number) {\r\n    this.updateViewMatrix()\r\n    this.transform.position.y += this.transform.up[1] * v\r\n    if (this.mode == Camera.MODE_ORBIT) return //Can only move up and down the y axix in orbit mode\r\n    this.transform.position.x += this.transform.up[0] * v\r\n    this.transform.position.z += this.transform.up[2] * v\r\n  }\r\n\r\n  panZ(v: number) {\r\n    this.updateViewMatrix()\r\n    if (this.mode == Camera.MODE_ORBIT) {\r\n      this.transform.position.z += v //orbit mode does translate after rotate, so only need to set Z, the rotate will handle the rest.\r\n    } else {\r\n      //in freemode to move forward, we need to move based on our forward which is relative to our current rotation\r\n      this.transform.position.x += this.transform.forward[0] * v\r\n      this.transform.position.y += this.transform.forward[1] * v\r\n      this.transform.position.z += this.transform.forward[2] * v\r\n    }\r\n  }\r\n\r\n  //To have different modes of movements, this function handles the view matrix update for the transform object.\r\n  updateViewMatrix() {\r\n    //Optimize camera transform update, no need for scale nor rotateZ\r\n    if (this.mode == Camera.MODE_FREE) {\r\n      this.transform.matView.resetMat()\r\n        .vtranslate(this.transform.position)\r\n        .rotateX(degToRad(this.transform.rotation.x))\r\n        .rotateY(degToRad(this.transform.rotation.y))\r\n\r\n    } else {\r\n      this.transform.matView.resetMat()\r\n        .rotateX(degToRad(this.transform.rotation.x))\r\n        .rotateY(degToRad(this.transform.rotation.y))\r\n        .vtranslate(this.transform.position)\r\n    }\r\n\r\n    this.transform.updateDirection()\r\n\r\n    //Cameras work by doing the inverse transformation on all meshes, the camera itself is a lie :)\r\n    Matrix4.invert(this.viewMatrix, this.transform.matView.matrix)\r\n\r\n    return this.viewMatrix\r\n  }\r\n\r\n}\r\n\r\nclass CameraController {\r\n  constructor(gl: WebGLRenderingContext, camera: Camera) {\r\n    const box = (gl.canvas as HTMLCanvasElement).getBoundingClientRect()\r\n    this.canvas = gl.canvas as HTMLCanvasElement //Need access to the canvas html element, main to access events\r\n    this.camera = camera //Reference to the camera to control\r\n\r\n    this.rotateRate = CameraControlsSettings.ROTATION_RATE  //How fast to rotate, degrees per dragging delta\r\n    this.panRate = CameraControlsSettings.PAN_RATE          //How fast to pan, max unit per dragging delta\r\n    this.zoomRate = CameraControlsSettings.ZOOM_RATE        //How fast to zoom or can be viewed as forward/backward movement\r\n\r\n    this.offsetX = box.left //Help calc global x,y mouse cords.\r\n    this.offsetY = box.top\r\n\r\n    this.initX = 0 //Starting X,Y position on mouse down\r\n    this.initY = 0\r\n    this.prevX = 0 //Previous X,Y position on mouse move\r\n    this.prevY = 0\r\n\r\n\t\tthis.onUpHandler = (e: MouseEvent) => this.onMouseUp(e)//Cache func reference that gets bound and unbound a lot\r\n\t\tthis.onMoveHandler = (e: MouseEvent) => this.onMouseMove(e)\r\n\r\n\t\tthis.canvas.addEventListener(CameraControlsSettings.MOUSE_DOWN, (e: MouseEvent) => this.onMouseDown(e))\t//Initializes the up and move events\r\n\t\tthis.canvas.addEventListener(CameraControlsSettings.MOUSE_WHEEL, (e: Event ) => this.onMouseWheel(e))\t  //Handles zoom/forward movement\r\n  }\r\n\r\n  canvas: HTMLCanvasElement\r\n  camera: Camera\r\n  rotateRate: number         //How fast to rotate, degrees per dragging delta\r\n  panRate: number            //How fast to pan, max unit per dragging delta\r\n  zoomRate: number           //How fast to zoom or can be viewed as forward/backward movement\r\n  offsetX: number            //Help calc global x,y mouse cords.\r\n  offsetY: number\r\n  initX: number              //Starting X,Y position on mouse down\r\n  initY: number\r\n  prevX: number              //Previous X,Y position on mouse move\r\n  prevY: number\r\n  onUpHandler:any\r\n  onMoveHandler:any\r\n\r\n  //Transform mouse x,y cords to something useable by the canvas.\r\n  getMouseVec2(e: MouseEvent) {\r\n    return {\r\n      x: e.pageX - this.offsetX,\r\n      y: e.pageY - this.offsetY\r\n    }\r\n  }\r\n\r\n\r\n  //Begin listening for dragging movement\r\n  onMouseDown(e: MouseEvent) {\r\n    this.initX = this.prevX = e.pageX - this.offsetX\r\n    this.initY = this.prevY = e.pageY - this.offsetY\r\n\r\n    this.canvas.addEventListener(CameraControlsSettings.MOUSE_UP, this.onUpHandler)\r\n    this.canvas.addEventListener(CameraControlsSettings.MOUSE_MOVE, this.onMoveHandler)\r\n  }\r\n\r\n  //End listening for dragging movement\r\n  onMouseUp(e: MouseEvent) {\r\n    this.canvas.removeEventListener(CameraControlsSettings.MOUSE_UP, this.onUpHandler)\r\n    this.canvas.removeEventListener(CameraControlsSettings.MOUSE_MOVE, this.onMoveHandler)\r\n  }\r\n\r\n  onMouseWheel(e: any) {\r\n    let delta = Math.max(-1, Math.min(1, (e.wheelDelta || -e.detail))) //Try to map wheel movement to a number between -1 and 1\r\n    this.camera.panZ(-delta * (this.zoomRate / this.canvas.height))    //Keep the movement speed the same, no matter the height diff\r\n  }\r\n\r\n  onMouseMove(e: MouseEvent) {\r\n    let x = e.pageX - this.offsetX, //Get X,y where the canvas's position is origin.\r\n      y = e.pageY - this.offsetY,\r\n      dx = x - this.prevX,          //Difference since last mouse move\r\n      dy = y - this.prevY\r\n\r\n    //When shift is being helt down, we pan around else we rotate.\r\n    if (!e.shiftKey) {\r\n      this.camera.transform.rotation.y += dx * (this.rotateRate / this.canvas.width)\r\n      this.camera.transform.rotation.x += dy * (this.rotateRate / this.canvas.height)\r\n    } else {\r\n      this.camera.panX(-dx * (this.panRate / this.canvas.width))\r\n      this.camera.panY(dy * (this.panRate / this.canvas.height))\r\n    }\r\n\r\n    this.prevX = x\r\n    this.prevY = y\r\n  }\r\n}\r\n\r\nexport {\r\n  Camera,\r\n  CameraController\r\n}","import { ProgramEntrySettings } from \"@/modules\"\r\nimport DepthTexture from \"./Textures/depthTexture\"\r\n\r\n\r\nexport default class GLContext {\r\n    constructor(WEBGL_CANVAS_ID: string) {\r\n        const canvas = document.getElementById(WEBGL_CANVAS_ID) as HTMLCanvasElement\r\n        this.gl = canvas.getContext(ProgramEntrySettings.WEBGL_CONTEXT) as WebGLRenderingContext\r\n        this.gl ?? alert(ProgramEntrySettings.WEBGL_CONTEXT_ERROR_MESSAGE)  //user if webgl is not available\r\n        this.gl?.cullFace(this.gl.BACK)\t\t\t\t\t\t\t\t        //Back is also default\r\n        this.gl?.frontFace(this.gl.CCW)\t\t\t\t\t\t\t\t        //Dont really need to set it, its ccw by default.\r\n        this.gl?.enable(this.gl.DEPTH_TEST)\t\t\t\t\t\t\t        //Shouldn't use this, use something else to add depth detection\r\n        this.gl?.enable(this.gl.CULL_FACE)\t\t\t\t\t\t\t        //Cull back face, so only show triangles that are created clockwise\r\n        this.gl?.depthFunc(this.gl.LEQUAL)\t\t\t\t\t\t\t        //Near things obscure far things\r\n        this.gl?.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA)\t//Setup default alpha blending\r\n        this.canvas = canvas\r\n    }\r\n\r\n    gl: WebGLRenderingContext | null = null\r\n    rgb_32_bit = 255\r\n    alpha = 1\r\n    canvas: HTMLCanvasElement\r\n\r\n    setSize(w: number, h: number) {\r\n        //set the size of the canvas, on chrome we need to set it 3 ways to make it work perfectly.\r\n        this.canvas.style.width = w + \"px\"\r\n        this.canvas.style.height = h + \"px\"\r\n        this.canvas.width = w\r\n        this.canvas.height = h\r\n\r\n        //when updating the canvas size, must reset the viewport of the canvas \r\n        //else the resolution webgl renders at will not change\r\n        this.gl?.viewport(0, 0, w, h)\r\n        \r\n        return this\r\n    }\r\n\r\n    depthRender(depthTexture:DepthTexture){\r\n        this.gl?.bindFramebuffer(this.gl?.FRAMEBUFFER, depthTexture.depthFramebuffer)\r\n        this.gl?.viewport(0, 0, depthTexture.depthTextureSize, depthTexture.depthTextureSize)\r\n        this.gl?.clear(this.gl?.COLOR_BUFFER_BIT | this.gl?.DEPTH_BUFFER_BIT);\r\n        return this\r\n    }\r\n\r\n    //Set the size of the canvas to fill a % of the total screen.\r\n    fitScreen(wp: number, hp: number) {\r\n        return this.setSize(window.innerWidth * (wp || 1), window.innerHeight * (hp || 1))\r\n    }\r\n\r\n    setClearColor(red: number, green: number, blue: number, alpha: number = 1) {\r\n        this.gl?.clearColor(red / this.rgb_32_bit, green / this.rgb_32_bit, blue / this.rgb_32_bit, alpha)\r\n        return this\r\n    }\r\n\r\n    clearFramebuffer(){\r\n        this.gl?.bindFramebuffer(this.gl?.FRAMEBUFFER, null)\r\n        return this\r\n    }\r\n\r\n    clear() {\r\n        this.gl?.clear(this.gl?.COLOR_BUFFER_BIT | this.gl?.DEPTH_BUFFER_BIT)\r\n        return this\r\n    }\r\n\r\n    getContext() {\r\n        return this.gl\r\n    }\r\n}","import { normalizeColor } from \"@/modules\"\r\nimport { Vector3 } from \"./math\"\r\nimport { ModelShader } from \"./model\"\r\n\r\nexport default class Light {\r\n    constructor(\r\n        lightPosition: Vector3,\r\n        lightColor = normalizeColor({red:201, green:226, blue:255}),\r\n        ambientLightColor = normalizeColor({red:50, green:50, blue:50}),\r\n        specularColor = normalizeColor({red:255, green:255, blue:255}),\r\n        specularFactor = 1,\r\n        shininess = 1000,\r\n    ) { \r\n        this.lightPosition = lightPosition\r\n        this.lightColor = lightColor\r\n        this.ambientLightColor = ambientLightColor\r\n        this.specularColor = specularColor\r\n        this.specularFactor = specularFactor\r\n        this.shininess = shininess\r\n    }\r\n\r\n    lightPosition: Vector3\r\n    lightColor: Float32Array\r\n    ambientLightColor: Float32Array\r\n    specularColor: Float32Array\r\n    specularFactor: number\r\n    shininess: number\r\n   \r\n\r\n    setUniforms(gl:WebGLRenderingContext, program:ModelShader): void {\r\n        gl.uniform3fv(program.lightPositionLoc, [this.lightPosition.x, this.lightPosition.y, this.lightPosition.z])\r\n        gl.uniform4fv(program.lightColorLoc, this.lightColor)\r\n        gl.uniform4fv(program.ambientLightColorLoc, this.ambientLightColor)\r\n        gl.uniform4fv(program.specularColorLoc, this.specularColor)\r\n        gl.uniform1f(program.specularFactorLoc, this.specularFactor)\r\n        gl.uniform1f(program.shininessLoc, this.shininess)\r\n    }\r\n\r\n}","\r\nimport { MeshData } from \"@/entities\"\r\nimport Transformation from \"./transformation\"\r\nexport default class Geometry {\r\n\r\n    constructor( mesh: MeshData) {\r\n\r\n        this.mesh = mesh\r\n        this.transform = new Transformation()\r\n    }\r\n\r\n    mesh: MeshData\r\n    transform: Transformation\r\n\r\n\r\n    setScale(x: number, y: number, z: number) {\r\n        this.transform.scale.set(x, y, z)\r\n        return this\r\n    }\r\n\r\n    setPosition(x: number, y: number, z: number) {\r\n        this.transform.position.set(x, y, z)\r\n        return this\r\n    }\r\n\r\n    setRotation(x: number, y: number, z: number) {\r\n        this.transform.rotation.set(x, y, z)\r\n        return this\r\n    }\r\n\r\n    addScale(x: number, y: number, z: number) {\r\n        this.transform.scale.x += x\r\n        this.transform.scale.y += y\r\n        this.transform.scale.y += y\r\n        return this\r\n    }\r\n\r\n    addPosition(x: number, y: number, z: number) {\r\n        this.transform.position.x += x\r\n        this.transform.position.y += y\r\n        this.transform.position.z += z\r\n        return this\r\n    }\r\n\r\n    addRotation(x: number, y: number, z: number) {\r\n        this.transform.rotation.x += x\r\n        this.transform.rotation.y += y\r\n        this.transform.rotation.z += z\r\n        return this\r\n    }\r\n\r\n    preRender() {\r\n        this.transform.updateMatrix()\r\n        return this\r\n    }\r\n}","import { GLSetttings } from \"@/modules\";\r\n\r\nexport default class Vbuffer {\r\n\r\n  constructor(gl: WebGLRenderingContext, data: number[], count: number, type:string) {\r\n    this.buffer = gl.createBuffer() as WebGLBuffer;\r\n\r\n    switch (type) {\r\n      case GLSetttings.BUFFER_TYPE_ARRAY:\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(data), gl.STATIC_DRAW);\r\n        break;\r\n\r\n      case GLSetttings.BUFFER_TYPE_ELEMENT_ARRAY:\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.buffer);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(data), gl.STATIC_DRAW);\r\n        break;\r\n    \r\n      default:\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(data), gl.STATIC_DRAW);\r\n        break;\r\n    }\r\n\r\n\r\n    this.gl = gl;\r\n    this.size = data.length / count;\r\n  }\r\n\r\n  buffer: WebGLBuffer;\r\n  gl: WebGLRenderingContext;\r\n  size: number;\r\n\r\n\r\n  destroy() {\r\n    this.gl.deleteBuffer(this.buffer);\r\n  }\r\n\r\n  bindToAttribute(data: number|number[], stride: number, offset: number, size: number = this.size, type:string = GLSetttings.BUFFER_TYPE_VERTICES) {\r\n    const gl = this.gl\r\n    switch (type) {\r\n      case GLSetttings.BUFFER_TYPE_ARRAY:\r\n        gl.enableVertexAttribArray(data as number);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\r\n        gl.vertexAttribPointer(data as number, size, gl.FLOAT, false, stride, offset);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER,null);\r\n        break;\r\n\r\n      case GLSetttings.BUFFER_TYPE_ELEMENT_ARRAY:\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.buffer);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(data as number[]), gl.STATIC_DRAW);\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,null);\r\n        break;\r\n    \r\n      default:\r\n        gl.enableVertexAttribArray(data as number);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\r\n        gl.vertexAttribPointer(data as number, size, gl.FLOAT, false, stride, offset);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER,null);\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n\r\n}","import Geometry from \"./geometry\"\r\n\r\nexport default class ShaderProgram {\r\n  constructor(gl: WebGLRenderingContext, vsSource: string, fsSource: string) {\r\n\r\n    const vertexShader = this.createShader(gl, gl.VERTEX_SHADER, vsSource) as WebGLShader\r\n    const fragmentShader = this.createShader(gl, gl.FRAGMENT_SHADER, fsSource) as WebGLShader\r\n    const shaderProgram = this.createShaderProgram(gl, fragmentShader, vertexShader)\r\n    this.program = shaderProgram\r\n    this.gl = gl\r\n  }\r\n\r\n  gl: WebGLRenderingContext | null = null\r\n  vertexShader: WebGLShader | null = null\r\n  fragmentShader: WebGLShader | null = null\r\n  program: WebGLProgram\r\n\r\n\r\n  createShader(gl: WebGLRenderingContext, type: number, source: string) {\r\n    const shader = gl.createShader(type) as WebGLShader\r\n\r\n    // Send the source to the shader object\r\n    gl.shaderSource(shader, source)\r\n\r\n    // Compile the shader program\r\n    gl.compileShader(shader)\r\n\r\n    // See if it compiled successfully\r\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n      console.error('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(shader))\r\n      gl.deleteShader(shader)\r\n      return null\r\n    }\r\n\r\n    return shader\r\n  }\r\n\r\n  createShaderProgram(gl: WebGLRenderingContext, vertexShader: WebGLShader, fragmentShader: WebGLShader): WebGLProgram {\r\n\r\n    const program = gl.createProgram() as WebGLProgram\r\n\r\n    gl.attachShader(program, vertexShader)\r\n    gl.attachShader(program, fragmentShader)\r\n    gl.linkProgram(program)\r\n\r\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n      console.error(\"Error creating shader program.\", gl.getProgramInfoLog(program))\r\n      gl.deleteProgram(program)\r\n      throw new Error('Failed to link shaderProgram')\r\n    }\r\n\r\n    this.vertexShader = vertexShader\r\n    this.fragmentShader = fragmentShader\r\n\r\n    gl.detachShader(program, vertexShader)\r\n    gl.detachShader(program, fragmentShader)\r\n    gl.deleteShader(fragmentShader)\r\n    gl.deleteShader(vertexShader)\r\n\r\n    return program\r\n  }\r\n\r\n  activateShader() {\r\n    (this.gl as WebGLRenderingContext).useProgram(this.program)\r\n    return this\r\n  }\r\n\r\n  deactivateShader() {\r\n    (this.gl as WebGLRenderingContext).useProgram(null)\r\n    return this\r\n  }\r\n\r\n  dispose() {\r\n    //unbind the program if its currently active\r\n    if ((this.gl as WebGLRenderingContext).getParameter((this.gl as WebGLRenderingContext).CURRENT_PROGRAM) === this.program) {\r\n      this.deactivateShader()\r\n    }\r\n    (this.gl as WebGLRenderingContext).deleteProgram(this.program)\r\n  }\r\n\r\n  renderModel(model: Geometry) {\r\n    const gl = this.gl as WebGLRenderingContext\r\n    \r\n\t\tif(model.mesh.noCulling) gl.disable(gl.CULL_FACE)\r\n\t\tif(model.mesh.doBlending) gl.enable(gl.BLEND)\r\n\r\n\t\tgl.drawArrays(model.mesh.drawMode, 0, model.mesh.vertexCount)\r\n\r\n\t\t//Cleanup\r\n\t\tif(model.mesh.noCulling) gl.enable(gl.CULL_FACE)\r\n\t\tif(model.mesh.doBlending) gl.disable(gl.BLEND)\r\n\r\n\t\treturn this\r\n  }\r\n\r\n}","import Geometry from './geometry'\r\nimport Texture from './Textures/texture'\r\nimport Vbuffer from './vbuffer'\r\nimport ShaderProgram from './shaderProgram'\r\nimport ObjLoader from './objLoader'\r\nimport { MeshData } from '@/entities'\r\nimport { GLSetttings } from '@/modules'\r\nimport { Camera } from './camera'\r\nimport { Matrix4 } from './math'\r\n\r\nclass ModelShader{\r\n\tconstructor(gl: WebGLRenderingContext, sceneViewCamera:Camera, lightViewCamera:Camera){\t\r\n\t\tconst vertexShader = `#version 300 es\r\n\t\t\tin vec3 a_position;\r\n\t\t\tin vec3 a_norm;\r\n\t\t\tin vec2 a_texCoord;\r\n\r\n\t\t\tuniform vec3 u_lightPosition;\r\n\t\t\tuniform vec3 u_cameraPosition;\r\n\r\n\t\t\tuniform mat4 u_mVMatrix;\r\n\t\t\tuniform mat4 u_cameraViewMatrix;\r\n\t\t\tuniform mat4 u_pMatrix;\r\n\t\t\tuniform mat4 u_textureMatrix;\r\n\r\n\t\t\tmat4 m_worldMatrix;\r\n\t\t\tmat4 m_viewProjectionMatrix;\r\n\t\t\tmat4 m_worldViewProjectionMatrix;\r\n\t\t\t\r\n\t\t\tout vec3 v_normal;\r\n\t\t\tout vec3 v_surfaceToLight;\r\n\t\t\tout vec3 v_surfaceToCamera;\r\n\r\n\t\t\tout vec2 v_texCoord;\r\n\r\n\t\t\tvoid main(void){\r\n\r\n\t\t\t\tm_worldMatrix = u_mVMatrix;\r\n\t\t\t\tm_viewProjectionMatrix = u_pMatrix * u_cameraViewMatrix;\r\n\t\t\t\tm_worldViewProjectionMatrix = m_viewProjectionMatrix * m_worldMatrix;\r\n\r\n\t\t\t\tgl_Position = m_worldViewProjectionMatrix * vec4(a_position, 1.0);\r\n\t\t\t\t\r\n\t\t\t\tv_normal = (u_cameraViewMatrix * vec4(a_norm, 0.0)).xyz;\r\n\r\n\t\t\t\tvec3 v_surfaceWorldPosition = (m_worldMatrix * vec4(a_position, 1.0)).xyz;\r\n\t\t\t\tv_surfaceToLight = u_lightPosition - v_surfaceWorldPosition;\r\n\t\t\t\tv_surfaceToCamera = u_cameraPosition - v_surfaceWorldPosition;\r\n\r\n\t\t\t\tv_texCoord = a_texCoord;\r\n\r\n\t\t\t}`;\r\n\r\n\t\tconst fragmentShader = `#version 300 es\r\n\t\t\tprecision highp float;\r\n\r\n\t\t\tin vec2 v_texCoord;\r\n\t\t\tin vec3 v_normal;\r\n\t\t\tin vec3 v_surfaceToLight;\r\n\t\t\tin vec3 v_surfaceToCamera;\r\n\r\n\t\t\tuniform sampler2D sampler;\r\n\t\t\tuniform vec4 u_lightColor;\r\n\t\t\tuniform vec4 u_ambientLightColor;\r\n\t\t\tuniform vec4 u_specularColor;\r\n\t\t\tuniform float u_shininess;\r\n\t\t\tuniform float u_specularFactor;\r\n\t\t\tuniform vec3 u_reverseLightDirection;\r\n\r\n\t\t\tvec4 lit(float l ,float h, float m) {\r\n\t\t\t\treturn vec4(\r\n\t\t\t\t\t1.0,\r\n\t\t\t\t\tabs(l),\r\n\t\t\t\t\t(l > 0.0) ? pow(max(0.0, h), m) : 0.0,\r\n\t\t\t\t\t1.0\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tout vec4 finalColor;\r\n\r\n\t\t\tvoid main(void) {\r\n\r\n\t\t\t\tvec4 texel = texture(sampler, v_texCoord);\r\n\t\t\t\tvec3 normal = normalize(v_normal);\r\n\r\n\t\t\t\tfloat lightIntensity = dot(normal, u_reverseLightDirection);\r\n\t\t\t\tvec4 diffuse = u_ambientLightColor + u_lightColor * lightIntensity;\r\n\r\n\t\t\t\tvec3 surfaceToLightDirection = normalize(v_surfaceToLight);\r\n\t\t\t\tvec3 surfaceToCameraDirection = normalize(v_surfaceToCamera);\r\n\t\t\t\tvec3 halfVector = normalize(surfaceToLightDirection + surfaceToCameraDirection);\r\n\r\n\t\t\t\tvec4 specularIntensity = lit(dot(normal, surfaceToLightDirection), dot(normal, halfVector), u_shininess);\r\n\t\t\t\tvec4 specular = u_specularColor * specularIntensity.z * u_specularFactor;\r\n\t\t\t\tvec4 light = diffuse + specular;\r\n\r\n\t\t\t\tvec4 outColor = vec4(texel.rgb * light.xyz, texel.a);\r\n\r\n\t\t\t\tfinalColor = outColor;\r\n\t\t\t}`;\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\tconst shaderProgram = new ShaderProgram(gl, vertexShader, fragmentShader)\r\n\r\n\t\tshaderProgram.activateShader()\r\n\r\n\t\tthis.positionLoc = gl.getAttribLocation(shaderProgram.program as WebGLProgram, GLSetttings.ATTR_POSITION_NAME)\r\n\t\tthis.texCoordLoc = gl.getAttribLocation(shaderProgram.program as WebGLProgram, GLSetttings.ATTR_UV_NAME)\r\n\t\tthis.normalLoc = gl.getAttribLocation(shaderProgram.program as WebGLProgram, GLSetttings.ATTR_NORMAL_NAME)\r\n\r\n\t\tthis.modelViewMatrixLoc = gl.getUniformLocation(shaderProgram.program as WebGLProgram, GLSetttings.UNI_MODEL_MAT) as WebGLUniformLocation\r\n\t\tthis.perspectiveMatrixLoc = gl.getUniformLocation(shaderProgram.program as WebGLProgram, GLSetttings.UNI_PERSPECTIV_MAT) as WebGLUniformLocation\r\n\t\tthis.cameraMatrixLoc = gl.getUniformLocation(shaderProgram.program as WebGLProgram, GLSetttings.UNI_CAMERA_MAT) as WebGLUniformLocation\r\n\t\tthis.projectedTextureLoc = gl.getUniformLocation(shaderProgram.program as WebGLProgram, GLSetttings.UNI_PROJECTED_TEXTURE) as WebGLUniformLocation\r\n\t\tthis.textureMatrixLoc = gl.getUniformLocation(shaderProgram.program as WebGLProgram, GLSetttings.UNI_TEXTURE_MAT) as WebGLUniformLocation\r\n\t\tthis.reverseLightDirectionLoc = gl.getUniformLocation(shaderProgram.program as WebGLProgram, GLSetttings.UNI_REVERSE_LIGHT_DIRECTION_MAT) as WebGLUniformLocation\r\n\r\n\t\tthis.diffuseLoc = gl.getUniformLocation(shaderProgram.program as WebGLProgram, GLSetttings.UNI_DIFFUSE) as WebGLUniformLocation\r\n\t\tthis.ambientLightColorLoc = gl.getUniformLocation(shaderProgram.program as WebGLProgram, GLSetttings.UNI_LIGHT_AMBIENT) as WebGLUniformLocation\r\n\t\tthis.lightPositionLoc = gl.getUniformLocation(shaderProgram.program as WebGLProgram, GLSetttings.UNI_LIGHT_POSITION) as WebGLUniformLocation\r\n\t\tthis.cameraPositionLoc = gl.getUniformLocation(shaderProgram.program as WebGLProgram, GLSetttings.UNI_CAMERA_POSITION) as WebGLUniformLocation\r\n\t\tthis.shininessLoc = gl.getUniformLocation(shaderProgram.program as WebGLProgram, GLSetttings.UNI_CAMERA_SHININESS) as WebGLUniformLocation\r\n\t\tthis.lightColorLoc = gl.getUniformLocation(shaderProgram.program as WebGLProgram, GLSetttings.UNI_LIGHT_COLOR) as WebGLUniformLocation\r\n\t\tthis.specularColorLoc = gl.getUniformLocation(shaderProgram.program as WebGLProgram, GLSetttings.UNI_SPECULAR_COLOR) as WebGLUniformLocation\r\n\t\tthis.specularFactorLoc = gl.getUniformLocation(shaderProgram.program as WebGLProgram, GLSetttings.UNI_SPECULAR_FACTOR) as WebGLUniformLocation\r\n\t\t//Cleanup\r\n\t\tshaderProgram.deactivateShader()\r\n\r\n\t\tthis.perspectiveProjectionMatrix = sceneViewCamera.perspectiveProjection\r\n\t\tthis.orthoProjectionMatrix = sceneViewCamera.orthoProjection\r\n\t\tthis.viewModelMatrix = sceneViewCamera.viewMatrix\r\n\t\tthis.lightViewCamera = lightViewCamera\r\n\t\tthis.sceneViewCamera = sceneViewCamera\r\n\t\tthis.shaderProgram = shaderProgram\r\n\t}\r\n\r\n\tpositionLoc: number\r\n\tnormalLoc: number\r\n\ttexCoordLoc: number\r\n  \r\n\tmodelViewMatrixLoc: WebGLUniformLocation\r\n\tperspectiveMatrixLoc: WebGLUniformLocation\r\n\tcameraMatrixLoc: WebGLUniformLocation\r\n\ttextureMatrixLoc: WebGLUniformLocation\r\n\t\r\n\r\n\tdiffuseLoc: WebGLUniformLocation\r\n\tprojectedTextureLoc: WebGLUniformLocation\r\n\tambientLightColorLoc: WebGLUniformLocation\r\n\tlightPositionLoc: WebGLUniformLocation\r\n\tcameraPositionLoc: WebGLUniformLocation\r\n\tshininessLoc: WebGLUniformLocation\r\n\tlightColorLoc: WebGLUniformLocation\r\n\tspecularColorLoc: WebGLUniformLocation\r\n\tspecularFactorLoc: WebGLUniformLocation\r\n\treverseLightDirectionLoc: WebGLUniformLocation\r\n\r\n\tperspectiveProjectionMatrix: Float32Array\r\n\torthoProjectionMatrix: Float32Array\r\n\tviewModelMatrix: Float32Array\r\n\tlightViewMatrix: Float32Array|null = null\r\n\r\n\tlightViewCamera: Camera\r\n\tsceneViewCamera: Camera\r\n\r\n\tshaderProgram: ShaderProgram\r\n\r\n\r\n\tsetUniforms(gl:WebGLRenderingContext, model: Geometry) {\r\n\t\tthis.shaderProgram.activateShader()\r\n\r\n\t\tconst lightViewMatrix = this.getLightWorldMatrix(this.lightViewCamera, model) as Float32Array\r\n\r\n\t\tgl.uniformMatrix4fv(this.perspectiveMatrixLoc, false, this.perspectiveProjectionMatrix)\r\n\t\tgl.uniformMatrix4fv(this.cameraMatrixLoc , false, this.viewModelMatrix)\r\n\t\tgl.uniformMatrix4fv(this.textureMatrixLoc , false, this.getTextureMatrix(lightViewMatrix))\r\n\t\tgl.uniformMatrix4fv(this.modelViewMatrixLoc, false, model.transform.getModelMatrix())\t//Set the transform, so the shader knows where the model exists in 3d space\r\n\t\tgl.uniform3fv(this.cameraPositionLoc, this.sceneViewCamera.transform.position.getFloatArray())\r\n\t\tgl.uniform3fv(this.reverseLightDirectionLoc, lightViewMatrix.slice(8, 11))\r\n\t\treturn this\r\n    }\r\n\r\n\tgetTextureMatrix(lightWorldMatrix:Float32Array){\r\n\t\tlet textureMatrix = Matrix4.identity();\r\n\t\tMatrix4.translate(textureMatrix, 0.5, 0.5, 0.5);\r\n\t\tMatrix4.scale(textureMatrix, 0.5, 0.5, 0.5);\r\n\t\tMatrix4.mult(textureMatrix, textureMatrix, this.orthoProjectionMatrix)\r\n\t\tlet inverted:any = []\r\n\t\tMatrix4.invert(inverted, lightWorldMatrix)\r\n\t\tMatrix4.mult(textureMatrix, textureMatrix, inverted)\r\n\t\treturn textureMatrix\r\n\t}\r\n\r\n\tgetLightWorldMatrix(lightViewCamera:Camera, model:Geometry){\r\n\t\t// first draw from the POV of the light\r\n\t\treturn Matrix4.lookAt(\r\n\t\t\t[lightViewCamera.transform.position.x, lightViewCamera.transform.position.y, lightViewCamera.transform.position.z], // position\r\n\t\t\t[model.transform.position.x, model.transform.position.y, model.transform.position.z], // target\r\n\t\t\t[0, 1, 0],// up\r\n\t\t);\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\nclass Model {\r\n\r\n  constructor() {}\r\n\r\n  static  createGeometry(gl: WebGLRenderingContext, shaderProgram: ModelShader, vertices: ObjLoader, texture: Texture){ \r\n    return  new Geometry(Model.createMesh(gl, shaderProgram, vertices, texture)); \r\n  }\r\n\r\n  static createMesh(gl: WebGLRenderingContext, shaderProgram: ModelShader, vertices: ObjLoader, texture: Texture) {\r\n\r\n    const vertexCount = vertices.vertexCount();\r\n\t\r\n    const mesh: MeshData = {\r\n      positions : new Vbuffer(gl, vertices.positions(), vertexCount, GLSetttings.BUFFER_TYPE_ARRAY),\r\n      normals: new Vbuffer(gl, vertices.normals(), vertexCount, GLSetttings.BUFFER_TYPE_ARRAY),\r\n      uvs: new Vbuffer(gl, vertices.uvs(), vertexCount, GLSetttings.BUFFER_TYPE_ARRAY),\r\n      texture,\r\n      drawMode : gl.TRIANGLES,\r\n      vertexCount,\r\n    }\r\n\r\n    mesh.positions?.bindToAttribute(shaderProgram.positionLoc as number, GLSetttings.DEFAULT_STRIDE, GLSetttings.DEFAULT_OFFSET)\r\n    mesh.normals?.bindToAttribute(shaderProgram.normalLoc as number, GLSetttings.DEFAULT_STRIDE, GLSetttings.DEFAULT_OFFSET)\r\n    mesh.uvs?.bindToAttribute(shaderProgram.texCoordLoc as number, GLSetttings.DEFAULT_STRIDE, GLSetttings.DEFAULT_OFFSET)\r\n\r\n    return mesh;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n\tModelShader,\r\n\tModel\r\n}","import { Normal, Vector, Surface, UV, Vertex } from \"@/entities\";\r\nimport { NEW_LINE, ObjTypes, BACKSLASH, SPACE, SurfaceStruct, Vec2Struct, Vec3Struct, VertexStruct } from \"@/modules\";\r\n\r\nexport default class ObjLoader {\r\n\r\n    constructor(surfaces: Array < Surface > ) {\r\n        this.surfaces = surfaces;\r\n    }\r\n\r\n    surfaces: Surface[] = [];\r\n\r\n    static parseOBJ(src: string) {\r\n\r\n        const POSITION = ObjTypes.V\r\n        const NORMAL = ObjTypes.VN\r\n        const UV = ObjTypes.VT\r\n        const SURFACE = ObjTypes.F\r\n\r\n        const lines = src.split(NEW_LINE);\r\n        const positions: Vector[] = [];\r\n        const uvs: UV[] = [];\r\n        const normals: Normal[] = [];\r\n        const surfaces: Surface[] = [];\r\n       \r\n        for(let item of lines){\r\n\r\n            const lineItems = item.trim().split(SPACE)\r\n            const type = lineItems[0]\r\n\r\n            if ( POSITION === type) {\r\n                // Add new vertex position\r\n                positions.push(Vec3Struct(parseFloat(lineItems[1]), parseFloat(lineItems[2]), parseFloat(lineItems[3])))\r\n            } else if (NORMAL  === type) {\r\n                // Add new vertex normal\r\n                normals.push(Vec3Struct(parseFloat(lineItems[1]), parseFloat(lineItems[2]), parseFloat(lineItems[3])))\r\n            } else if (UV === type) {\r\n                // Add new texture mapping point\r\n                uvs.push(Vec2Struct(parseFloat(lineItems[1]), 1 - parseFloat(lineItems[2])))\r\n            } else if (SURFACE === type) {\r\n                let isQuad = false\r\n                let shouldExit = false\r\n                let size = 4\r\n                // Add new face\r\n                const vertices: Vertex[] = [];\r\n\r\n                // conditionally detect and parse quads to triangle\r\n                for (let i = 1; i < size; i ++) {\r\n                    if (lineItems.length>size && !shouldExit) {\r\n                        size+=1\r\n                    }else if (i===4 && !isQuad) {\r\n                        i = 3\r\n                        size+=1\r\n                        isQuad = true\r\n                    }else if (i===5 && isQuad) {\r\n                        i=1\r\n                        isQuad = false\r\n                        shouldExit = true\r\n                    } else if(i===2 && shouldExit){\r\n                        break\r\n                    }\r\n                    const part = lineItems[i].split(BACKSLASH)\r\n                    const position = positions[parseInt(part[0]) - 1]\r\n                    const uv = uvs[parseInt(part[1]) - 1]\r\n                    const normal = normals[parseInt(part[2]) - 1]\r\n                    vertices.push(VertexStruct(position, normal, uv))\r\n                }\r\n                \r\n                // split tesselated quads as individual surfaces\r\n                if (vertices.length > 3) {\r\n                    const triagle1 = vertices.slice(0, 3)\r\n                    const triangle2 = vertices.slice(3)\r\n                    surfaces.push(SurfaceStruct(triagle1))\r\n                    surfaces.push(SurfaceStruct(triangle2))\r\n                }else{\r\n                    surfaces.push(SurfaceStruct(vertices))\r\n                }\r\n            }\r\n        }\r\n\r\n        return new ObjLoader(surfaces);\r\n    }\r\n\r\n    static async loadOBJ(url: string) {\r\n        const response = await fetch(url);\r\n        const data = await response.text()\r\n        const surfaces = ObjLoader.parseOBJ(data);\r\n        return surfaces;\r\n    }\r\n\r\n    vertexCount() {\r\n        return this.surfaces.length * 3;\r\n    }\r\n\r\n    positions() {\r\n        const result: number[] = [];\r\n        this.surfaces.forEach(function (surface: Surface) {\r\n            surface.vertices.forEach(function (vertex: Vertex) {\r\n                const v = vertex.position;\r\n                result.push(v.x, v.y, v.z);\r\n            })\r\n        })\r\n\r\n        return result;\r\n    }\r\n\r\n    normals() {\r\n        const result: number[] = [];\r\n        this.surfaces.forEach(function (surface: Surface) {\r\n            surface.vertices.forEach(function (vertex: Vertex) {\r\n                const v = vertex.normal;\r\n                result.push(v.x, v.y, v.z);\r\n            })\r\n        })\r\n\r\n        return result;\r\n    }\r\n\r\n    uvs() {\r\n        const result: number[] = [];\r\n        this.surfaces.forEach(function (surface: Surface) {\r\n            surface.vertices.forEach(function (vertex: Vertex) {\r\n                const v = vertex.uv;\r\n                result.push(v.x, v.y);\r\n            })\r\n        })\r\n\r\n        return result;\r\n    }\r\n}","import Geometry from '../../geometry';\r\nimport Vbuffer from '../../vbuffer';\r\nimport ShaderProgram from '../../shaderProgram';\r\nimport { MeshData } from '@/entities';\r\nimport { GLSetttings } from '@/modules';\r\nimport { Camera } from '../../camera';\r\n\r\nclass InfiniteGridShader{\r\n\tconstructor(gl: WebGLRenderingContext, camera:Camera, lightViewCamera:Camera){\t\r\n\t\tconst vertexShader = `#version 300 es\r\n            layout(location=5) in vec3 a_position;\r\n\r\n\t\t\tuniform mat4 u_mVMatrix;\r\n\t\t\tuniform mat4 u_cameraViewMatrix;\r\n\t\t\tuniform mat4 u_pMatrix;\r\n\r\n\t\t\tvec3 unprojectPoint(float x, float y, float z, mat4 view, mat4 projection) {\r\n                mat4 viewInv = inverse(view);\r\n                mat4 projInv = inverse(projection);\r\n                vec4 unprojectedPoint =  viewInv * projInv * vec4(x, y, z, 1.0);\r\n                return unprojectedPoint.xyz / unprojectedPoint.w;\r\n            }\r\n\r\n\t\t\tout vec3 nearPoint;\r\n\t\t\tout vec3 farPoint;\r\n\t\t\tout mat4 fragView;\r\n            out mat4 fragProj;\r\n\r\n\t\t\tout vec3 vertexPosition;\r\n\r\n\t\t\tvoid main(void){\r\n\t\t\t\tvec3 p = a_position;\r\n\r\n\t\t\t\tfragView = u_cameraViewMatrix;\r\n                fragProj = u_pMatrix;\r\n\t\t\t\tnearPoint = unprojectPoint(p.x, p.y, 0.0, u_cameraViewMatrix, u_pMatrix).xyz;\r\n\t\t\t\tfarPoint = unprojectPoint(p.x, p.y, 1.0, u_cameraViewMatrix, u_pMatrix).xyz;\r\n\r\n\t\t\t\tvertexPosition = p.xyz;\r\n\t\t\t\tgl_Position = vec4(p, 1.0);\r\n\r\n\t\t\t}`;\r\n\r\n\t\tconst fragmentShader = `#version 300 es\r\n\t\t\tprecision highp float;\r\n\r\n\t\t\tin vec3 vertexPosition;\r\n\t\t\tin vec3 nearPoint;\r\n            in vec3 farPoint;\r\n            in mat4 fragView;\r\n            in mat4 fragProj;\r\n\r\n\t\t\t// computes Z-buffer depth value, and converts the range.\r\n\t\t\tfloat computeDepth(vec3 pos) {\r\n\t\t\t\t// get the clip-space coordinates\r\n\t\t\t\tvec4 clip_space_pos = fragProj * fragView * vec4(pos.xyz, 1.0);\r\n\r\n\t\t\t\t// get the depth value in normalized device coordinates\r\n\t\t\t\tfloat clip_space_depth = clip_space_pos.z / clip_space_pos.w;\r\n\r\n\t\t\t\t// and compute the range based on gl_DepthRange settings (not necessary with default settings, but left for completeness)\r\n\t\t\t\tfloat far = gl_DepthRange.far;\r\n\t\t\t\tfloat near = gl_DepthRange.near;\r\n\r\n\t\t\t\tfloat depth = (((far-near) * clip_space_depth) + near + far) / 2.0;\r\n\r\n\t\t\t\t// and return the result\r\n\t\t\t\treturn depth;\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\t\t\tvec4 grid(vec3 fragPos3D, float scale) {\r\n                vec2 coord = fragPos3D.xz * scale;\r\n                vec2 derivative = fwidth(coord);\r\n                vec2 grid = abs(fract(coord - 0.5) - 0.5) / derivative;\r\n                float line = min(grid.x, grid.y);\r\n                float minimumz = min(derivative.y, 1.0);\r\n                float minimumx = min(derivative.x, 1.0);\r\n\t\t\t\tvec3 gridColor = vec3(1.0 - min(line, 1.0));\r\n                vec4 color = vec4(gridColor, 1.0);\r\n                return color;\r\n            }\r\n\r\n            out vec4 finalColor;\r\n\r\n\t\t\tvoid main(void){\r\n\r\n                float t = -nearPoint.y / (farPoint.y - nearPoint.y);\r\n                vec3 fragPos3D = nearPoint + t * (farPoint - nearPoint);\r\n\t\r\n\t\t\t\tfloat isIntersect = (t > 0.0) ? 1.0 : 0.0;\r\n\t\t\t\tfloat linearFieldSection = 0.09 * length(fragPos3D.xz);\r\n\t\t\t\tfloat fading = min(1.0, 1.5 - linearFieldSection);\r\n\r\n\t\t\t\tvec4 gridPattern = grid(fragPos3D, 0.5);\r\n\t\t\t\t\r\n\t\t\t\tvec4 outColor = gridPattern;\r\n\r\n\t\t\t\tfinalColor = outColor * isIntersect;\r\n\t\t\t\tfinalColor *= fading;\r\n\r\n\t\t\t\tgl_FragDepth = computeDepth(fragPos3D);\r\n            }`;\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\tconst shaderProgram = new ShaderProgram(gl, vertexShader, fragmentShader);\r\n\r\n\t\tshaderProgram.activateShader()\r\n\r\n\t\tthis.positionLoc = gl.getAttribLocation(shaderProgram.program as WebGLProgram, GLSetttings.ATTR_POSITION_NAME)\r\n\r\n\t\tthis.modelViewMatrixLoc = gl.getUniformLocation(shaderProgram.program as WebGLProgram, GLSetttings.UNI_MODEL_MAT) as WebGLUniformLocation\r\n\t\tthis.perspectiveMatrixLoc = gl.getUniformLocation(shaderProgram.program as WebGLProgram, GLSetttings.UNI_PERSPECTIV_MAT) as WebGLUniformLocation\r\n\t\tthis.cameraMatrixLoc = gl.getUniformLocation(shaderProgram.program as WebGLProgram, GLSetttings.UNI_CAMERA_MAT) as WebGLUniformLocation\r\n\t\tthis.uColorLoc = gl.getUniformLocation(shaderProgram.program as WebGLProgram, GLSetttings.UNI_COLOR) as WebGLUniformLocation\r\n\t\t//Cleanup\r\n\t\tshaderProgram.deactivateShader()\r\n\r\n\t\tthis.perspectiveProjectionMatrix = camera.perspectiveProjection\r\n\t\tthis.orthoProjectionMatrix = camera.orthoProjection\r\n\t\tthis.viewModelMatrix = camera.viewMatrix\r\n\t\tthis.lightViewModelMatrix = lightViewCamera\r\n\t\tthis.shaderProgram = shaderProgram\r\n\t}\r\n\r\n\tpositionLoc: number\r\n  \r\n\tmodelViewMatrixLoc: WebGLUniformLocation\r\n\tperspectiveMatrixLoc: WebGLUniformLocation\r\n\tcameraMatrixLoc: WebGLUniformLocation\r\n\r\n\tuColorLoc: WebGLUniformLocation\r\n\r\n\tperspectiveProjectionMatrix: Float32Array\r\n\torthoProjectionMatrix:Float32Array\r\n\tviewModelMatrix:Float32Array\r\n\r\n\tlightViewModelMatrix:Camera\r\n\r\n\tshaderProgram: ShaderProgram\r\n\r\n\t\r\n\tsetUniforms(gl:WebGLRenderingContext, model: Geometry) {\r\n\t\tthis.shaderProgram.activateShader()\r\n\r\n\t\tgl.uniformMatrix4fv(this.perspectiveMatrixLoc, false, this.perspectiveProjectionMatrix)\r\n\t\tgl.uniformMatrix4fv(this.cameraMatrixLoc , false, this.viewModelMatrix)\r\n\t\tgl.uniformMatrix4fv(this.modelViewMatrixLoc, false, model.transform.getModelMatrix())\r\n\r\n\t\treturn this\r\n    }\r\n}\r\n\r\n\r\nclass InfiniteGrid {\r\n\r\n  \tconstructor() {}\r\n\r\n   \tstatic createGeometry(gl: WebGLRenderingContext, shaderProgram: InfiniteGridShader){ \r\n    \treturn  new Geometry( InfiniteGrid.createMesh(gl, shaderProgram)); \r\n  \t}\r\n\r\n   static createMesh(gl: WebGLRenderingContext, shaderProgram: InfiniteGridShader) {\r\n\r\n\t\tconst verts = [\r\n\t\t\t1,-1,0,\r\n\t\t\t1,1,0,\r\n\t\t\t-1,-1,0,\r\n\t\t\t-1,1,0,\r\n\t\t\t-1,-1,0,\r\n\t\t\t1,1,0,\r\n\t\t]\r\n\r\n\t\tconst vertexCount = verts.length/3;\r\n\t\tconst strideLen = Float32Array.BYTES_PER_ELEMENT * 3; //Stride Length is the Vertex Size for the buffer in Bytes\r\n\t\tconst mesh: MeshData = {\r\n\t\t\tpositions : new Vbuffer(gl, verts, vertexCount, GLSetttings.BUFFER_TYPE_ARRAY),\r\n\t\t\tdrawMode : gl.TRIANGLES,\r\n\t\t\tvertexCount,\r\n\t\t}\r\n\r\n\t\tmesh.positions?.bindToAttribute(shaderProgram.positionLoc as number, strideLen, GLSetttings.DEFAULT_OFFSET, GLSetttings.GRID_VECTOR_SIZE);\r\n\r\n\t\treturn mesh;\r\n  \t}\r\n}\r\n\r\nexport {\r\n\tInfiniteGridShader,\r\n\tInfiniteGrid\r\n}","export default class Texture {\r\n\r\n    constructor(gl: WebGLRenderingContext, image: HTMLImageElement) {\r\n        const texture = gl.createTexture() as WebGLTexture\r\n        gl.bindTexture(gl.TEXTURE_2D, texture as WebGLTexture)\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image)\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR)\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR)\r\n        gl.generateMipmap(gl.TEXTURE_2D)\r\n\r\n        this.gl = gl\r\n    }\r\n\r\n    gl: WebGLRenderingContext;\r\n\r\n    // Asynchronously load an image\r\n    static async loadTexture(gl: WebGLRenderingContext, url: string): Promise < Texture > {\r\n        const image = new Image()\r\n        image.src = url\r\n        await image.decode()\r\n        const result = new Texture(gl, image)\r\n        return result\r\n    }\r\n\r\n}","import AppLoader from \"@/app/components/core/appLoader\"\r\nimport { PATH_ASSETS_OBJ, PATH_ASSETS_TEXTURE, ProgramEntrySettings } from \"@/modules\"\r\nimport { Camera, CameraController } from \"./camera\"\r\nimport GLContext from \"./glContext\"\r\nimport Light from \"./light\"\r\nimport { Vector3 } from \"./math\"\r\nimport { Model, ModelShader } from \"./model\"\r\nimport ObjLoader from \"./objLoader\"\r\nimport { InfiniteGrid, InfiniteGridShader } from \"./primitives/grid/infinite\"\r\nimport Texture from \"./Textures/texture\"\r\n\r\nexport default class Scene {\r\n    constructor(){\r\n        (async()=>{\r\n            const appLoader = new AppLoader()\r\n            \r\n            const glContext = new GLContext(ProgramEntrySettings.WEBGL_CANVAS_ID)\r\n            const [wp, wh] = [0.95, 0.90]\r\n            glContext.fitScreen(wp, wh).setClearColor(13, 17, 23, 1.0).clear()\r\n            const gl = glContext.getContext() as WebGLRenderingContext\r\n\r\n            const lightViewPosition = new Vector3(0, 2.5, 3)\r\n            const lightView = new Light(lightViewPosition)\r\n            const lightCameraView = new Camera(gl as WebGLRenderingContext)\r\n            lightCameraView.transform.position.set(lightViewPosition.x, lightViewPosition.y, lightViewPosition.z)\r\n\r\n            const vertices = await ObjLoader.loadOBJ(PATH_ASSETS_OBJ)\r\n            const texture = await Texture.loadTexture(gl, PATH_ASSETS_TEXTURE)\r\n            \r\n            const camera = new Camera(gl as WebGLRenderingContext)\r\n            camera.transform.position.set(0, 0.5, 1.5)\r\n            new CameraController(gl as WebGLRenderingContext, camera)\r\n\r\n            const infiniteGridShader = new InfiniteGridShader(gl as WebGLRenderingContext, camera, lightCameraView)\r\n            const infiniteGrid = InfiniteGrid.createGeometry(gl, infiniteGridShader)\r\n\r\n            const modelShader = new ModelShader(gl as WebGLRenderingContext, camera, lightCameraView)\r\n            const model = Model.createGeometry(gl, modelShader, vertices, texture)\r\n            model.setScale(0.0035,0.0035,0.0035).setRotation(0,30,0)\r\n\r\n            appLoader.setDisplayState(false)\r\n\r\n            const loop = () => {\r\n\r\n                camera.updateViewMatrix()\r\n\r\n                infiniteGridShader.setUniforms(gl, infiniteGrid.preRender()).shaderProgram\r\n                    .renderModel(infiniteGrid.preRender())\r\n\r\n                modelShader.setUniforms(gl, model.preRender())\r\n                    .shaderProgram.renderModel(model.preRender())\r\n\r\n                lightView.setUniforms(gl, modelShader)\r\n\r\n                requestAnimationFrame(loop)\r\n            }\r\n            loop()\r\n        })()\r\n\r\n    }\r\n}","import App from \"./app/app\"\r\n\r\n(()=>{\r\n    new App()\r\n})()","import Scene from \"@/core/scene\";\r\n\r\nexport default class App{\r\n    constructor(){\r\n        new Scene()\r\n    }\r\n}"],"sourceRoot":""}